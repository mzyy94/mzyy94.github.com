<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: nas | 犬アイコンのみっきー]]></title>
  <link href="http://mzyy94.com/blog/tags/nas/atom.xml" rel="self"/>
  <link href="http://mzyy94.com/"/>
  <updated>2016-07-06T03:29:42+09:00</updated>
  <id>http://mzyy94.com/</id>
  <author>
    <name><![CDATA[mzyy94]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[RockstorにChinachuを詰め込んで録画NAS作ろ]]></title>
    <link href="http://mzyy94.com/blog/2016/07/05/chinachu-rockon/"/>
    <updated>2016-07-05T00:07:31+09:00</updated>
    <id>http://mzyy94.com/blog/2016/07/05/chinachu-rockon</id>
    <content type="html"><![CDATA[<p><a href="https://mzyy94.com/blog/2016/07/04/do-you-know-rockstor/">昨日紹介したRockstor</a>というNAS用OS、とても便利で快適に使っています。
今まで低消費電力で非力なマシンで動作させていたNASもCore i5で動作するようになり、
もっといろいろとやらせてみたくなりました。
余裕がありそうなので、録画サーバの役割も担ってもらい、録画NASとして我が家で働いてもらいます。</p>

<h2>Rockstor</h2>

<p>昨日の記事でいろいろと紹介しましたが、見る気がない人・ちょっとだけ知っているから見ない人向けにRockstorとは何ぞやを説明すると、
CentOSベースのBtrfsを採用したDockerが載ったNAS用OSです。Dockerが載ってるのはアプリケーションをコンテナの中で
実行させることができるようにする仕組みであるRock-onsのためのものであり、このRock-onsを利用することで
標準でリストアップされてるRock-onであれば、ボタン一つでアプリケーションをインストールすることが可能なのです。
ここで強調したいのは、<em>標準でリストアップされているものであればボタン一つでインストール</em>できるという話で、
標準でリストアップされていないものはボタン操作に加えて<strong>数行のコマンド操作をするだけでインストールができる</strong>といった
隠れた拡張性があるという点です。</p>

<h2>Chinachu</h2>

<p>さて、話題を変えて録画といえばの話。録画といえば過去いろいろなところで何度も紹介しているLinux向けDVR（Digital Video Recorder)
アプリケーションである<a href="https://github.com/kanreisa/Chinachu">Chinachu</a>が快適で使い勝手がよいと評判です。
動作させてからの操作は快適なのですが、動作させるまでがいろいろと面倒くさかったりします。
例えば地上デジタル放送・衛星放送キャプチャボードであるPT3のドライバの導入。初回はもちろんのこと、OSのアップグレードごとに
カーネルモジュールをビルドしてインストールしてなどと、
録画環境を構築する前段階で難しい処理が挟まるのが少々玉に瑕です。
しかし、ドライバなどの環境を整えた後のChinachu自体のセットアップはある程度簡単にできるようになっています。
それどころか、チューナー管理アプリケーションのMirakurun連携とB-CASカードの読み込みまで含めたChinachuの動作環境を、
<strong>Dockerに押し込めてコマンド一発ですべて仕上がる</strong>ようにしたリポジトリがあるくらいに簡単です。</p>

<p><a href="https://github.com/h-mineta/docker-mirakurun-chinachu">h-mineta/docker-mirakurun-chinachu: All in one Mirakurun &amp; Chinachu</a></p>

<h2>PT3 DVBドライバ</h2>

<p>みなが苦労するPT3のドライバの導入作業あれこれに終止符を打つかのように、Linuxカーネルが標準でPT3のドライバを搭載してきました。
DVB(Digital Video Broadcasting)ドライバと呼ばれるそれは、チューナーからの信号をスペシャルファイル経由で簡易に取り出せる機能を
もったもので、このドライバが有効化されているディストリビューションでは先述のようなPT3ドライバの導入に苦戦しなくても放送波を取得
できるようになっているのです。なんとこのドライバ、<strong>Rockstorでは標準で有効</strong>になっており、PT3をマシンに搭載するだけで動作するのです！</p>

<h2>Chinachu Rock-on</h2>

<p>セクションタイトルを見て気づいている人も多いと思いますが、これまでに挙げた3つの事柄が組み合わさって、数行のコマンド入力とクリックだけで動作させられるChinachu rock-onが出来上がってしまいます。</p>

<ol>
<li>新しいRock-onは実は自由に追加できる</li>
<li>ChinachuのDockerイメージがある</li>
<li>PT3のドライバは導入済み</li>
</ol>


<p>これらをいい感じにまとめてRock-onを作成しました。</p>

<p><a href="https://github.com/mzyy94/Chinachu-rockon"><strong>mzyy94/Chinachu-rockon</strong></a></p>

<p>Rock-onはJSONで書かれたRock-onファイルの記述形式に沿った形で自作することで、新たなRock-onを作り上げることができるようになっています。
- Ref. <a href="https://github.com/rockstor/rockon-registry">https://github.com/rockstor/rockon-registry</a></p>

<p>ここのREADMEにあるように、決まった形で書くことでポートの転送や共有ディレクトリの設定、
Docker hubのイメージ取得を自動化し、アプリケーションを実行できます。</p>

<p>ChinachuのDockerfileがあるので、これをDVB版のPT3ドライバで動作するように書き換え、かつRock-onのファイル共有方法に適した方法で設定ファイルなどを管理できるように変更してDocker hubにプッシュしてRock-onを完成させました。</p>

<h2>Chinachu Rock-on のインストール</h2>

<p>大前提として、RockstorをインストールしたマシンにPT3とSmartCardリーダーが接続されていることとして話を進めます。</p>

<p>冒頭でも述べたように、標準でリストアップされているRock-onであればボタン一つで起動できますが、リストアップされていないものに関してはコマンド入力が必要となります。
この点において、Rock-onsは超お手軽と手放しで喜べない部分ではありますが、普通にChinachuをセットアップするよりは数倍は楽になっていると思うので我慢してください。
Chinachu-rockonのリポジトリのREADMEにも書いてありますが、必要な作業は</p>

<ol>
<li>chinachu.jsonをダウンロード</li>
<li>rock-ons metastoreディレクトリを作成</li>
<li>Rockstorにchinachu.jsonを転送</li>
<li>Rock-onサービスが起動してなかったら起動する</li>
<li>Rock-onsのUpdateをする</li>
<li>Chinachuとチューナ管理アプリケーションのMirakurunの設定場所と録画の保存先の共有ディレクトリを作成する</li>
<li>Chinachu Rock-onを起動する</li>
</ol>


<p>となっています。
chinachu.jsonは<a href="https://github.com/mzyy94/Chinachu-rockon/releases">こちら</a>にあるので適当にダウンロードしてもらって、
ダウンロードしたディレクトリで以下のコマンドを実行するとステップ3まで終了します。your-rockstor-ipはRockstorに割り当てられたIPアドレスに変更して、パスワードを求められたらRockstorのrootパスワードを入力して実行してください。
<code>
ssh root@your-rockstor-ip mkdir /opt/rockstor/rockons-metastore
scp chinachu.json root@your-rockstor-ip:/opt/rockstor/rockons-metastore
</code>
そしてRock-onsのサービスが起動してなかったら起動し、その後Updateボタンを押すと、Chinachuがリストアップされてきます。</p>

<p><img src="/blog/resources/images/2016/07/05/chinachu-rockon-listed.png" alt="Listed up" /></p>

<p>Rock-onsの一覧にChinachuが現れてもあわててインストールせずに、
ChinachuとMirakurunの設定ファイルと録画を保存する共有ディレクトリを作成します。
ここで重要なのは、Chinachu関連のディレクトリとMirakurun関連のディレクトリは必ず別の共有ディレクトリを作成する必要があるというところです。
ChinachuのデータとMirakurunのデータが衝突してうまく動作しなくなります。
逆を言えば、Chinachuの設定とデータは同じディレクトリにしてもいいですし、Mirakurunの設定とデータベースも同じディレクトリにしてOKです。
また、録画ファイル保存ディレクトリは大容量必要ですが、それ以外は1GBもあれば十分でしょう。</p>

<p><img src="/blog/resources/images/2016/07/05/created-shares.png" alt="Created share" /></p>

<p>共有ディレクトリの作成が済んだらChinachuのインストールをしましょう。
インストールといっても設定する項目はほとんどなく、設定する必要のあるのは以下の5つの共有ディレクトリの指定だけです。</p>

<ul>
<li><strong>[Chinachu Config Storage]</strong> Chinachuの設定ファイル保存ディレクトリ</li>
<li><strong>[Chinachu Data Storag]</strong> Chinachuのデータ保存ディレクトリ</li>
<li><strong>[Mirakurun Config Storage]</strong> Mirakurunの設定ファイル保存ディレクトリ</li>
<li><strong>[Mirakurun Database Storage]</strong> Mirakurunのデータベース保存ディレクトリ</li>
<li><strong>[Recording Storage]</strong> 録画ファイル保存ディレクトリ</li>
</ul>


<p>それぞれ先ほど作成した共有ディレクトリを指定し、ポート番号の設定はデフォルトのままでステップを進めていき、インストールは完了です。</p>

<p><img src="/blog/resources/images/2016/07/05/install-step-1.png" alt="Install step 1" />
<img src="/blog/resources/images/2016/07/05/install-step-2.png" alt="Install step 2" />
<img src="/blog/resources/images/2016/07/05/install-step-3.png" alt="Install step 3" /></p>

<p>チャンネル設定などが適当なのでChinachuとMirakurunの設定ファイルを保存した共有ディレクトリにあるchannels.ymlやconfig.jsonを編集してChinachuを再起動させて完成です。
録画ファイル保存ディレクトリをAFPで共有したり、各々のChinachuライフを快適にお過ごしください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NAS用OSにRockstorという選択]]></title>
    <link href="http://mzyy94.com/blog/2016/07/04/do-you-know-rockstor/"/>
    <updated>2016-07-04T20:12:14+09:00</updated>
    <id>http://mzyy94.com/blog/2016/07/04/do-you-know-rockstor</id>
    <content type="html"><![CDATA[<p>みなさんはNASのOSとして何を使っていますか？
FreeNAS、OpenMediaVault、巷にはいくつもOSSのNAS用OSがあります。
なにを選んだらいいのでしょう？</p>

<p>少し前までは非力なAtomサーバ機にNAS4Freeを入れて使っていましたが、PCでゲームをすることが
ほとんどなくなったので、GameStreamサーバ(旧メインサーバー)を解体してNASとして稼働させることにしました。</p>

<p><img src="/blog/resources/images/2014/4/6/Servers.jpg" alt="図：古いマシン構成の図" /></p>

<p>NAS4Freeを使っていた理由はAtomサーバ機に搭載されている256MBフラッシュメモリにOSが焼き込め、
ある程度長期の運用に向いているだろうという直感で決めていました。</p>

<p>旧GameStreamサーバを解体したため、GPUは取り外したもののSandy世代のi5が載っており、
今までのAtom 330とは段違いの性能があります。
せっかくなのでココは冒険と、RockstorなるNAS用OSを導入してみました。</p>

<!-- more -->


<h2>Rockstorとは</h2>

<p><img src="/blog/resources/images/2016/07/04/rockstor-dashboard.png" alt="Dashboard" /></p>

<p><a href="http://rockstor.com/">Rockstor</a>とは、Rockstor, Inc.が開発・サポートをしているオープンソースの
NAS用OSです。多々あるNAS用OSと同じWebからの操作形態となっていますが、機能を盛り込みすぎて
ごたごたしている今どきのNAS用OSの操作画面とは真逆を行っていて、簡潔さと美しさで
UXの面では他を抜いて抜群に優れているインターフェースです。操作性のために情報量を犠牲にしていることは決してなく、
ダッシュボードに表示される情報は見ているだけでもうっとりくるような仕上がりとなっています。</p>

<p><img src="/blog/resources/images/2016/07/04/rockstor-services.png" alt="Services" /></p>

<p>NAS用OSとうたっているだけあって、標準でSFTP・SMB・AFPなどのファイル共有プロトコル
のサービスがインストールされていて、共有するフォルダを選択するだけでNASと化すすぐれものです。</p>

<p><img src="/blog/resources/images/2016/07/04/rockstor-shares.png" alt="Shares" /></p>

<p><img src="/blog/resources/images/2016/07/04/rockstor-file-sharing.png" alt="File sharing" /></p>

<p>ベースとなるOSは、古くからNAS用OSのトップを走ってきたFreeNASを中心とした
FreeBSDベースとは違って、そこからフォークしたOpenMediaVaultと同じLinuxベースとなっています。
OpenMediaVaultがDebianディストリビューションをベースとしている中、このRockstorはCentOSをベースと
しています。個人的なLinuxディストリビューションの宗派はDebianなので、ベースOSの違いで
このRockstorを選んだわけではさらさらなく、Rockstorに搭載されている
FreeNASに負けず劣らずの強力な機能に惹かれてしまったのです。</p>

<h2>Btrfsの採用</h2>

<p><img src="/blog/resources/images/2016/07/04/rockstor-pools.png" alt="Pools" /></p>

<p>FreeNASはFreeBSDの血を色濃く残しており、ファイルシステムはZFSを標準としています。
FreeNASを使っていたころ、ZFSのRAID-Zに<del>親を殺されて</del>ディスクを抹消されてからいい印象がなかったため、
NAS4FreeではUFSで運用していました。</p>

<p><img src="/blog/resources/images/2016/07/04/rockstor-snapshot.png" alt="Snap shot" /></p>

<p>UFSではスナップショットの作成がままならなかったり、冗長性の面で不安なこともあり、なにかそういった点で
特徴のあるファイルシステムが使いたいところでした。その希望にぴたりとあてはまっていたのがこのRockstor
が採用するBtrfs。詳しいことはよくわからないですが、とにかくすごいのです。どれくらいすごいのか
言葉で表すのは難しいのですが、ファイルを書き込むときにプラッタにしみこんでいく感覚が伝わってくると思います。
<del>くわしい情報は<a href="https://twitter.com/naota344">こちら</a>から。</del></p>

<h3>インストール時のハードディスク指定注意</h3>

<p>Btrfsをベースとしていますが、標準のオートパーティション分割ではLVMを構成してしまってインストール後の起動でBtrfsにインストールしろと怒られるので、インストール時のストレージ選択でI will configure partitioning.を選ぶといいです。</p>

<p><img src="/blog/resources/images/2016/07/04/install-manual-partitioning1.png" alt="Install into btrfs" />
<img src="/blog/resources/images/2016/07/04/install-manual-partitioning2.png" alt="Install into btrfs" /></p>

<h2>Rock-onsという名のDockerアプリケーション環境</h2>

<p>Rockstorの旨みはBtrfs採用でファイル共有ができるNASというところにとどまりません。
アプリケーションの追加を手軽に行うRock-onsと呼ばれる機能があるのです。
Rock-onsは、アプリケーションをDockerコンテナで実行し、Rockstorの環境を汚すことなく
様々な機能を<strong>ボタン一つで</strong>追加する機能です。
FreeNASにもJailとしてアプリケーションをコンテナに押し込む方法がありますが、コマンド入力が多々必要だったり、
そもそも設定するためにメニューを探してはさまざまな情報を入力させられるなど、手軽とは言い難いものです。
対してRock-onsは、あらかじめRock-onsレジストリに登録されたアプリケーションしか標準では実行できないものの、
登録されているアプリケーションであればボタン一つでポチポチと進めていくだけでアプリケーションを動作
させることができるのです。</p>

<p><img src="/blog/resources/images/2016/07/04/rockstor-rockons.png" alt="Rock-ons" /></p>

<p>例えばGitLab CE Rock-onでは、リポジトリの保存先などを設定していくだけで、
Rock-ons上、すなわちNASのDocker上で軽々とGitLab CEを動作させることができます。</p>

<p><img src="/blog/resources/images/2016/07/04/rockstor-rockons-installed.png" alt="Rock-ons installed" /></p>

<h2>まとめ</h2>

<p>Webからの操作では自由度に制限があるものの、これくらい手軽でないとせっかくNAS用OSとして登場
してきているのにCentOSを素手で触ったほうがマシと感じることもあるでしょう。Rockstor、めんどくさがり家のあなたにどうですか？</p>
]]></content>
  </entry>
  
</feed>
