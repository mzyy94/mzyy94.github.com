<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Tag: netagent | 犬アイコンのみっきー]]></title>
  <link href="http://mzyy94.com/blog/tags/netagent/atom.xml" rel="self"/>
  <link href="http://mzyy94.com/"/>
  <updated>2015-04-14T00:07:08+09:00</updated>
  <id>http://mzyy94.com/</id>
  <author>
    <name><![CDATA[mzyy94]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[ネットエージェント最終面接問題 Write-up その2]]></title>
    <link href="http://mzyy94.com/blog/2015/04/14/netagent-mondai5-6/"/>
    <updated>2015-04-14T00:05:14+09:00</updated>
    <id>http://mzyy94.com/blog/2015/04/14/netagent-mondai5-6</id>
    <content type="html"><![CDATA[<p>ネットニュースサイトにも取り上げられ、盛り上がりを見せていたネットエージェントのいきなり最終面接mondaiのWrite-upその2です。</p>

<ul>
<li><a href="http://nlab.itmedia.co.jp/nl/articles/1503/30/news143.html">「解けたらいきなり最終面接」 ネットエージェント、今年も新卒向けに“難問”出題 - ねとらぼ</a></li>
</ul>


<p>某所ではこれらのmondaiを10分で解けたとの声が上がっているようで、世の中にはこの記事とは比べ物にならないくらい効率のよい解き方をしている方がいるようです。それらの解法と比べると、この記事の解法は全部解くのに数日かかっているので、内容が無いも同然という位置付けとなります。
もし10分で解いた猛者たちの解法が公開されていたら、この記事ではなくそちらをご覧になることをお勧めします。</p>

<p>昨日の<a href="/blog/2015/04/13/netagent-mondai1-4/">mondai1からmondai4までのWrite-upの記事</a>に続き、今日はmondai5とmondai6のWrite-upを公開します。</p>

<!-- more -->


<h1>mondai5</h1>

<p>mondai4.zipを解凍した際に出てきたファイル、mondai5は何だろうかと<code>file</code>コマンドを用いて調べると、ASCII textであるらしいことがわかります。テキストエディタで開いてみると、各行76文字で折り返されている、長いBASE64エンコードされた文字列が記載されていました。
そのまま<code>base64</code>に食べさせてデコードします。
<code>sh
$ base64 -D mondai5 -o mondai5-1
</code></p>

<p>デコードしてできたmondai5-1を<code>file</code>コマンドで調べてみるとまたもASCII textで、内容も先ほどと同じように、各行76文字で折り返されたBASE64エンコード文字列が書かれています。
同じように<code>base64</code>でデコードしてmondai5-2を作成します。</p>

<p>作成したmondai5-2を調べると、なんとmondai5、mondai5-1と同じ形で、またも64エンコード文字列が書かれてるASCII textでした。
これもまた<code>base64</code>でデコードしてmondai5-3を作成します。
できあがった<strong>mondai5-3も同じ形式</strong>なので、同様の手順でmondai5-4を作成します。</p>

<p>mondai5-4は<code>file</code>コマンドで調べると、以下のように返してきます。
<code>sh
$ file mondai5-4
mondai5-4: uuencoded or xxencoded text
</code></p>

<p>uuencodeされた文字列が格納されているようです。
<code>uudecode</code>コマンドでmondai5-5を作成します。</p>

<pre><code class="sh">$ uudecode -o mondai5-5 mondai5-4
</code></pre>

<p>mondai5-5を調べてみるとgzip圧縮ファイルだということがわかります。
<code>sh
$ file mondai5-5
mondai5-5: gzip compressed data, from Unix, last modified: Thu Mar 19 17:31:56 2015
</code></p>

<p><code>gunzip</code>で解凍してmondai5-6を作成します。</p>

<pre><code class="sh">$ gunzip -d mondai5-5 -c &gt; mondai5-6
</code></pre>

<p>mondai5-6を調査してみましょう。<code>file</code>コマンドによるとzip圧縮ファイルとのことなので、中身を調べてみます。
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file mondai5-6
</span><span class='line'>mondai5-6: Zip archive data, at least v1.0 to extract
</span><span class='line'><span class="nv">$ </span>7z l mondai5-6
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Listing archive: mondai5-6&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;--
</span><span class='line'><span class="nv">Path</span> <span class="o">=</span> mondai5-6
</span><span class='line'><span class="nv">Type</span> <span class="o">=</span> zip
</span><span class='line'>Physical <span class="nv">Size</span> <span class="o">=</span> 1472&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;   Date      Time    Attr         Size   Compressed  Name&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;hr /&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;2015-03-18 18:50:16 ....A         <span class="m">1332</span>         <span class="m">1332</span>  nek&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;hr /&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;                              <span class="m">1332</span>         <span class="m">1332</span>  <span class="m">1</span> files, <span class="m">0</span> folders
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;pre&gt;&lt;code&gt;
</span><span class='line'>nekというファイルが格納されているようです。<span class="sb">`</span>7z<span class="sb">`</span>コマンドで解凍してnekを取り出します。
</span><span class='line'>&lt;/code&gt;&lt;/pre&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;<span class="nv">$ </span>7z x mondai5-6&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Processing archive: mondai5-6&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Extracting  nek&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Everything is Ok&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Size:       1332
</span><span class='line'>Compressed: 1472
</span></code></pre></td></tr></table></div></figure></p>

<p>nekを調べると、bzip圧縮ファイルとのことなので、<code>bzip2</code>コマンドで解凍します。</p>

<pre><code class="sh">$ file nek
nek: bzip2 compressed data, block size = 900k
$ bzip2 -d nek -c &gt; mondai5-8
</code></pre>

<p>mondai5-8は7z圧縮ファイルとのことなので、<code>7z</code>コマンドで解凍します。
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file mondai5-8
</span><span class='line'>mondai5-8: 7-zip archive data, version 0.3
</span><span class='line'><span class="nv">$ </span>7z x mondai5-8&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Processing archive: mondai5-8&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Extracting  n&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Everything is Ok&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;Size:       974
</span><span class='line'>Compressed: 1082
</span></code></pre></td></tr></table></div></figure></p>

<p>これによって、nというファイルが展開されます。このファイルはrar圧縮ファイルとのことなので<code>unrar</code>で解凍します。</p>

<pre><code class="sh">$ file n
n: RAR archive data, v1d, os: Win32
$ unrar x n

UNRAR 5.20 beta 1 freeware      Copyright (c) 1993-2014 Alexander Roshal


Extracting from n

Extracting  ne                                                        OK
All OK
</code></pre>

<p>neというファイルが出てきましたね。neはlha圧縮されたファイルとのことなので、<code>lha</code>コマンドで解凍します。</p>

<pre><code class="sh">$ file ne
ne: LHarc 1.x/ARX archive data [lh0]
$ lha x ne
nex     - Melted   :  o
</code></pre>

<p>nexファイルが出来上がりました。はい。調べるとxz圧縮なので<code>xz</code>で解凍します。</p>

<pre><code class="sh">$ file nex
nex: xz compressed data
$ xz -d nex -c &gt; mondai5-12
</code></pre>

<p>ちょっと疲れたのでコーヒーを飲みます。</p>

<p>mondai5-12を<code>file</code>コマンドで調べると、なんと、判定してくれません！（貧弱なfileめ）</p>

<pre><code class="sh">$ file mondai5-12
mondai5-12: data
</code></pre>

<p>マジックナンバーを見てみると、MSWIMとなってることが確認出ました。</p>

<pre><code class="sh">$ xxd mondai5-12 | head -2
0000000: 4d53 5749 4d00 0000 d000 0000 000d 0100  MSWIM...........
0000010: 8000 0000 0000 0000 4ef7 dcb4 6e01 bfe4  ........N...n...
</code></pre>

<p>Googleで「&#8221;MSWIM&#8221; magic number」として調べると、1番目に次のページがヒットします。</p>

<p><a href="http://en.wikipedia.org/wiki/Windows_Imaging_Format">Windows Imaging Format - Wikipedia, the free encyclopedia</a></p>

<p>このWikipediaの記事の最後に、<em>LZX圧縮だし7zとかで開けるよ（意訳）</em>と書いてあるので、<code>7z</code>で展開を試みてみます。</p>

<pre><code class="sh">$ 7z x mondai5-12

7-Zip [64] 9.20  Copyright (c) 1999-2010 Igor Pavlov  2010-11-18
p7zip Version 9.20 (locale=utf8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai5-12

Extracting  QRcode

Everything is Ok

Size:       16052
Compressed: 17310
</code></pre>

<p>あっさりと展開でき、QRcodeという名のファイルが出てきました。
このファイルの形式はSun raster image dataとのことです。</p>

<pre><code class="sh">$ file QRcode
QRcode: Sun raster image data, 123 x 123, 8-bit, RGB colormap
</code></pre>

<p>画像データらしいですが、開けるアプリケーションを持ち合わせていないので、ImageMagickに投げ込んでみます。</p>

<pre><code class="sh">$ convert QRcode qrcode.png
$ file qrcode.png
qrcode.png: PNG image data, 123 x 123, 4-bit grayscale, non-interlaced
</code></pre>

<p>さすがImageMagick難なく変換できたすごい！
簡単に開ける形式の画像ファイルができたので開いてみます。</p>

<p><img src="/blog/resources/images//qrcode.png" alt="qrcode.png" /></p>

<p><a href="/blog/2014/12/07/seccon2014-online/">半分食べられてしまったパンケーキ</a>ではなく、普通のQRコードでした。</p>

<p>適当なQRコードリーダーで読み込むと、以下のような文字列が得られます。
<code>
+BCcENQQxBEMEQAQwBEgEOgQw-
</code>
+で始まり-で終わる文字列、そう、UTF-7エンコード文字列です。
+と-の間はUTF-16のBASE64エンコード文字列（ただしパッディングの=が省略されている）なので、<code>nkf</code>で変換してみます。
<code>sh
$ echo BCcENQQxBEMEQAQwBEgEOgQw | nkf -mB -W16B
</code></p>

<!--
Чебурашка
-->


<p>何やらロシア語らしきものが出てきます。意味を調べると、ロシアの絵本のキャラクターとのことです。</p>

<p><img src="/blog/resources/images//Cheburashka.jpg" alt="Cheburashka.jpg" /></p>

<p>これ以上解くものがなくなったので、これがmondai5の答えのようです。しかし、<code>7z</code>コマンドで解凍を試みると、パスワードが違うと言われる始末です。</p>

<p>p7zipの<code>7z</code>コマンドによる非ASCII文字パスワード付き7zipの解凍・圧縮は、環境によって正しく処理されないということを、以前日本語パスワードをセットしたときに経験したのを思い出し、本家7zipの<code>7z.exe</code>を使って解凍をしてみます。</p>

<pre><code class="sh">$ wine 7z.exe x mondai6.zip

7-Zip [64] 9.35 beta  Copyright (c) 1999-2014 Igor Pavlov  2014-12-07

Processing archive: mondai6.zip

Extracting  hint6.txt
Enter password (will not be echoed):

Extracting  mondai6.txt
Extracting  mondai7.zip

Everything is Ok

Files: 3
Size:       70362410
Compressed: 70373511

Kernel  Time =     0.046 =    1%
User    Time =     0.780 =   17%
Process Time =     0.826 =   18%    Virtual  Memory =      2 MB
Global  Time =     4.394 =  100%    Physical Memory =      4 MB
</code></pre>

<!--
$ wine 7z.exe x mondai6.zip -pЧебурашка

7-Zip [64] 9.35 beta  Copyright (c) 1999-2014 Igor Pavlov  2014-12-07

Processing archive: mondai6.zip

Extracting  hint6.txt
Extracting  mondai6.txt
Extracting  mondai7.zip

Everything is Ok

Files: 3
Size:       70362410
Compressed: 70373511

Kernel  Time =     0.046 =    5%
User    Time =     0.811 =   89%
Process Time =     0.858 =   94%    Virtual  Memory =      2 MB
Global  Time =     0.909 =  100%    Physical Memory =      4 MB
-->


<p>解凍できました！（やっと終わった。。）</p>

<h1>mondai6</h1>

<p>mondai6.txtには以下のように記載がありました。
<code>
http://49.212.84.208/cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi
</code>
実際にこのURLにアクセスしに行くと、次のようなレスポンスを得られました。</p>

<pre><code class="sh">$ curl -v http://49.212.84.208/cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi
* Hostname was NOT found in DNS cache
*   Trying 49.212.84.208...
* Connected to 49.212.84.208 (49.212.84.208) port 80 (#0)
&gt; GET /cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi HTTP/1.1
&gt; User-Agent: curl/7.37.1
&gt; Host: 49.212.84.208
&gt; Accept: */*
&gt; 
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 07 Apr 2015 08:20:21 GMT
* Server Apache/2.2.3 (CentOS) is not blacklisted
&lt; Server: Apache/2.2.3 (CentOS)
&lt; Connection: close
&lt; Transfer-Encoding: chunked
&lt; Content-Type: text/html; charset=utf-8
&lt; 
{ [data not shown]

* Closing connection 0
&lt;HTML&gt;&lt;BODY&gt;use R4000
&lt;/BODY&gt;&lt;/HTML&gt;
</code></pre>

<p>なにやらR4000を使えとの文字だけが返ってきました。
R4000でGoogle検索すると、MIPSのプロセッサ情報がいくつか引っかかります。
MIPS R4000を搭載したデバイスでアクセスすればいいのかな？と思ったので、
Googleで「MIPS R4000 デバイス」で検索し、MIPS R4000搭載のデバイスを探してみました。</p>

<p><img src="/blog/resources/images//mips-r4000-search.png" alt="mips-r4000-search.png" /></p>

<p>検索結果1ページ目によると、PSPに搭載されているとの情報がいくつかヒットしていました。
早速PSPのブラウザからアクセスする際に送られるUser-Agentを調べてみます。</p>

<p><a href="http://www.openspc2.org/userAgent/">userAgent一覧/ユーザーエージェント一覧</a></p>

<p>このサイトによると、PSPのUAは、
<code>
Mozilla/4.0 (PSP PlayStation Portable); 2.00)
</code>
となっているようです。</p>

<p>早速このUAで先ほどのURLにアクセスしてみます。</p>

<pre><code class="sh">$ curl -v -A 'Mozilla/4.0 (PSP PlayStation Portable); 2.00)' http://49.212.84.208/cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi
* Hostname was NOT found in DNS cache
*   Trying 49.212.84.208...
* Connected to 49.212.84.208 (49.212.84.208) port 80 (#0)
&gt; GET /cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi HTTP/1.1
&gt; User-Agent: Mozilla/4.0 (PSP PlayStation Portable); 2.00)
&gt; Host: 49.212.84.208
&gt; Accept: */*
&gt;
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 07 Apr 2015 08:31:47 GMT
* Server Apache/2.2.3 (CentOS) is not blacklisted
&lt; Server: Apache/2.2.3 (CentOS)
&lt; Content-Length: 42
&lt; Connection: close
&lt; Content-Type: text/html; charset=utf-8
&lt;
* Closing connection 0
&lt;HTML&gt;&lt;BODY&gt;de la Bucure?ti
&lt;/BODY&gt;&lt;/HTML&gt;
</code></pre>

<p>レスポンスが変わりました。知らない国の言葉で書かれていたのでGoogle翻訳にタイプしてみると、ルーマニア語であるとの情報を得ました。</p>

<p>先ほどのレスポンスの一部文字が&#8221;?&#8221;となっているので、ルーマニア語を許容するヘッダーを付加すると表示が変わるかもしれないと思い、Accept-Languageにルーマニア語を指定してアクセスしてみました。</p>

<pre><code class="sh">$ curl -v -H 'Accept-Language: ro-RO' -A 'Mozilla/4.0 (PSP PlayStation Portable); 2.00)' http://49.212.84.208/cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi
* Hostname was NOT found in DNS cache
*   Trying 49.212.84.208...
* Connected to 49.212.84.208 (49.212.84.208) port 80 (#0)
&gt; GET /cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi HTTP/1.1
&gt; User-Agent: Mozilla/4.0 (PSP PlayStation Portable); 2.00)
&gt; Host: 49.212.84.208
&gt; Accept: */*
&gt; Accept-Language: ro-RO
&gt;
&lt; HTTP/1.1 200 OK
&lt; Date: Tue, 07 Apr 2015 08:35:33 GMT
* Server Apache/2.2.3 (CentOS) is not blacklisted
&lt; Server: Apache/2.2.3 (CentOS)
&lt; Connection: close
&lt; Transfer-Encoding: chunked
&lt; Content-Type: text/html; charset=utf-8
&lt;
* Closing connection 0
&lt;HTML&gt;&lt;BODY&gt;key: Minesweeper1990
&lt;/BODY&gt;&lt;/HTML&gt;
</code></pre>

<p>表示が変わり、mondai6の答えが出てきました。mondai7.zipのパスワードに指定して解凍してmondai6はおしまいです。</p>

<pre><code class="sh">$ 7z x mondai7.zip

7-Zip [64] 9.20  Copyright (c) 1999-2010 Igor Pavlov  2010-11-18
p7zip Version 9.20 (locale=utf8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai7.zip

Extracting  hint7.txt
Enter password (will not be echoed) :

Extracting  mondai8.zip
Extracting  normal.exe

Everything is Ok

Files: 3
Size:       70383731
Compressed: 70362268
</code></pre>

<!--
$ 7z x mondai7.zip -pMinesweeper1990

7-Zip [64] 9.20  Copyright (c) 1999-2010 Igor Pavlov  2010-11-18
p7zip Version 9.20 (locale=utf8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai7.zip

Extracting  hint7.txt
Extracting  mondai8.zip
Extracting  normal.exe

Everything is Ok

Files: 3
Size:       70383731
Compressed: 70362268
-->


<p>明日はmondai7からmondai9までのWrite-upを公開する予定です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットエージェント最終面接問題 Write-up その1]]></title>
    <link href="http://mzyy94.com/blog/2015/04/13/netagent-mondai1-4/"/>
    <updated>2015-04-13T14:08:49+09:00</updated>
    <id>http://mzyy94.com/blog/2015/04/13/netagent-mondai1-4</id>
    <content type="html"><![CDATA[<p>恒例のネットエージェントのいきなり最終面接問題が3月末に公開されました。</p>

<ul>
<li><a href="http://www.netagent.co.jp/recruit/newgraduates_2016.html">2016年度 新卒採用｜ネットエージェント株式会社</a></li>
</ul>


<p>ネットニュースサイトにも取り上げられ（<a href="http://nlab.itmedia.co.jp/nl/articles/1503/30/news143.html">「解けたらいきなり最終面接」 ネットエージェント、今年も新卒向けに“難問”出題 - ねとらぼ</a>）、盛り上がりを見せていたあのmondaiです。
2016年新卒として、書類審査や2次選考を飛ばして最終面接を受けられるということなので本腰を入れて取り組んでみました。
このいきなり最終面接問題に関しては、全問正解しなければ回答の公開をしてはいけないとのことだったので察しがつくと思いますが、なんとかすべての問題をクリアできました。
これらmondaiを解いてきた過程をWrite-upとして残すことにしたので、興味がある方はご覧ください。</p>

<p>この記事ではmondai1からmondai4までの回答を掲載しています。</p>

<!-- more -->


<h1>mondai1</h1>

<pre><code>選考過程を縮めたい方に問題を用意いたしました。問題に答えると最終面接から始められます。 
※２０１６年３月卒業予定の方以外も挑戦していただけますが、採用対象とはなりません。
問題：LzYxMDIvcGouaGJwLy86cHR0aA==
</code></pre>

<p>BASE64でエンコードされた文字列を渡されるので、ちょちょっとコマンドを打つと逆さまになったURLがでてきます。</p>

<p>なので<code>rev</code>コマンドを噛ませて逆順にしてアクセス可能なURLが表示されたらmondai1はおしまいです。</p>

<pre><code class="sh">$ echo LzYxMDIvcGouaGJwLy86cHR0aA== | base64 -D | rev
</code></pre>

<!--
http://pbh.jp/2016/
-->


<h1>modai2</h1>

<p>mondai1の答えのURLにアクセスするとzip圧縮されたファイルを入手でき、そのファイルを展開するとmondai2.txtとzip形式の圧縮ファイルがあります。mondai2.txtの内容は以下の通りでした。</p>

<pre><code>2016の平方根の小数点以下2016桁目から20桁をパスワードにしました。
</code></pre>

<p>大きな有効数字の平方根を扱えるコマンドが*nix系システムには存在します。そう<code>bc</code>コマンドです。</p>

<p>この<code>bc</code>コマンドを用いて小数点以下2035桁(2015番目から20桁)の2016の平方根を計算させます。
<code>bc</code>コマンドによる出力は、適当な桁数で折り返しがあるので<code>perl</code>の正規表現を用いて削り、<code>tail</code>で終端から20バイトを取り出します。</p>

<pre><code class="sh">$ echo 'scale=2015+20;sqrt(2016)' | bc | perl -pe's/\\?\n//' | tail -c20
</code></pre>

<!--
74571026133060730881
-->


<p>これをパスワードとして入力すればmondai3.zipを解凍できます。</p>

<pre><code>$ 7z x mondai3.zip 

7-Zip [64] 9.20  Copyright (c) 1999-2010 Igor Pavlov  2010-11-18
p7zip Version 9.20 (locale=utf8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai3.zip

Extracting  hint3.txt
Enter password (will not be echoed) :

Extracting  mondai3.txt
Extracting  mondai4.zip

Everything is Ok

Files: 3
Size:       70392202
Compressed: 70392736
</code></pre>

<!--

$ 7za x mondai3.zip -p74571026133060730881

7-Zip (a) [64] 9.38 beta  Copyright (c) 1999-2014 Igor Pavlov  2015-01-03
p7zip Version 9.38.1 (locale=ja_JP.UTF-8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai3.zip

Extracting  hint3.txt
Extracting  mondai3.txt
Extracting  mondai4.zip

Everything is Ok

Files: 3
Size:       70392202
Compressed: 70392736

-->


<h1>mondai3</h1>

<p>mondai3.txtの中身は以下の通り。</p>

<pre><code>ハッシュパスワード問題
答え：３つの答えをつなげて

0f1aae8b8398c20f81e1c36e349a7880c9234c63
01821f5469967540a5a774197463e8c4d658f588
264f39cab871e4cfd65b3a002f7255888bb5ed97
</code></pre>

<p>パスワードを3つに分割してSHA1ハッシュを生成したものが記されており、それらの元の文字列を探し出せばいいというもの。広いWebの世界には単純な単語のハッシュ化前後のテーブルが存在し、手軽に利用できるものに
<a href="http://www.hashkiller.co.uk/sha1-decrypter.aspx">SHA1 Decrypter - SHA1 Decryption, Free SHA1 Decryptor, Online SHA1 Cracker, SHA1 Security</a>などがあります。このサイトに問題のハッシュ値をペーストして探索をかけると1秒足らずでハッシュ化前の数値を返してくれます。</p>

<p><img src="/blog/resources/images//hashkiller.png" alt="hashkiller.png" /></p>

<p>ここで得られた単語をそのままくっつけてパスワードに指定すると、mondai4.zipが解凍できます。</p>

<pre><code class="sh">$ 7z x mondai4.zip

7-Zip [64] 9.20  Copyright (c) 1999-2010 Igor Pavlov  2010-11-18
p7zip Version 9.20 (locale=utf8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai4.zip

Extracting  hint4.txt
Enter password (will not be echoed) :

Extracting  mondai4.png
Extracting  mondai5.zip

Everything is Ok

Files: 3
Size:       70391846
Compressed: 70391891
</code></pre>

<!--
$ 7za x mondai4.zip -ptokyouenoline

7-Zip (a) [64] 9.38 beta  Copyright (c) 1999-2014 Igor Pavlov  2015-01-03
p7zip Version 9.38.1 (locale=ja_JP.UTF-8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai4.zip

Extracting  hint4.txt
Extracting  mondai4.png
Extracting  mondai5.zip

Everything is Ok

Files: 3
Size:       70391846
Compressed: 70391891

-->


<h1>mondai4</h1>

<p><img src="/blog/resources/images//mondai4.png" alt="mondai4.png" />
mondai4.pngはヒエログリフが書かれた画像です。ヒエログリフを読解できなければ問題文すら読めない状況なので、ヒエログリフ学習サイトを探して学びます。以下のサイトを参考に3分ほどで学びました。</p>

<ul>
<li><a href="http://www004.upp.so-net.ne.jp/anubis/j50/jp50.html">日本語五十音をヒエログリフで表現</a></li>
</ul>


<p>ヒエログリフを学び終わると、すらすらと画像の文字が読めるようになるので、日本語に起こします。</p>

<pre><code>のらかちいくち　てちのちんちもちみら　もにみちもにみら　もにとちのにみちもちい　のらもらま
</code></pre>

<p>ぱっと見で平仮名で換字式暗号化された英文もしくはローマ字の文だと想像がつきます。ここで適当な文節として二言目の「てちのちんちもちみら」をGoogleで検索してみると、上位にヒットしたものにこの暗号の手がかりがでてきます。</p>

<p><img src="/blog/resources/images//techinochi-search.png" alt="techinochi-search.png" /></p>

<p>日本語キーボードのかな入力モードにしてローマ字の文を打った文は、母音に位置する「ら」や「ち」が多く登場することから、この暗号方式はカナ入力のままのローマ字打ちだと断定しました。
しかし英字キーボードユーザーなので、かなが印刷されたキーボードを持っていません。仕方なしにWikimediaでそれっぽい画像を拾ってきて、平仮名⇆アルファベット変換を行うと、上記の平仮名文字列は以下のように変換できます。</p>

<pre><code>kotaeha wakayamano minamino misakinamae komoji
</code></pre>

<p>「答えは和歌山の南の岬名前小文字」とのことです。早速Googleマップを開いて和歌山県の南にある岬を探します。</p>

<p><img src="/blog/resources/images//wakayama-map.png" alt="wakayama-map.png" /></p>

<p>探すと潮岬（読み：しおのみさき）が和歌山の南部にある岬なので、これをアルファベット小文字にしてパスワードにして回答終了…だとおもってました。
<strong>shionomisaki</strong>としてタイプしてもパスワードが間違っていると言われ、解凍できません。「もしや違う岬なのかな？」と思い、和歌山の岬をいろいろ調べて同じように入力しても開きません。もうだめ&#8230;と心折れそうになってしまったので、あとはBruteForceに任せようと、次のような適当なスクリプトを書いて放置しました。</p>

<pre><code class="ruby">#!/usr/bin/env ruby

# kana 50 components
vowel5 = ['a', 'i', 'u', 'e', 'o']
consonant5 = ['k', 's', 'sh', 't', 'ch', 'n', 'h', 'm', 'r', 'g', 'z', 'j', 'd', 'b', 'p']
vowel3 = ['a', 'u', 'o']
consonant3 = ['y', 'ky', 'sy', 'ts', 'ny', 'hy', 'by', 'gy', 'py', 'w']


# kana list
list = ['']

for v in vowel5 do
    list.push v
end

for c in consonant5 do
    for v in vowel5 do
        list.push c + v
        list.push c[0] + c + v
    end
end

for c in consonant3 do
    for v in vowel3 do
        list.push c + v
        list.push c[0] + c + v
    end
end

list.push 'nn'


locker = Mutex::new

# Wordlist generator
queue = []
Thread.start {
    q = ['','','','','','']
    for p0 in list do
        for p1 in list do
            for p2 in list do
                for p3 in list do
                    for p4 in list do
                        for p5 in list do
                            q[5] = p5
                            qq = q.join
                            unless qq =~ /^(.)\1/ then
                                locker.synchronize { queue.push qq }
                            end
                        end
                        q[4] = p4
                    end
                    q[3] = p3
                end
                q[2] = p2
            end
            q[1] = p1
        end
        q[0] = p0
    end
}



# Password cracker
puts 'Cracking...'
thread_count = 128
threads = []
found = false
thread_count.times do |i|
    threads &lt;&lt; Thread.start {
        loop do
            break if found
            break unless queue
            pass = locker.synchronize { queue.shift } + "misaki"
            t = system "7za x -p#{pass} -so mondai5.zip &gt; /dev/null 2&gt; /dev/null"
            if t then
                found = true
                puts '## PASS FOUND ##'
                open("pass.txt", "a") {|f| f.puts pass }
                puts 'pass saved.'
            end
        end
    }
end


threads.each { |th| th.join }
</code></pre>

<p>1時間ほどお風呂に入って放置していたら、答えが吐き出されていました。
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">time</span> ./solver.rb
</span><span class='line'>Cracking...&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;h2&gt;PASS FOUND&lt;/h2&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;pass saved.&lt;/p&gt;
</span><span class='line'>
</span><span class='line'>&lt;p&gt;real    16m44.573s
</span><span class='line'>user    30m36.171s
</span><span class='line'>sys     18m7.269s
</span></code></pre></td></tr></table></div></figure></p>

<p>潮岬（読み：しおのみさき）の「潮」の字を「うしお」と読み違えて（？）パスワードに設定していたようです。</p>

<p>このパスワードを入力することでmondai5.zipを展開することができました。</p>

<pre><code>$ 7z x mondai5.zip

7-Zip [64] 9.20  Copyright (c) 1999-2010 Igor Pavlov  2010-11-18
p7zip Version 9.20 (locale=utf8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai5.zip

Extracting  hint5.txt
Enter password (will not be echoed) :

Extracting  mondai5
Extracting  mondai6.zip

Everything is Ok

Files: 3
Size:       70380412
Compressed: 70378640
</code></pre>

<!--

$ 7za x mondai5.zip -pushiomisaki

7-Zip (a) [64] 9.38 beta  Copyright (c) 1999-2014 Igor Pavlov  2015-01-03
p7zip Version 9.38.1 (locale=ja_JP.UTF-8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai5.zip

Extracting  hint5.txt
Extracting  mondai5
Extracting  mondai6.zip

Everything is Ok

Files: 3
Size:       70380412
Compressed: 70378640

-->


<p>mondai5以降のWrite-upは明日公開します。</p>
]]></content>
  </entry>
  
</feed>
