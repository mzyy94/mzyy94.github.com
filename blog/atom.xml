<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[パケットの中の隠れみっきー]]></title>
  <link href="http://mzyy94.com/atom.xml" rel="self"/>
  <link href="http://mzyy94.com/"/>
  <updated>2014-04-06T23:06:43+09:00</updated>
  <id>http://mzyy94.com/</id>
  <author>
    <name><![CDATA[mzyy94]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[自宅サーバーを増やした]]></title>
    <link href="http://mzyy94.com/blog/2014/04/06/new-server/"/>
    <updated>2014-04-06T23:10:36+09:00</updated>
    <id>http://mzyy94.com/blog/2014/04/06/new-server</id>
    <content type="html"><![CDATA[<p>増税前のPCパーツ買いだめイベントに便乗して、３月中に自宅サーバーを増設しました。
どんな構成で組み立てたのかの紹介になります。</p>

<!-- more -->


<p>サーバー増設にあたって、次に挙げる構成目標を先に決めていました。</p>

<ul>
<li>４コア以上、かつ８スレッド以上</li>
<li>16GB以上のDRAM</li>
<li>速い記憶装置</li>
<li>8万円以下</li>
</ul>


<p>あまり欲がありませんが、だいたいこれを満たせるようにと組みました。</p>

<p>SandyBridge世代のCPUを載せた、自宅サーバーっぽいものは前からありました。
構成は、以下の表の通りです。</p>

<table>
<thead>
<tr>
<th>パーツ</th>
<th>種類</th>
</tr>
</thead>
<tbody>
<tr>
<td>CPU</td>
<td>Intel Core i5</td>
</tr>
<tr>
<td>DRAM</td>
<td> DDR3-1333 8GB (4GB x 2)</td>
</tr>
<tr>
<td>HDD</td>
<td> WD2TB</td>
</tr>
<tr>
<td>MB</td>
<td>ECS H67I</td>
</tr>
</tbody>
</table>


<p>どこがサーバーじゃいと思うかもしれませんが、そう思うのもあたりまえ、元デスクトップマシンの構成のままなのです。
大概のことはこなせていたので、新しく組む必要はなかったといわれればその通りなのですが、気軽に仮想マシンをたてて、実験して、つぶして、のような遊びをするには非力であったため、最新のパーツで新たに組むことにしました。</p>

<h1>パーツ選定</h1>

<h2>CPU</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2014/4/6/DSC08114.JPG" alt="" />
「サーバー向けならXeonっしょ。」と各所で言われているので、Xeonにしました。
用途としては、CIサーバーが主で、適当な仮想マシンインスタンスを作っては遊び、追加していくという将来を見据えて、<a href="http://ark.intel.com/ja/products/75462/Intel-Xeon-Processor-E3-1245-v3-8M-Cache-3_40-GHz">Intel Xeon E3-1245 v3</a>にしました。</p>

<table>
<thead>
<tr>
<th>プロセッサー</th>
<th>Intel Xeon E3-1245 v3</th>
</tr>
</thead>
<tbody>
<tr>
<td>動作周波数 </td>
<td>3.4 GHz</td>
</tr>
<tr>
<td>TB時周波数  </td>
<td>3.8 GHz</td>
</tr>
<tr>
<td>キャッシュ </td>
<td>8 MB</td>
</tr>
<tr>
<td>最大 TDP  </td>
<td>84 W</td>
</tr>
</tbody>
</table>


<p>動作周波数3.4GHzあれば１０個ほど仮想マシン立ち上げても大丈夫でしょう。</p>

<h2>MB</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2014/4/6/DSC08093.JPG" alt="" />
自宅に転がっているPCケースがどれもMini-ITX向けのものなので、Mini-ITXにします。Xeon対応を謳っているマザーボードは少なく、Mini-ITXに限定してしまうと片手で数えきれるほどしか候補がありません。
サーバー向けチップセットを載せたASUSの<a href="http://www.asus.com/Commercial_Servers_Workstations/P9DI/">P9D-I</a>が購入時時点のXeon向けMini-ITXマザーボードとしては最上位であるものの、予算オーバーしてしまうので、今回は見送りました。
残る選択肢はGIGABYTEかASRockのほぼ二択となり、両者の違いはeSATAの有無やGbEの数などで、仮想マシンをいくつもたてることを考えると、二つGbEがあるほうが好ましいということで、GIGABYTEの<a href="http://www.gigabyte.jp/products/product-page.aspx?pid=4600">GA-Z87N-WIFI</a>を購入しました。</p>

<h2>DRAM</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2014/4/6/DSC08105.JPG" alt="" />
Xeon向けチップセットを載せたマザーボードを選んでいれば、ECC付きのメモリで長期運用時の信頼性を高めることができるのですが、上記の通り、Z87チップセットを載せたマザーボードを選択したため、特にECCに関してはこだわる必要がありません。
Z87チップセットはDDR3-1333/1600対応のため、たくさんの仮想マシンを支えられるよう、DDR3-1600のもので、16GB（8GB x ２枚）のものを探しました。
相性問題などは特に気にせず、財布と相談しながら予算に合うものを選んだ結果、Kingstonの<a href="http://www.amazon.co.jp/gp/product/B008KRZYH4/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B008KRZYH4&amp;linkCode=as2&amp;tag=mzyy-22">KHX16C10B1K2/16X</a>の価格が暴落していたのですぐさま購入しました。</p>

<h2>Storage</h2>

<p>なんでもよかったです。とにかく速いものであれば。
これも、お財布と相談しながらということで、適当に探してSanDiskの<a href="http://www.amazon.co.jp/gp/product/B00BWR2QZC/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00BWR2QZC&amp;linkCode=as2&amp;tag=mzyy-22">SanDisk SSD UltraPlus 128GB</a>にしました。</p>

<h2>その他パーツ</h2>

<p>増設ということで、旧マシンから流用できるパーツがありません。あまっているパーツは7mm厚120mmファンくらいで、必要なものがいくつもありました。</p>

<p>CPUはバルクで購入したのでファンがついておらず、CPUファンを購入する必要がありました。ケースの高さ制限より、これもまた選択肢が少なく、某所のレビューでよく冷えるとあったので、Scytheの<a href="http://www.amazon.co.jp/gp/product/B004W5KS0G/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B004W5KS0G&amp;linkCode=as2&amp;tag=mzyy-22">KOZUTI</a>にしました。</p>

<p>CPUファンとの熱伝導のためのグリスは、ファン付属のものでもよかったのですが、どうしても別で買いたかったのでAINEXの<a href="http://www.amazon.co.jp/gp/product/B000BLBHTQ/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B000BLBHTQ&amp;linkCode=as2&amp;tag=mzyy-22">シルバーグリス</a>を購入しました。よく冷えそうなので。</p>

<p>あとは、2.5インチSSDを3.5インチに変える、<a href="http://www.amazon.co.jp/gp/product/B0088QXTK6/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B0088QXTK6&amp;linkCode=as2&amp;tag=mzyy-22">センチュリー 裸族のインナー</a>や、ケースの狂った配線とつなぐための<a href="http://www.amazon.co.jp/gp/product/B000FHQACA/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B000FHQACA&amp;linkCode=as2&amp;tag=mzyy-22">アイネックス ピン配列交換ケーブル</a>や<a href="http://www.amazon.co.jp/gp/product/B000Y1YUKG/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B000Y1YUKG&amp;linkCode=as2&amp;tag=mzyy-22">アイネックス コネクタ簡単脱着ケーブル</a>を購入しました。</p>

<h1>組み立て</h1>

<h2>ケースの整備</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2014/4/6/DSC08139.JPG" alt="" />
普通のPCケースならば、パーツをケースに組み込むだけですが、自宅に転がっているというケースがくせ者で、数年前のAcer Aspire H340のものなのです。
このケース、Mini-ITXサイズのマザーボードが組み込まれていたので、一見どのマザーボードでも使えるかと思ったら大間違い。フロントパネルのボタンは効かないわSATAは認識しないわで問題ばかり。このケースを市販されているMini-ITXマザーボードで活用しようと思う方はたくさん居るようで、ウェブに情報はたくさんあります。
今回は、<a href="http://z.apps.atjp.jp/memo/h340.html">http://z.apps.atjp.jp/memo/h340.html</a>を参考にさせていただき、ケースを利用できる状態にしました。</p>

<h2>パーツ組み込み</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2014/4/6/DSC08158.JPG" alt="" /></p>

<p>やっと普通のPCケースとして使える状態になったので、組み込みます。
ここからの手順は、ご存知の方多いと思いますので割愛します。</p>

<h2>設置</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2014/4/6/Servers.JPG" alt="" />
ちゃんとケースに組み込んで所定の位置に設置しました。
ほかのサーバーとおなじ見た目なのでわかりづらいですが、右上のが今回新設したサーバーとなります。
それらに関してはおいおい紹介していきますのでしばしおまちを。</p>

<h1>費用</h1>

<p>気になるサーバー構築費用です（すべて税込み）。</p>

<table>
<thead>
<tr>
<th>パーツ</th>
<th align="right">購入価格(円)</th>
</tr>
</thead>
<tbody>
<tr>
<td>CPU    </td>
<td align="right">26800</td>
</tr>
<tr>
<td>MB     </td>
<td align="right"> 8800</td>
</tr>
<tr>
<td>DRAM   </td>
<td align="right">11151</td>
</tr>
<tr>
<td>SSD    </td>
<td align="right"> 9790</td>
</tr>
<tr>
<td>Fan    </td>
<td align="right"> 2880</td>
</tr>
<tr>
<td>Grease </td>
<td align="right"> 1140</td>
</tr>
<tr>
<td>Mounter</td>
<td align="right">  891</td>
</tr>
<tr>
<td>Cable  </td>
<td align="right">  827</td>
</tr>
</tbody>
</table>


<p>計62,279円で、このサーバーを構築できました。目標としていた8万円を大きく下回り、金銭的にストレージ増設の余地があります。
このサーバーを生かして、今後いろいろと実験していくような記事を書く予定ですので、こう御期待。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.jsでダウンロードしながらGunzipしてmd5の計算しながら保存する奴]]></title>
    <link href="http://mzyy94.com/blog/2014/02/25/dl-gunzip-with-nodejs/"/>
    <updated>2014-02-25T22:18:21+09:00</updated>
    <id>http://mzyy94.com/blog/2014/02/25/dl-gunzip-with-nodejs</id>
    <content type="html"><![CDATA[<p><a href="http://nodejs.org/">Node.js</a>です。
Lempel-Ziv符号化で圧縮されたファイル(.gz)のダウンロードをしようとしたときの話です。
ブラウザからダウンロードすると、拡張子gzで保存され、それを解凍することで必要なデータを得ることができるのですが、圧縮されたファイルは解凍したあとでは不要です。
このような不要ファイルを保存することなく、目的のファイルが欲しいような状況になったので、いろいろと調べて解決しました。</p>

<!-- more -->


<p>Lempel-Ziv符号化で圧縮されたファイルは、かの有名な<a href="http://www.zlib.net/">zlib</a>によって扱うことができます。
Node.jsの標準モジュールには、zlibがあり、require()で取り込むことでzlibを利用することができます。
標準モジュールであるため、APIに関する説明が<a href="http://nodejs.org/api/zlib.html">Node.js公式ドキュメント</a>にあるのですが、よく使い方がわからなかったので、いろいろと試行錯誤してみました。</p>

<p>結果、zlibモジュールを利用してストリームを扱うオブジェクトを作成し、パイプでつなげることで、前途の目的である、圧縮されたアーカイブファイルを保存することなく、目的のファイルを保存することができました。</p>

<p>以下、ソースコードになります。
引数に拡張子gzのファイルのURLを渡し実行することで、解凍されたファイルを保存できます。</p>

<script src="https://gist.github.com/mzyy94/9209459.js"></script>


<p>20行目の<code>res.pipe(gunzip).pipe(output);</code>にてhttp.getで得られたストリームを<code>zlib.createGunzip()</code>で作成したgunzipオブジェクトにパイプで渡し、処理されたものを、<code>fs.createWriteStream()</code>で作成されたoutputオブジェクトにさらにパイプすることで不要なファイルを保存することなく、ダウンロードしながら解凍し、保存しています。</p>

<p>保存時に、gunzipオブジェクトの&#8217;data&#8217;イベントを拾って、crypto標準モジュールでmd5の値を計算させています。
ダウンロードのときはmd5チェックしたいですし。</p>

<p>Node.jsのzlibモジュールに関して、あまり実例がなく、せっかくなので記事にしました。
ご参考になれば幸いです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unicode形式に変換するPopClipのExtensionを作りたかっただけだったのに]]></title>
    <link href="http://mzyy94.com/blog/2014/02/21/unicode-popclip-extension/"/>
    <updated>2014-02-21T17:46:27+09:00</updated>
    <id>http://mzyy94.com/blog/2014/02/21/unicode-popclip-extension</id>
    <content type="html"><![CDATA[<p>いろいろな趣味がよく合う<a href="http://hitoriblog.com/">ひとりぶろぐ</a>さんの記事を読んでいたときのこと。どうやら<a href="https://itunes.apple.com/jp/app/popclip/id445189367?mt=12&amp;uo=4&amp;at=1l3v4mQ">PopClip</a>が便利らしいことを<a href="http://hitoriblog.com/?p=22987">発見</a>したので、だいぶ昔に買ったっきりで使っていなかったPopClipを活用してみることにしました。</p>

<h1>PopClipとは</h1>

<p>PopClipに関しては、<a href="http://hitoriblog.com/?p=22987">ひとりぶろぐさんの記事</a>にて紹介されているので省略します。知っているという前提で以下、話を進めます。</p>

<h1>Unicodeエンコード</h1>

<p>最近なにかとマイブームなUnicode。CSSのcontentプロパティで記号を表示したり、JavaScriptで難読化したりなど、よく使う割には毎回ブラウザ上でコンソールを拡げていました。この手間を解決する手段として、せっかくなのでPopClipの拡張機能を利用しようと思います。</p>

<!-- more -->


<h1>PopClip拡張機能</h1>

<p>PopClipが人気なのは、iOSライクなコピー＆ペーストができるからではなく、PopClip拡張機能で選択テキストなどに対する便利な機能が実現できるかららしい[<em>要出典</em>]。
PopClip拡張機能を作るための手順に関しては、さっきからよく登場する<a href="http://hitoriblog.com/?p=22987">ひとりぶろぐさんの記事</a>にて説明があるので、読んで作っていきます。</p>

<h2>UnicodeEncode.popclipext</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/21/UnicodeEncode_popclipext.gif" alt="UnicodeEncode_popclipext" /></p>

<p>そこまで難しく考えることなく、サンプルのURLエンコードの拡張機能をちょちょっと編集して、\uXXXXの形のUnicode形式を出力するプログラムをかきました。UTF-8→Unicodeの変換は、<a href="http://gihyo.jp/admin/serial/01/charcode/0004">第4回 UTF-8の冗長なエンコード：本当は怖い文字コードの話｜gihyo.jp … 技術評論社</a>を参考にしました（はせがわさんの警告無視）。</p>

<p>こちらになります。<a href="https://github.com/mzyy94/UnicodeEncode.popclipext">mzyy94/UnicodeEncode.popclipext</a></p>

<p><strong>作るの意外と大変だった</strong></p>

<p>さらっとサンプルのソースコードを読んだ限り、簡単にできるものだとおもったのですが、いろいろと問題がありました。</p>

<h3>LANG環境変数問題</h3>

<p>一つ目の問題は、LANG環境変数。
おなじみシステムのローケルを設定する環境変数ですが、日本語を扱うときのこのロケールがいろいろと厄介なものでした。
OS X Mavericksで日本語環境でターミナルを起動する際は、標準でLANG=ja_JP.UTF-8に設定されています。この状態で、日本語を扱うときには特に問題ないのですが、LANG=Cのときだと厄介なことになることがあるのです。
その例が以下の画像。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/21/problem1.gif" alt="Problem1" /></p>

<p>&ldquo;あ&#8221;をUnicode表記にすると\u0342になるはずですが、この例では出力がUTF-8バイトコードの&#8221;あ&#8221;であるe3 81 82がそれぞれ個々の文字としてUnicodeにエンコードされています。
PopClip拡張機能は、起動時にLANG環境変数を引き継ぐことなく、未指定の状態でスクリプトが実行されているようで、デフォルトであるLANG=Cでの処理となってしまっているためです。bashで実装したのが大きな原因であるようですが、どうも文字列を文字ごとに分割するときにLANG=Cではマルチバイト文字をASCII文字として扱ってしまっているのが原因らしいです。</p>

<p>解決策として、<code>export LANG=en_US.UTF-8</code>と、UTF-8ロケールに設定しました。</p>

<h3>濁点文字分離問題</h3>

<p>まず、以下の例をみてください。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/21/problem2.gif" alt="Problem2" /></p>

<p>三人ともおなじ５文字の名前なのに、鹿目さんだけがUnicode化した際に６文字になってしまっています。
これは、鹿目さんが悪いのではなく、OS Xの挙動が悪いのです。</p>

<p>この問題は、OS X特有のもので、OS X上でのUTF-8の文字コードの取り扱いに起因しています。
OS XではUTF-8を扱う文字コードが２種存在します。<code>iconv -l | grep UTF-8</code>とすれば確認できますが、一つは純粋なUTF-8で、もう一つはUTF-8-MACなるものです。このUTF-8-MACは、OS XのファイルシステムによってUTF-8を扱うためのものであるらしく<a href="http://macwiki.sourceforge.jp/wiki/index.php/UTF-8-MAC">1</a>、濁点のある仮名文字などで正規分解が行われ、今回の例では「鹿」「目」「ま」「と」「 ゙」「か」といった具合にUTF-8の文字列がPopClip拡張機能にわたされてしまったようです。この問題は、PopClip拡張機能にせずにシェルスクリプトをそのままのかたちで実行し、テストしたときには再現されなかったので、発見が遅れ、解決に時間がかかってしまいました。</p>

<p>この問題は<code>iconv -f UTF-8-MAC -t UTF-8</code>とすることで解決しました。</p>

<h1>PopClip拡張機能を作りたかっただけだったのに</h1>

<p>PopClipがロケール環境変数を引き継いでいなかったおかげでLANG=CでのUTF-8の文字の扱いがわかり、PopClipがUTF-8-MACとしてテキストを渡してくれていたおかげでOS XでのUTF-8の取り扱いに関して知識を得ることができて、結果的にいい経験になりました。ありがとう、PopClip。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Honda 3DのサイトがFlashだったときの症例]]></title>
    <link href="http://mzyy94.com/blog/2014/02/13/honda-3d-webgl/"/>
    <updated>2014-02-13T19:03:54+09:00</updated>
    <id>http://mzyy94.com/blog/2014/02/13/honda-3d-webgl</id>
    <content type="html"><![CDATA[<p>RSSを消化してたときのこと。
<a href="http://japanese.engadget.com/2014/01/28/3d-nsx-concept-5/">ホンダが歴代コンセプトカーの3DデータをCCライセンスで公開、NSX Concept など全5種 (動画) &ndash; Engadget Japanese</a>
なる記事を見つけて、「クリエイティブコモンズで3Dモデル公開とはなかなかやるな。流行に乗っててよろしい。」と感心していました。</p>

<p>しかし、そんな関心も次のクリックで吹っ飛びました。</p>

<!-- more -->


<pre>
＿人人人人人人人＿
＞　衝撃のFlash　＜
￣Y^Y^Y^Y^Y^Y￣
</pre>


<p>流行に乗ってると微塵でも思ってしまったことを後悔。
3Dプリンタという流行を意識した3Dモデルの公開に使われたものが流行遅れのFlashであるという、なんとも言い難い悲しい状況を目の当たりにしてしまったのです。</p>

<p>この惨状を目にした60分後、手元にはこんなものが出来上がっていました。</p>

<h3><a href="http://mzyy94.com/HONDA-3D-WebGL-demo/">Honda 3D &ndash; WebGL Demo (Beta)</a></h3>

<p><span>※Chrome 33向けです。</span><br>
<span>※※RAMとCPU使用率と通信量を膨大に使うので開く際はご注意ください</span></p>

<p><a href="https://github.com/mzyy94/HONDA-3D-WebGL-demo">GitHub Repository</a></p>

<p>悲しみからか、手が勝手に動き<strong>Flashなし</strong>で模倣していました。</p>

<p>このれらのサイトを構成している技術に関して比較してみました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/13/comparison.png" alt="comparison" /></p>

<p>せっかくつくったので解説させてください。</p>

<h1>トップページ</h1>

<p>上：拙作デモサイト　下：本家サイト</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/13/demo-top.png" alt="demo" />
<img src="http://mzyy94.com/blog/resources/images/2014/2/13/original-top.png" alt="original" /></p>

<p>メインページの全体像はほとんど違和感を感じさせない作りとなっています。
左右のパネルを選択すると本家と変わらないスライドアニメーションで次のパネルへ移り変わります。</p>

<p>このカルーセルはjQueryによるclass操作とCSS3のkey frame アニメーションを使っています。クリック時に左端のパネルのmarginを以下のように動かすことで滑らかなスライドアニメーションを疑似的に見せています。</p>

<p>CSS3の技術が詰まったパネルをもう少し詳しく見てみましょう。
テキストの上でもカーソル形状は本家のものと同じくデフォルトになるようにしてあります。
背景透過はbackground-colorをCSS3からのrgba値を用いており、サムネイルを円形にしてあるのもCSS3のborder-radiusを指定して実現しています。さらに、パネル上の美しいfontもCSS3によるWeb fontを利用しています。</p>

<p>背景動画はYouTubeのHTML5 videoでの埋め込みにしてあるというAnti-Flashの徹底ぶり。オプションを以下の通り指定してNo Flashにしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;iframe id="bgmovie" width="1920" height="1080" src="http://www.youtube.com/embed/MJWzLm91Hmg?html5=1&playlist=kdOVr4Tqdoc&autoplay=1&disablekb=1&controls=0&showinfo=0&vq=hd1080&modestbranding=1&rel=0&loop=1" style="top: -374px;"&gt;&lt;/iframe&gt;</span></code></pre></td></tr></table></div></figure>


<h1>3D ビュー</h1>

<p>ここのシーンを見せるためにHondaはFlashを試用したというのは安易に想定できますが、せっかくなのでHTML5の技術を使って欲しかったです。
ということで、HTML5の新技術であるWebGLを利用してモデルを表示するようにしました。</p>

<p>WebGLの複雑なコードを書かずとも、数十行のコードで手軽にWebGLをつかえるライブラリはいくつか存在します。
今回は<a href="http://threejs.org/">three.js</a>とよばれるWebGLラッパーを利用しました。</p>

<p>WebGLで3Dモデルを表示するには、表示するための3Dデータが必要です。
現在、Honda-3d.comからダウンロードできるファイルは3Dプリンタ向けのSTL形式で、WebGL、加えてthree.jsでもそのままでは利用できるものではありません。
そこで、three.jsで扱える形式に変換する必要があります。
今回は3Dモデリング界では名高い<a href="http://www.blender.org/">Blender</a>を利用しました。</p>

<h2>3Dモデルデータを変換する</h2>

<p>BlenderでSTL形式をthree.jsで扱える形式に変換する方法はそこまで難しいことではありません。
Blenderは標準でSTL形式を扱えるので、three.jsで使えるよう、
three.jsに含まれるBlender用のAdd-onを導入すれば、three.jsで表示できる形式に変換する環境は整います。
このAdd-onはthree.jsをgitリポジトリからCloneした際に、一緒にダウンロードされています。</p>

<p>Add-onを導入するのは簡単で、必要なファイル群をBlenderのアプリケーションフォルダに入れてあげるだけです。
OS X上で、Blender@2.69とthree.js@r65を利用する場合は、</p>

<pre><code>[three.jsのClone先ディレクトリ]/utils/exporters/blender/2.65/scripts/addons
</code></pre>

<p>にある<code>io_mesh_threejs</code>ディレクトリを</p>

<pre><code>[アプリケーションフォルダ]/Blender.app/Contents/MacOS/2.69/scripts/addons
</code></pre>

<p>の中にコピーします。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/13/blender-1.png" alt="blender" /></p>

<p>コピーし終わったらBlenderを起動し、File->User Preferences&hellip;で設定画面を開き、
Addonsタブにある検索ボックスでthreejsとして検索して出てくる項目をチェックし有効化します。
チェックし終わったら次回以降も反映されるよう、Save User Settingsをしておきます。
<img src="http://mzyy94.com/blog/resources/images/2014/2/13/blender-2.png" alt="blender" />
<img src="http://mzyy94.com/blog/resources/images/2014/2/13/blender-3.png" alt="blender" /></p>

<p>設定画面を閉じたらFile->Import->Stlでダウンロードしたファイルを開き、
起動時に作られていた不要なオブジェクトを削除し、File->Export->Three.jsでthree.js用の形式にして出力します。
<img src="http://mzyy94.com/blog/resources/images/2014/2/13/blender-4.png" alt="blender" />
<img src="http://mzyy94.com/blog/resources/images/2014/2/13/blender-5.png" alt="blender" />
<img src="http://mzyy94.com/blog/resources/images/2014/2/13/blender-6.png" alt="blender" /></p>

<h2>3Dモデルデータを表示する</h2>

<p>上：拙作デモサイト　下：本家サイト</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/13/demo-3dview.png" alt="demo" />
<img src="http://mzyy94.com/blog/resources/images/2014/2/13/original-3dview.png" alt="original" /></p>

<p>表示はthree.jsの基本的な機能を使うだけで行っています。
基本的な方法は、
<a href="http://www.atmarkit.co.jp/ait/articles/1210/04/news142.html">Webグラフィックをハックする（5）：多彩な表現力のWebGLを扱いやすくする「Three.js」 (1/5) &ndash; ＠IT</a>
にて説明されています。
この説明を参考に、three.jsのファイルを読み込ませて表示させています。
ちゃんとマウスでぐりぐりできるようになっています。</p>

<p>各コードに関して説明したかったのですが、すでに結構な分量になっているので、気になる人は以下のGistにてご参照ください。</p>

<p><a href="https://gist.github.com/mzyy94/8974444">https://gist.github.com/mzyy94/8974444</a></p>

<p>以上、Anti-Flashをこじらせた人の症例でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Qiで203Zを充電できるようにしてみた]]></title>
    <link href="http://mzyy94.com/blog/2014/02/04/qi-battery-203z/"/>
    <updated>2014-02-04T08:47:16+09:00</updated>
    <id>http://mzyy94.com/blog/2014/02/04/qi-battery-203z</id>
    <content type="html"><![CDATA[<p>Qiという無接点充電の<em>事実上</em>標準規格なものがありまして、それを利用したモバイルルータの充電をしてみましたという日記です。</p>

<p>デバイスをQiにて充電するには、Qi給電の機能をもとからもっているデバイスを購入するか、もしくは非対応デバイスをQi対応にさせるかの2択しかありません。</p>

<p>今回Qi対応にしたいデバイスはモバイルルータのSoftBank 203Zです。出先でMac/iPadその他機器でインターネットに接続するために利用しているものです。バッテリーは結構もつのですが、それでも毎日充電しなければ一日中使うような日には持ちません。あの小さな小さなmicorUSBに毎晩のように上下を間違えて刺すこと数十日。さすがにうっとうしくなってきたのでmicroUSBを使わず充電できる方法を探りました。</p>

<!-- more -->


<h1>無接点充電という何か</h1>

<p>数年前からQiというものの存在を知っており、研究のため、今年度初めて利用する機会を得ました。実際に使ってみたところ、これは調子いい。わざわざ充電器に刺すことなく、奥だけで充電できるのはすばらしいじゃないか。こんな感想を抱いた記憶があります。「欲しい。」ただそう思いました。</p>

<p>月日が経ち、203Zを接続する煩わしさが溜まりにたまったところでQiのことを思い出し、導入することにしました。</p>

<h2>Panasonic 無接点充電パッド</h2>

<p>Qiには無接点給電する充電器が必要なのです。そのQi充電器は数社から出ており、いろいろな機能・サイズなどがあります。
たくさんある充電器ですが、購入するときは特に迷いもなくPanasonic製のものを買いました。</p>

<p>迷いもなく<a href="http://www.amazon.co.jp/gp/product/B0051R4ECM/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B0051R4ECM&amp;linkCode=as2&amp;tag=mzyy940a-22">Panasonic 無接点充電パッド ChargePadチャージパッド ブラック QE-TM101-K</a>を選択したのは、以前研究に使っていたものと同機種で、実際に使い勝手がよいのを感じでいたものだったためです。
移動式コイルによって２台まで充電させることができ、置く場所を意識しなくてもいいという点が高ポイントでした。</p>

<h2>Qi ワイヤレス充電レシーバー microUSB版</h2>

<p>正式名称がわからないのですが、ようするに上記の無接点充電パッドからの宮殿を受けるレシーバーです。
203ZはmicroUSB type-B端子での充電なので、それに対応したものをAmazon.co.jpで探し、購入してみました。</p>

<p>薄型タイプのものはたくさん販売されているのですが、検索時点で安く一定の評価がある商品を選びました。
現在は購入できませんが、<a href="http://www.amazon.co.jp/gp/product/B00H7FJX7M/">こちらの商品</a>を購入しました。</p>

<h3>届いた</h3>

<p>注文した商品が届きました。
香港からの発送とあったので、２−３週間ほどかかるのではないかと予想をしてたところ、2014/1/14に注文して2014/1/30に到着と、約２週間かかっていました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/4/DSC08056.JPG" alt="届いた状態" /></p>

<p>結構簡素な梱包でAIR MAILとして届きました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/4/DSC08055.JPG" alt="img" /></p>

<p>封筒から出すとこのような箱が１点のみでした。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/4/DSC08012.JPG" alt="img" /></p>

<p>先ほどの箱の中身はこれまた充電パッド一点のみ。
簡素さが貫き通せてます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/4/DSC08013.JPG" alt="img" /></p>

<p>この充電パッドを背面パネルを外した203Zの充電端子に差し込み、裏蓋を閉じるだけで無接点充電環境は整いました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/4/DSC08073.JPG" alt="img" /></p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/4/DSC08081.JPG" alt="img" /></p>

<p>背面パネルを閉じたところ、端子の一部が若干飛び出してしまいましたが、問題はなさそうです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/2/4/DSC08086.JPG" alt="img" /></p>

<p>実際に充電してみたところ、ちゃんと充電できている様子でした。</p>

<p>が、それも毎日は続かず、５日充電を試したところ、そのうち２日は充電されていないということがありました。
寝る前に確実に充電ランプが点灯していることを確認しているので、充電開始後に充電がされなくなる状況が発生したようです。
となりに一緒において充電してあるiPhoneは満充電になっているので、パッドが充電されたと勘違いして給電が止められたのかもしれません。
せっかく快適な充電環境を構築したと思ったら、充電したつもりだけど充電されていない、といった余計な問題が増えてしまったので、もう取り外しました。</p>

<p>なんのためのレビューだったのか┐(´∀｀)┌ﾔﾚﾔﾚ</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JavaScriptの記号だけで'1'を作るコードゴルフ]]></title>
    <link href="http://mzyy94.com/blog/2014/01/22/javascript-one-codegolf/"/>
    <updated>2014-01-22T11:02:22+09:00</updated>
    <id>http://mzyy94.com/blog/2014/01/22/javascript-one-codegolf</id>
    <content type="html"><![CDATA[<p>CodeIQでお正月チャレンジをしていた時に遭遇した問題を解決するために、いろいろと試行錯誤したことがありました。</p>

<p>ある条件下で数値を作成しなければいけないという問題に直面したときのことです。
条件としては、以下のとおりになっていました。</p>

<p>入力欄の文字数：100文字以内</p>

<p>禁止文字：1 2 3 4 5 6 7 8 9 0 , + % ? : this eval function Function Array join split repeat &lsquo; &#8221;</p>

<p>この条件下で数字の1を作成した結果は以下のとおりになりました。</p>

<!-- more -->


<h2>1</h2>

<h3>初期案 (11文字)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">[].</span><span class="nx">push</span><span class="p">([])</span>
</span></code></pre></td></tr></table></div></figure>


<p>数字の１を作成するためにまず思いついたのがこれです。
Arrayオブジェクトのpushは返り値が要素数になることを利用して、空配列に空配列を追加して1を得ました。</p>

<p>まだまだこれは短縮できそうということで、考えを練っていたら次にこのようなものが思い浮かびました。</p>

<h3>改善案 (6文字)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">~~!!</span><span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure>


<p>６文字まで短縮することができました。
このコードは主に3つの要素から成り立っています。</p>

<h4>[]</h4>

<p>空配列です。
ここでは、実態のあるオブジェクトがほしいだけなので、{}でも大丈夫です。</p>

<h4>!</h4>

<p>否定演算子です。
今回は、配列として実態があるものに対して行っているので、![]ではfalseが返ってきます。
!![]とすることで、trueを得ることができます。</p>

<h4>~</h4>

<p>ビット反転演算子です。
!![]で返ってきたtrueをビット反転することによって、数値として認識させます。
~!![]は、すなわち~trueであり、すなわち~1なので、-2を返します。
~~!![]とすることで、ビット反転を打ち消し、1を返させることができます。</p>

<p>６文字ではまだまだ字数が多すぎると思い、ふと閃いたものが以下になります。</p>

<h3>最終案 (4文字)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">-~</span><span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Arrayオブジェクトに対して、直接ビット演算をしてしまいます。
要素数ゼロのArrayオブジェクトは数値として扱った場合に、ゼロとなるのでそれを用いてゼロをビット反転してしまいます。
補数により0は-1となり、正負を反転させるために-(マイナス)を加えて1としました。</p>

<p>記号を使った1を生成する最短コードなんじゃないでしょうか。</p>

<h1>おまけ</h1>

<p>2と3も作ってみました。</p>

<h2>2</h2>

<h3>初期案 (10文字)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">-~</span><span class="p">[]</span><span class="o">&lt;&lt;-~</span><span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure>


<p>上で作成した1を用いてビットシフトしています。
1を倍にすることで2になるという単純なものです。</p>

<p>ここで、1を作成した時のことを考えていたら、もっと単純で短いものがありました。</p>

<h3>最終案 (6文字)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">-~!!</span><span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure>


<p>先ほどの1を作成する改善案を元に、符号を反転させただけのものです。</p>

<p>最短コードなんじゃないでしょうか。</p>

<h2>3</h2>

<h3>初期案 (11文字)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">-~!!</span><span class="p">[]</span><span class="o">|-~</span><span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure>


<p>1と2でビットの論理和を計算して3とします。</p>

<h3>最終案 (8文字)</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">-~-~!!</span><span class="p">[]</span>
</span></code></pre></td></tr></table></div></figure>


<p>2の最終案を元に、ビット反転して-3にし、それを-(マイナス)で符号反転して３を作りました。</p>

<p>これら2と3を作った方法を元にすれば4,5,6..も同様に作れてしまいます。</p>

<p>この方法をもとにCodeIQのお正月ダンジョンLv.3に挑んだコードがトップ画像になります。</p>

<p>以上、豆知識的なメモでした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[debianでiscsi target/initiator動作させるメモ]]></title>
    <link href="http://mzyy94.com/blog/2014/01/09/iscsi-debian/"/>
    <updated>2014-01-09T13:45:08+09:00</updated>
    <id>http://mzyy94.com/blog/2014/01/09/iscsi-debian</id>
    <content type="html"><![CDATA[<p>Linux上でのiSCSIパケット収集のためにVirtual Boxで作成した、Debian 7.0.0にiSCSI initiatorとtargetを入れたときのメモを起こしておきます。</p>

<!-- more -->


<p>今回iSCSIパケットの収集をする必要があったので、Linux上で動くように導入しました。
iSCSIの説明はまた今度にするとして、簡単に用語を定義しておくと、
iSCSIターゲット
&ndash; iSCSIサーバー
iSCSIイニシエータ
&ndash; iSCSIクライアント</p>

<p>対象とするシステムは以下のとおりです。</p>

<table>
<thead>
<tr>
<th align="center">  Initiator </th>
<th align="center">     Target</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">Debian 7.0.0</td>
<td align="center"> Debian 7.0.0</td>
</tr>
<tr>
<td align="center">仮想1コアCPU</td>
<td align="center">仮想1コアCPU</td>
</tr>
<tr>
<td align="center"> 512MB RAM  </td>
<td align="center"> 512MB RAM</td>
</tr>
<tr>
<td align="center"> 10GB SSD   </td>
<td align="center"> 10GB SSD</td>
</tr>
</tbody>
</table>


<p>全く同じシステムで、初期インストール時の設定はminimalです。（gccなどはおろか、sshdも入っていない状態）</p>

<p>iSCSIに関するパッケージは以下のとおり。targetはiscsitargetとiscsitarget-dkms、イニシエータはopen-iscsiとなっています。</p>

<p><code class="code">root@debian:~# aptitude search iscsi
p   iscsitarget                                            &ndash; iSCSI Enterprise Target userland tools
p   iscsitarget-dkms                                       &ndash; iSCSI Enterprise Target kernel module source &ndash; dkms version
p   libiscsi-bin                                           &ndash; iSCSI client shared library &ndash; utilities
p   libiscsi-dev                                           &ndash; iSCSI client shared library
p   libiscsi1                                              &ndash; iSCSI client shared library
p   open-iscsi                                             &ndash; High performance, transport independent iSCSI implementation</code></p>

<p>まずサーバーとなるターゲットのインストールから。
rootで<code>aptitude install iscsitarget iscsitarget-dkms</code>としてパッケージインストールして下記のとおりに設定し、iSCSIターゲットを有効にします。</p>

<table>
<thead>
<tr>
<th align="center">   ファイルパス </th>
<th align="center">   変更内容</th>
</tr>
</thead>
<tbody>
<tr>
<td align="center">/etc/default/iscsitarget </td>
<td align="center"> ISCSITARGET_ENABLE=falseをtrueに</td>
</tr>
</tbody>
</table>


<p>そして、iSCSIとして提供するデバイスを設定します。
この設定ファイルは/etc/iet/ietd.confに追記して設定します。</p>

<p>iSCSIターゲットの設定書式は設定ファイルにもサンプルがありますが、最小限の記述は以下の様な形式になります。
ここではfileioタイプを用い、単一ファイルをあたかもSCSIデバイスとして利用する方法を取ります。</p>

<p><code class="code">Target iqn.yyyy-mm.&lt;reversed domain name&gt;[:identifier]
   Lun 0 Path=&lt;image file path&gt;,Type=fileio,ScsiId=&lt;id&gt;,ScsiSN=&lt;sn&gt;</code></p>

<p>各所で紹介されている記事にはScsiIDやScsiSNを指定していないものもありましたが、open-iscsi 2.0.873@Debian 7.0.0ではSCSIデバイスとして認識されないのでちゃんとつけておきましょう（これがわからず1時間くらい考えこんでた）。</p>

<p>Pathで指定するファイルは<code>dd if=/dev/zero of=/disk.img bs=1 count=0 seek=10G</code>などで適当につくってしまいましょう。
今回はこのように設定しました。</p>

<p><code class="code">Target iqn.2014-01.localhost:fileio.test
   Lun 0 Path=/root/disk.img,Type=fileio,ScsiId=test,ScsiSN=test</code></p>

<p>ここまででターゲットの設定は終わりなので、サービスを再起動します。</p>

<p><code class="code">root@debian:~# service iscsitarget restart
Removing iSCSI enterprise target devices: :.
Starting iSCSI enterprise target service:.
.</code></p>

<p>エラーに関しては多くは出力されないので、<code>dmesg | tail</code>で確認するなりした方がいいと思います。
正常に動作しているかどうかは<code>neststat -a | grep iscsi</code>や<code>lsof -i:3260</code>で状態をみて判断します。</p>

<p>繋げてみないことには動作確認は取れませんので、クライアントとしてのopen-iscsiをインストールします。
<code>aptitude install open-iscsi</code>として、iscsiイニシエータを導入します。</p>

<p>最低限の動作には設定は必要ないのでこのままコマンドを入力して接続していきます。
<code>dpkg -L open-iscsi</code>すると、いくつかiscsiで始まるコマンドがインストールされていますが、すべてを統合的に実行できるiscsiadmを利用します。</p>

<p>iscsiadmに関して詳しいことはmanを見るとして、今回繋げるためには以下のようにして簡単ログインしてしまいましょう。</p>

<p><code class="code">root@debian:~# iscsiadm -m discovery -t sendtargets -p 127.0.0.1 -l</code></p>

<p>オプションに関して詳しいことはmanをみてもらうとして、今回使ったオプションは次のような意味を持っています。</p>

<table>
<thead>
<tr>
<th>Option </th>
<th> Sense</th>
</tr>
</thead>
<tbody>
<tr>
<td>-m     </td>
<td> モード指定</td>
</tr>
<tr>
<td>discovery</td>
<td>iSCSIターゲット探索</td>
</tr>
<tr>
<td>-t     </td>
<td>タイプ指定</td>
</tr>
<tr>
<td>sendtargets</td>
<td>準iSCSIプロトコルを用いているターゲット探索</td>
</tr>
<tr>
<td>-p</td>
<td>ネットワークポータル指定</td>
</tr>
<tr>
<td> 127.0.0.1</td>
<td>指定ネットワークアドレス</td>
</tr>
<tr>
<td>-l</td>
<td>ログイン</td>
</tr>
</tbody>
</table>


<p>これで接続し、ちゃんとSCSIデバイスとして認識できていればdmesgに以下のように出ます。</p>

<p><code class="code">[ 6484.501041] scsi3 : iSCSI Initiator over TCP/IP
[ 6484.764505] scsi 3:0:0:0: Direct-Access     IET      VIRTUAL-DISK     0    PQ: 0 ANSI: 4
[ 6484.765289] sd 3:0:0:0: [sdb] 2097152 512-byte logical blocks: (1.07 GB/1.00 GiB)
[ 6484.765325] sd 3:0:0:0: [sdb] Write Protect is off
[ 6484.765328] sd 3:0:0:0: [sdb] Mode Sense: 77 00 00 08
[ 6484.765389] sd 3:0:0:0: [sdb] Write cache: disabled, read cache: enabled, doesn&rsquo;t support DPO or FUA
[ 6484.766030]  sdb: unknown partition table
[ 6484.766303] sd 3:0:0:0: [sdb] Attached SCSI disk
[ 6484.766417] sd 3:0:0:0: Attached scsi generic sg2 type 0</code></p>

<p>こんなかんじの出力があれば、大体検討はつくと思いますが、/dev/sdbにiSCSIターゲットがSCSIデバイスとして認識されています。
このブロックデバイスをパーティショニングし、フォーマットし、マウントすることで実際にディスクとして利用することが出来ます。
こんなかんじです。</p>

<pre class="code">root@debian:~# fdisk /dev/sdb
Device contains neither a valid DOS partition table, nor Sun, SGI or OSF disklabel
Building a new DOS disklabel with disk identifier 0x86017ce7.
Changes will remain in memory only, until you decide to write them.
After that, of course, the previous content won't be recoverable.

Warning: invalid flag 0x0000 of partition table 4 will be corrected by w(rite)

Command (m for help): n
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p):
Using default response p
Partition number (1-4, default 1):
Using default value 1
First sector (2048-2097151, default 2048):
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-2097151, default 2097151):
Using default value 2097151

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.
root@debian:~# mkfs -t ext4 /dev/sdb1
mke2fs 1.42.5 (29-Jul-2012)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
65536 inodes, 261888 blocks
13094 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=268435456
8 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376
 
Allocating group tables: done
Writing inode tables: done
Creating journal (4096 blocks): done
Writing superblocks and filesystem accounting information: done
 
root@debian:~# mkdir mount
root@debian:~# mount /dev/sdb1 mount/
root@debian:~# df -h
Filesystem                                              Size  Used Avail Use% Mounted on
rootfs                                                   19G 1022M   17G   6% /
udev                                                     10M     0   10M   0% /dev
tmpfs                                                    50M  240K   50M   1% /run
/dev/disk/by-uuid/f5aa3b2c-46ae-4b43-8191-1173de38f1d8   19G 1022M   17G   6% /
tmpfs                                                   5.0M     0  5.0M   0% /run/lock
tmpfs                                                   276M     0  276M   0% /run/shm
/dev/sdb1                                              1007M   18M  939M   2% /root/mount</pre>


<p>あとはマウントしたディレクトリに対して好き放題アクセスしたら、切り離しておきます。
<code class="code">root@debian:~# iscsiadm -m session -u</code>
オプションは、</p>

<table>
<thead>
<tr>
<th>Option </th>
<th> Sense</th>
</tr>
</thead>
<tbody>
<tr>
<td>-m     </td>
<td> モード指定</td>
</tr>
<tr>
<td>session</td>
<td>現在はられているセッションを指定</td>
</tr>
<tr>
<td>-u</td>
<td>ログアウト</td>
</tr>
</tbody>
</table>


<p>以上がまっさらな状態からiSCSIイニシエータ／ターゲットを導入して繋げるまで、です。
これらをインストールして動作するまでにしたログに関してはgistにあげてありますので、より詳しく見たい方などよければご参照ください。</p>

<p><a href="https://gist.github.com/mzyy94/8329470">https://gist.github.com/mzyy94/8329470</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS Xで再現されるBus error: 10の原因探ってみた]]></title>
    <link href="http://mzyy94.com/blog/2013/12/18/buserr-segfault-osx/"/>
    <updated>2013-12-18T12:48:12+09:00</updated>
    <id>http://mzyy94.com/blog/2013/12/18/buserr-segfault-osx</id>
    <content type="html"><![CDATA[<p>Cです。</p>

<p>アプリケーションの例外でおこるSegmetion fault: 11 はよく目にするのですが、
OS Xで時々現れるBus error: 10 が現れる条件が気になったのでごちゃごちゃいじって探してみました。</p>

<p>こういう情報はどこかインターネットにあるのだと思ったのですが、
<a href="http://togetter.com/li/253717">Segmentation FaultとBus Errorの違いとMac &ndash; Togetterまとめ</a>
などには納得のいく答えがなかったのが今回探してみた経緯となります。</p>

<p>結論からいうと、原因の特定はできませんでした。
様子を伺うまでの手順など、やったことの記録になります。</p>

<!-- more -->


<p>早速ですが、Segmentation faultとBus errorがどういう基準で区別されているか、明確ではありません。
たとえば、<code>char a[1]</code>としたときに<code>int i = 512341232; a[i] = '\0';</code>とするとSegmentation faultになったり、
<code>int i = 512341285; a[i] = '\0';</code>とするとBus errorになったりします。
さらに、この条件は起動時に割り当てられるメモリによって変わったりするので、原因を探るのはすこし大変です。</p>

<p>しかし、記憶クラスを変えると出される例外がある程度固定されるようです。</p>

<p>まず、以下のようなコードを書いて例外が発生した状態を調べました。</p>

<script src="https://gist.github.com/mzyy94/8016375.js"></script>


<p>結果は以下の通りとなりました。</p>

<script src="https://gist.github.com/mzyy94/8017126.js"></script>


<p>staticで宣言した変数に対してのアクセスでおこる例外はBus errorとなっています。</p>

<p>そこで、次のようなコードを利用し、デバッガで探ってみました。</p>

<script src="https://gist.github.com/mzyy94/8017103.js"></script>


<p>OS X Mavericsなので、デバッガはgdbではなくlldbを用いました。
0,1,2,3の引数を与えてデバッグした結果は以下の通りになりました。</p>

<script src="https://gist.github.com/mzyy94/8017373.js"></script>


<p>この結果から、引数をそれぞれ与えたときのエラーメッセージはどれもEXC_BAD_ACCESSで、
このメッセージの中のエラーコードが1もしくは2ということで分かれています。例外は、2がSIGBUSで1がSIGSEGVであるようです。</p>

<p>disassembleした結果が面白いことになっています。
処理が違うのがわかりますが、ここでアセンブラをみてみます。</p>

<script src="https://gist.github.com/mzyy94/8017712.js"></script>


<script src="https://gist.github.com/mzyy94/8017515.js"></script>


<p>アセンブラのコードでは、switch文中のcaseにあたるの部分が、上から順に</p>

<table>
<thead>
<tr>
<th>Cソース </th>
<th>アセンブラ</th>
</tr>
</thead>
<tbody>
<tr>
<td>case &lsquo;0&rsquo;</td>
<td>LBB0_5:</td>
</tr>
<tr>
<td>case &lsquo;1&rsquo;</td>
<td>LBB0_6:</td>
</tr>
<tr>
<td>case &lsquo;2&rsquo;</td>
<td>LBB0_7:</td>
</tr>
<tr>
<td>default </td>
<td>LBB0_8:</td>
</tr>
</tbody>
</table>


<p>と、対応しています。</p>

<p>このアセンブラを追いかけてみていると、値は次のように対応付けしているようです。</p>

<table>
<thead>
<tr>
<th>Cソース </th>
<th>アセンブラ</th>
</tr>
</thead>
<tbody>
<tr>
<td>c[]     </td>
<td> -17(%rbp)</td>
</tr>
<tr>
<td>s[]     </td>
<td> _main.s(%rip)</td>
</tr>
<tr>
<td>i       </td>
<td> -24(%rbp)</td>
</tr>
</tbody>
</table>


<p>LBB0_5と、LBB0_6をみてみると、
leaq(64bit Load Effective Address)で実効アドレスから変数s[]を%raxレジスタに格納しています。
その次にはmovslq(64bit Move Signed Long)で変数iを%rcxに格納しています。
この読み出した%raxレジスタの%rcx番目、すなわち、s[i]にアクセス際に例外が発生しています。</p>

<p>LBB0_7と、LBB0_8をでは、
leaqはせず、
movslqでレジスタ%raxに格納した変数iを-17(%rbp,%rax)としてアクセス、すなわちc[i]としてアクセスしたところで例外が発生しています。</p>

<p>さて、この二つ組の違いはleaqにありますが、leaq命令事態はforループ中のレジスタ操作効率化のためのものなので、特段問題を抱えているようすはありません。
また、アセンブラコードの下部にある.zerofillはstatic変数に対するものですが、この命令はゼロ埋めするというもので、static変数の初期値に0を代入するものなので、これも影響は与えていません。<a href="https://developer.apple.com/library/mac/documentation/DeveloperTools/Reference/Assembler/040-Assembler_Directives/asm_directives.html" title="OS X ">1</a></p>

<p>ほかの部分に関してもアクセス例外が明確に違うところは見あたらず、根本的原因はわかりませんでした。</p>

<p>おしまい</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[まどマギコンサート名古屋行ってきた]]></title>
    <link href="http://mzyy94.com/blog/2013/12/11/madomagi-concert-nagoya/"/>
    <updated>2013-12-11T23:50:50+09:00</updated>
    <id>http://mzyy94.com/blog/2013/12/11/madomagi-concert-nagoya</id>
    <content type="html"><![CDATA[<p>昨日に開催された魔法少女まどか☆マギカ オーケストラ・コンサートに行ってきまし。
このオーケストラコンサートは各所ですでに開演されており、今回行った名古屋公演で4回目とのことです。
少しの写真とコンサートを聴いた雑感をまとめておきます。</p>

<!-- more -->


<h2>会場</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2013/12/11/madocon-1.jpg" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/11/madocon-2.jpg" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/11/madocon-3.jpg" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/11/madocon-4.jpg" alt="alt" /></p>

<p>名古屋公演は<a href="http://www.aac.pref.aichi.jp/">愛知芸術文化センター</a>内の<a href="http://www.aac.pref.aichi.jp/gekijyo/">愛知芸術劇場</a>5階、<a href="http://www.aac.pref.aichi.jp/gekijyo/c_hole.html">コンサートホール</a>にて開催されました。
栄駅降りてすぐのところで、開場1時間前には辺りも暗くなり、隣接するオアシス２１とテレビ塔が綺麗に光り輝いていました。
このコンサートホールは県内でも有名なコンサートホールで、公式サイトにある、</p>

<blockquote><p>クラシック音楽に最適な豊かな響きを持った本格的なコンサート専用ホールです。</p>

<p>残響時間は満席時に約2.1秒となるよう設計されており、第一級の音響を提供します。</p>

<p>シューボックス型がもつ音響特性の良さと、アリーナ型がもつ舞台と客席の一体感を合わせもつ、バルコニー型を併用したアリーナ型のホールです。</p></blockquote>

<p>との謳い文句が誇大ではないというのが実際、ハープの調律の際に感じ取れました。</p>

<h2>客数</h2>

<p>事前に販売されていたチケットは完売で、予定されていた席はほぼ埋まっている様子でした。
空席はほぼなかったと見て取れました。</p>

<p>事前販売チケットがよく捌けたことで機転を利かせてか、まどか☆マギカ公式ツイッターアカウントは、</p>

<blockquote class="twitter-tweet" lang="ja"><p>本日開催の『劇場版　魔法少女まどか☆マギカ』オーケストラ・コンサート名古屋公演ですが、機材席の一部を解放しまして当日券を若干ではございますが販売することになりました。当日券は18時より販売致します。枚数が限られており、完売の場合はご了承ください。 <a href="https://twitter.com/search?q=%23madoka_magica&amp;src=hash">#madoka_magica</a></p>&mdash; 魔法少女まどか☆マギカ (@madoka_magica) <a href="https://twitter.com/madoka_magica/statuses/410683990618566656">2013, 12月 11</a></blockquote>


<script async src="http://mzyy94.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>とつぶやき、急遽当日券を用意してくださっていました。</p>

<h2>客層</h2>

<p>中学生らしき制服を着た男の子からおばあちゃん世代の方まで幅広い層の客が集まっている印象でした。
この手のイベントでは男性が多いという勝手な想像があったのですが、
辺りを見渡してみると、男女比ほぼ半々のようですごい幅広い客層が集まっていると感じました。</p>

<p>特に珍しいと思ったのが、親子連れで来ている客が数組いたことです。
アニメだからというこだわりを持たず、オーケストラ・コンサートを純粋に聴きに来ている方も多いのではという雑感をいだきました。</p>

<h2>物販</h2>

<p>会場ではまどか☆マギカ関連グッズの販売をしていました。</p>

<p>ローソンHMV関連グッズが多い中、コンサート限定パンフレットの販売もしておりました。
このパンフレットを多くの人が求め、物販には行列ができていました。
人だかりが見える写真は開場直後のロビーの様子で、左側の壁に沿って並んでいるのが物販を求める人達の列です。</p>

<p>せっかくなのでパンフレットと、会場入りする前の水分補給として十六茶を購入しました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2013/12/11/madocon-5.jpg" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/11/madocon-6.jpg" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/11/madocon-7.jpg" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/11/madocon-8.jpg" alt="alt" /></p>

<h2>ホール内</h2>

<p>名古屋公演の特別演出として、他の会場にはない【スクリーン・コンサート形式】という演出をすると<a href="http://www.aim-vil.com/sponsor/madoka-concert/12-11-%E5%90%8D%E5%8F%A4%E5%B1%8B%E5%85%AC%E6%BC%94/">公式サイト</a>に記載がありました。
説明では、</p>

<blockquote><p>オーケストラの生演奏＋名場面をスクリーンに投影（静止画）！
目と耳でお楽しみいただける公演形式です。</p></blockquote>

<p>とありました。
ステージ中央上空に設置されているスクリーンがこの演出に使われるものでした。</p>

<p>１階席の最後部にはマイクロフォンが設置されていました。
全公演終了後にCD化して発売でもするのでしょうか？</p>

<p>開演前にすでに、<a href="http://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%BC%E3%83%97">ハープ</a>や<a href="http://ja.wikipedia.org/wiki/%E3%82%A6%E3%82%A3%E3%83%B3%E3%83%89%E3%83%9E%E3%82%B7%E3%83%BC%E3%83%B3">ウィンドマシン</a>などのいくつか大きな楽器が設置されていました。</p>

<p>奏者の方が演奏前に舞台風景に関して写真付きでつぶやいておられました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>まどか☆マギカオーケストラの名古屋公演。いよいよ今日の夜です。&#10;とっても素晴らしい響きのホールですよ！ <a href="http://t.co/qeL6D8Jgak">pic.twitter.com/qeL6D8Jgak</a></p>&mdash; 待山 一生 (@machiyamaissei) <a href="https://twitter.com/machiyamaissei/statuses/410479386731618304">2013, 12月 10</a></blockquote>


<script async src="http://mzyy94.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<blockquote class="twitter-tweet" lang="ja"><p>朝からパーカッションパートの方々と優雅な朝食済ませて、ホール入り。&#10;大好きなアニメの演奏を、素晴らしいホールや素敵なオーケストラ、指揮者、そして楽しい仲間と出来るって、それはとっても嬉しいなって。 <a href="http://t.co/3FEE0zlhGX">pic.twitter.com/3FEE0zlhGX</a></p>&mdash; 待山 一生 (@machiyamaissei) <a href="https://twitter.com/machiyamaissei/statuses/410582767705944064">2013, 12月 11</a></blockquote>


<script async src="http://mzyy94.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<blockquote class="twitter-tweet" lang="ja"><p>まもなく、魔法少女まどか☆マギカのオーケストラコンサート名古屋公演です。視覚と聴覚の両方で、魔法少女たちの物語を感じてください。<a href="https://twitter.com/search?q=%23madoka_magica&amp;src=hash">#madoka_magica</a> <a href="http://t.co/m2sZlhFQL4">pic.twitter.com/m2sZlhFQL4</a></p>&mdash; 待山 一生 (@machiyamaissei) <a href="https://twitter.com/machiyamaissei/statuses/410691793655578625">2013, 12月 11</a></blockquote>


<script async src="http://mzyy94.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<h2>演奏</h2>

<p>この名古屋公演は19:00開演で、開演５分前には鈴が鳴り始まる旨を合図していました。
その合図の後、暁美ほむら役の斎藤千和さんが場内アナウンスで注意事項等の連絡をしていました。
公式サイトにあるよう、当日は事前集力での出演だということなので録音のアナウンスのようです。</p>

<p>曲目は<a href="http://www.aim-vil.com/sponsor/madoka-concert/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0/">公式サイトのコンサート・プログラム</a>に載っています。
このページの最後にも引用して載せておきました。</p>

<p>アナウンスが終わり、奏者と識者が入場しました。
壮大な拍手で迎えられ、静かになった後、演奏が始まりました。</p>

<p>コーラスと共にSis puella magica!(通称：営業のテーマ)が奏でられ、暁美ほむらさんのナレーションがありました。
この曲はコンサートの序曲だったようで、次から本編が始まると暁美ほむらさんはおっしゃっていました。</p>

<p>本編が始まってからは感動の嵐でした。
オーケストラ用にアレンジされた生演奏の曲はどれも美しく、聴いていて心地よかったです。
劇場版のストーリー順を意識しながら演奏順が組まれており、物語の流れを感じながら聴き入っていました。
さらには、名古屋公演だけの特別演出である【スクリーン・コンサート形式】によって物語の場面場面が投映され、
曲のシーンを鮮明に意識できたので、楽曲とストーリーとの関連を聴き取りながら感じられました。
他の公演ではキャストの方が出演されていたので、この名古屋公演のスクリーン・コンサート形式には賛否両論ありましたが、
実際に体験してみると、とてもよい環境で聴けたので十分満足できました。</p>

<p>演奏に関しての感想は、全体的には個々の楽器の音色をオーケストラ用にしっかりと編成してあり、とくにバイオリンやフルートが目立つように聴こえました。
ただ、席の都合かスピーカーからでる電子楽器の音が大きく、コーラスとともに奏でられる曲は声が届きづらかったです。
しかし、コーラスや小さい音色を出す楽器と共演せず、ベースギター・エレキギターが弾ける曲はとても響いてよく聴こえました。</p>

<p>奏でられたすべての曲に感想を書いていても長くだらだらと続いていくだけなので、特に印象に残った曲をピックアップして感想を書いていきます。</p>

<h4>a human bullet</h4>

<p>典型的なエレキギターやドラムが響きわたっていて元気になる曲でした。</p>

<h4>Confessio</h4>

<p>トーンチャイムによる柔らかな音色と鍵盤打楽器によるメロディーに安らぎを感じる曲でした。</p>

<h4>Witch world #2</h4>

<p>二人のしっかりとしたコーラスが曲の注目を寄せ付け、それと強調して奏でられる楽器の音色とがとてもバランスよく、聴き応えがありました。</p>

<h4>she is a witch</h4>

<p>Which world #2に続いて演奏されたのがこの曲。男性コーラス人も参加した全体のコーラスが他の楽曲とは比べ物にならないほどの迫力あり、テンポも軽快で前半の〆として、後半の演奏に期待させる終わり方でした。</p>

<h4>Symposium magarum</h4>

<p>劇中でもオーケストラとして演奏されるシーンで登場した曲なので、実際にオーケストラコンサートで演奏されると、もうそれは涙が出てもおかしくない感動がえられました。</p>

<h4>mother and daughter</h4>

<p>とてもきれいでしなやかな演奏でした。ピアノソロで奏でる曲はいくつかあったのですが、これは映像とともに劇中のシーンの感動をさらに思い起こさせる演奏であったため、特に心に残っています。</p>

<p>前半後半すべての曲がおわり、指揮者が降壇したとき、
演奏中は曲間に拍手で感動を表すことができなかったからか、会場からまさに言葉通り壮大な拍手が贈られました。</p>

<p>プログラムが終了し、指揮者が舞台袖にはけたと思うと、バイオリニストとピアニストが立ち上がり、スポットライトを浴びました。
場内全員がいまから何が起こるのか静かに待っていると、ここであの名曲が奏でられました。
<a href="http://upload.wikimedia.org/wikipedia/commons/a/ab/Rappold_and_Spalding_-_Ave_Maria_%28Bach%2C_Gounod%29.ogg">グノーのアヴェ・マリア</a>です。
思わず泣いてしまいそうでした。</p>

<p>これが終わると指揮者が戻り、アンコール曲として、for the next episodeが流れました。
これもまたフルートが綺麗に鳴り響いており、また、最後の曲となると思うと涙が流れてきました。</p>

<p>最後に指揮者の挨拶があり、「みなさんでMagiaを楽しみましょう」とおっしゃり、会場全体が手拍子をして盛り上がり公演は終了しました。</p>

<p>会場は感動にあふれ、奏者全員が舞台から見えなくなるまで今日一番の拍手が鳴り響き、今日の公演はすべて終了しました。</p>

<p>公演終了後、主催会社のツイッターでは場内の様子がつぶやかれていました。</p>

<blockquote class="twitter-tweet" lang="en"><p>名古屋公演は無事終了しました！ホールからの撤収も完了しました。ご来場下さった全てのお客様に感謝申し上げます！&#10;ありがとうございました！！ <a href="http://t.co/EoFnAmimi2">pic.twitter.com/EoFnAmimi2</a></p>&mdash; 株式会社アイムビレッジ (@AimVil_MusicDiv) <a href="https://twitter.com/AimVil_MusicDiv/statuses/410771901640749056">December 11, 2013</a></blockquote>


<script async src="http://mzyy94.com//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>以上、劇場版 魔法少女まどか☆マギカ オーケストラ・コンサートに行ってきた感想でした。</p>

<h3>コンサート・プログラム</h3>

<p>引用元：<a href="http://www.aim-vil.com/sponsor/madoka-concert/%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%A0/">AIM VILLAGE 劇場版魔法少女まどか☆マギカ オーケストラ・コンサート コンサート・プログラム</a></p>

<ol>
<li>Sis puella magica! <a href="https://itunes.apple.com/jp/album/sis-puella-magica!/id575591707?i=575591878&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Terror adhaerens <a href="https://itunes.apple.com/jp/album/terror-adhaerens/id575591707?i=575591889&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Salve, terrae magicae <a href="https://itunes.apple.com/jp/album/salve-terrae-magicae/id575591707?i=575591879&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>ルミナス <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Postmeridie <a href="https://itunes.apple.com/jp/album/postmeridie/id575591707?i=575591885&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Puella in somnio <a href="https://itunes.apple.com/jp/album/puella-in-somnio/id575591707?i=575591886&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Desiderium <a href="https://itunes.apple.com/jp/album/desiderium/id575591707?i=575591883&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>未来 <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Credens justitiam <a href="https://itunes.apple.com/jp/album/credens-justitiam/id575591707?i=575591881&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Venari strigas <a href="https://itunes.apple.com/jp/album/venari-strigas/id575674580?i=575675032&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Clementia <a href="https://itunes.apple.com/jp/album/clementia/id575591707?i=575591882&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>warning #2 <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Agmen clientum <a href="https://itunes.apple.com/jp/album/agmen-clientum/id575674580?i=575675031&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Amicae carae meae <a href="https://itunes.apple.com/jp/album/amicae-carae-meae/id575674580?i=575675035&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>wo ist die Käse? <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Signum malum <a href="https://itunes.apple.com/jp/album/signum-malum/id575674580?i=575675034&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Incertus <a href="https://itunes.apple.com/jp/album/incertus/id575674580?i=575675036&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Serena ira <a href="https://itunes.apple.com/jp/album/serena-ira/id575674580?i=575675038&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Decretum <a href="https://itunes.apple.com/jp/album/decretum/id575674580?i=575675030&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Anima mala <a href="https://itunes.apple.com/jp/album/anima-mala/id575674580?i=575675039&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>a human bullet <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Inevitabilis <a href="https://itunes.apple.com/jp/album/inevitabilis/id575674580?i=575675037&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>fateful #2 <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Confessio <a href="https://itunes.apple.com/jp/album/confessio/id576314620?i=576314710&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>witch world #2 <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>she is a witch <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Fateful #4 <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Symposium magarum <a href="https://itunes.apple.com/jp/album/symposium-magarum/id576314620?i=576314712&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>I miss you <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Numquam vincar <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>magia [quattro] <a href="https://itunes.apple.com/jp/album/magia-quattro/id573784184?i=573784188&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>コネクト <a href="https://itunes.apple.com/jp/album/konekuto/id570085121?i=570085122&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>mother and daughter <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Surgam identidem <a href="https://itunes.apple.com/jp/album/surgam-identidem/id576314620?i=576314709&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
<li>Sagitta luminis <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>her wings <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>rebirth <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Taenia memoriae <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>Pergo pugnare  <a href=""><i class="glyphicon glyphicon-music"></i></a></li>
<li>ひかりふる <a href="https://itunes.apple.com/jp/album/hikarifuru/id573784184?i=573784186&amp;uo=4&amp;at=1l3v4mQ"><i class="glyphicon glyphicon-music"></i></a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NAS4FreeでTime Machineの設定するメモ]]></title>
    <link href="http://mzyy94.com/blog/2013/12/10/timemachine-with-nas4free/"/>
    <updated>2013-12-10T12:58:47+09:00</updated>
    <id>http://mzyy94.com/blog/2013/12/10/timemachine-with-nas4free</id>
    <content type="html"><![CDATA[<p>Mavericksの登場で手元のMacBook Airをクリーンインストールしました。
その際、バックアップから復元するような手段は取らず、必要なデータのみを移して環境を再構築しました。
というのも、いままではTime Machineでバックアップを取っていなかったがために復元する手段がなかったのです。</p>

<p>次のバージョンでもクリーンインストールする予定ではありますが、突然のデータ消失に備えてTime Machineでの定期バックアップをするようにしました。</p>

<p>Time Machineのバックアップ先としては主に利用されるのは外付けドライブやTime Capsuleなどいろいろなバックアップ先があります。
しかし、MacBook Airをポータブル端末として利用している身としては、バックアップのたびにケーブルを抜き差しするのは効率を落とすだけでなく、バックアップ中は移動ができなくなってしまうため、候補から外しました。</p>

<p>ケーブルレスでTime Machineの機能を使う方法としては、無線LAN経由でネットワークストレージにバックアップする方法に限られてきてしまいます。
Time Machineのバックアップ用ネットワークストレージとして、Appleからは<a href="http://store.apple.com/jp/product/ME177/airmac-time-capsule-2tb">AirMac Time Capsule</a>なるものが発売されていますが、これが如何せんお高い。
主な機能としてのTime MachineのバックアップとIEEE802.11ac対応無線LANルータの２つを備えた2TBのもので29,800円するという。
もっと多機能で安価なものを自分で構成したいという欲が湧いてきました。</p>

<!-- more -->


<p>前置きが長くなりましたが、ここからが本題です。
NASを建ててTime Machineのバックアップ先にするというお仕事になります。</p>

<p>まず、NASを立てるところから始めます。既成品のNASはいじりがいがいがないので却下しました。
<strong>たまたま</strong>自宅にAcer Aspire H340なるサーバー用のマシンが転がっていたのでこれを流用します。
ストレージには<a href="http://www.amazon.co.jp/gp/product/B009QWUF6M/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=247&amp;creative=1211&amp;creativeASIN=B009QWUF6M&amp;linkCode=as2&amp;tag=mzyy940f-22">WD Green 3.5inch 2.0TB</a>を利用します。</p>

<p>ハードウェアが準備出来たら次はソフトウェアです。NAS向けのOSはいくつか存在しています。</p>

<ul>
<li><a href="http://freenas.org/">FreeNAS</a></li>
<li><a href="http://www.nas4free.org/">NAS4Free</a></li>
<li><a href="http://openmediavault.org/">OpenMediaVault</a></li>
<li><a href="http://www.openfiler.com/">Openfiler</a></li>
<li><a href="http://cryptonas.org/">CryptoNAS</a></li>
</ul>


<p>どれも得意な機能を持っており、その特徴と利用したい機能が一致したものを利用すればいいのですが、今回用意したH340のマシンは256MBのオンボードフラッシュストレージを搭載しているので、その256MBに収まるものに限定することにしました。
今回リストアップしたなかでは、NAS4Freeが機能的にもよく、256MBにも収まるものでしたのでこれを選択しました。</p>

<h2>NAS4Freeのインストール</h2>

<p>ダウンロードしたx8664のイメージをCDに焼き、ブートして起動してEmbeddedインストールするだけです。
このEmbeddedインストールではイメージファイルを書き込むもので、256MBに収まる用にできています。
FreeNASも同じくEmbededインストールをサポートしていますが、2GBの容量が必要とのことですので断念しました。</p>

<h2>起動</h2>

<p>ネットワークの設定をして起動し、<a href="http://nas4free.local">nas4free.local</a>にアクセスします。</p>

<h2>設定</h2>

<h3>ディスクの設定</h3>

<p>NAS4Freeが起動したら</p>

<ol>
<li>Disk->Managementでディクスをオンラインにし、</li>
<li>Disk->Formatでフォーマットした後に、</li>
<li>Disk->Mount pointでマウントします。</li>
</ol>


<p>フォーマット形式はUFSにしました。
以前、FreeNAS用にZFSで作った際にpoolを破壊してしまってデータが吹っ飛んだ経験があるため、ZFSは避けましたが、
メモリが潤沢に搭載されているシステムであればraidzを利用してもいいかと思います。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2013/12/10/NAS4Free-1.png" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/10/NAS4Free-2.png" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/10/NAS4Free-3.png" alt="alt" /></p>

<h3>AFPの設定</h3>

<p>Services->AFPにて、</p>

<ol>
<li>SettingsタブをEnableにし、 Enable local user authentication. にチェックしてサービスを開始し、</li>
<li>Shareタブで、</li>
</ol>


<hr />

<ul>
<li>Name: 適当な名前</li>
<li>Comment: 適当なコメント</li>
<li>Path: 先ほどマウントしたマウントポイント以下の任意のパス</li>
<li>Share Character Set: UTF8</li>
<li>Allow: timecapsule</li>
<li>Read/Write Access: timecapsule</li>
<li>Automatic disk discovery: Enable</li>
<li>Automatic disk discovery mode: Time Machine</li>
</ul>


<hr />

<p>と、設定します。ほかはデフォルトのままにしました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2013/12/10/NAS4Free-4.png" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/10/NAS4Free-5.png" alt="alt" />
<img src="http://mzyy94.com/blog/resources/images/2013/12/10/NAS4Free-6.png" alt="alt" /></p>

<p>この設定で、同一ネットワークにつながったMacからTime Machineの設定を開くと以下のように、バックアップ先に設定できるようになっていると思います。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2013/12/10/NAS4Free-7.png" alt="Time Machineの設定画面" /></p>

<p>設定方法と、NASの紹介でした。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[blogを建ててみた]]></title>
    <link href="http://mzyy94.com/blog/2013/12/07/create-new-blog/"/>
    <updated>2013-12-07T18:22:11+09:00</updated>
    <id>http://mzyy94.com/blog/2013/12/07/create-new-blog</id>
    <content type="html"><![CDATA[<p>いままで情報を発信する場として、確かなものが周りになかったので新年に向けて新しくブログを作成しました。
よろしくお願いします。</p>

<p>今回はサイトのホスティングとして、Github pagesを用いることにしました。Github pagesでブログを制作する方法に関しては、
<a href="http://morizyun.github.io/blog/octopress-gitpage-minimum-install-guide/" title="OctopressでGitHub無料ブログ構築。sourceをBitbucket管理。簡単ガイド！ - 酒と泪とRubyとRailsと">こちら</a>とかで確認して下さい。</p>

<p>ブログのスタイリングのために、今回はBootstrapをベースに構成しました。BootstrapはOOCSSを謳っているものの、
オブジェクト指向特有のごちゃごちゃしたプロパティ名が好みではなかったので利用を控えていました。
ではなぜBootstrapを選んだかというと、単純にスタイルテンプレートがBootstrap向けだったためです。</p>

<!-- more -->


<p>サイトデザインを模索しているときに出会ったとても気に入ったテーマがありました。<a href="http://pixelkit.com/" title="Premium Web UI Kits &amp; Design Resources | PixelKit">PixelKit</a>で公開されている<a href="http://pixelkit.com/kits/flat-ui-kit" title="Flat UI Kit | Modern Touch">Modern Touch</a>というものです。
最近の流行であるフラットデザインをシンプルな配色で実装し、中途半端さが無く、とても清潔感あふれている点に惹かれました。
しかしここで気になったのがデザインの配布形式です。</p>

<p>過去から現在にかけてWeb UIデザインは各所で提案され公開されてきていますが、公開形式として大半を占めているのがPSD形式のものです。
HTML5やCSS3が主要となりつつある現代WebデザインにおいてはUIに多くの画像を用いることはあまり好まれません。
汎用性が高いという理由でしょうが、Web UIやUIデザインが提供されている形式はPSD形式ばかりです。
そんなサイトがたくさんある中、少数派であるHTML5とCSS3を用いてサイトデザインを提供公開しているサイトにもれず、<a href="http://pixelkit.com/" title="Premium Web UI Kits &amp; Design Resources | PixelKit">Pixelkit</a>もHTML5/CSS3でデザインを提供していたのです。</p>

<p>このサイトにあるデザインはすべてが無料で提供されているわけではありません。公開されているデザインをすべて利用するには年間Subscriptionが必要です。
しかし、今回使用したテーマのModern touchを始め、いくつかのデザインは<a href="https://github.com/Pixelkit/PixelKit-Bootstrap-UI-Kits">GitHubにて公開</a>されています。ライセンスは<a href="http://creativecommons.org/licenses/by/3.0/" title="Creative Commons — Attribution 3.0 Unported — CC BY 3.0">CC BY 3.0</a>と<a href="http://opensource.org/licenses/mit-license.html" title="The MIT License (MIT) | Open Source Initiative">MIT</a>です。</p>

<p>「せっかくよいデザインを見つけたのだから使いたい」と思ったので使うことにしました。
サイトデザインのために、好みでなかったTwitter Bootstrapを利用しはじめ、Octopressのテーマをいじっていきました。
時々出力されたサイトのソースをみるとこんなかんじになっていました。</p>

<figure>
<img src="http://mzyy94.com/blog/resources/images/2013/12/07/blog-html-sourcecode.png" alt="blog html sourcecode" />
<figcaption class="boxed-green">blogのソースコード</figcaption>
</figure>


<p>OOCSSの影響でclassが溢れて可読性が下がると思っていましたが、この程度の組み方であればあまり影響はないようです。</p>

<p>GitHub pagesとOctopressによってブログを書き始めました。というお話でした。
まだまだ未熟者ですが今後とも宜しくお願いします。</p>
]]></content>
  </entry>
  
</feed>
